Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENTS

Grammar

Rule 0     S' -> program
Rule 1     empty -> <empty>
Rule 2     type_of -> DOUBLEDOTS args
Rule 3     type_of -> empty
Rule 4     id -> ID type_of
Rule 5     program -> functions_types_protocols global_high_level_expression
Rule 6     global_high_level_expression -> high_level_expression
Rule 7     global_high_level_expression -> empty
Rule 8     functions_types_protocols -> function_definition functions_types_protocols
Rule 9     functions_types_protocols -> type_def functions_types_protocols
Rule 10    functions_types_protocols -> protocol_definition functions_types_protocols
Rule 11    functions_types_protocols -> empty
Rule 12    protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon
Rule 13    opt_extends -> EXTENDS ID
Rule 14    opt_extends -> empty
Rule 15    protocol_methods -> protocol_method protocol_methods
Rule 16    protocol_methods -> protocol_method empty
Rule 17    protocol_method -> ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON
Rule 18    args -> ID
Rule 19    args -> OBJECT
Rule 20    args -> NUMBERTYPE
Rule 21    args -> STRINGTYPE
Rule 22    args -> BOOLEANTYPE
Rule 23    protocol_methods_arguments -> ID DOUBLEDOTS args protocol_methods_arguments_rem
Rule 24    protocol_methods_arguments -> empty
Rule 25    protocol_methods_arguments_rem -> COMMA ID DOUBLEDOTS args protocol_methods_arguments_rem
Rule 26    protocol_methods_arguments_rem -> empty
Rule 27    expression -> func_call_next
Rule 28    func_call_next -> ID LPAREN func_call_args RPAREN
Rule 29    expression -> type_call
Rule 30    type_call -> NEW ID LPAREN func_call_args RPAREN
Rule 31    func_call_args -> func_call_args_list
Rule 32    func_call_args_list -> expression func_call_args_list_rem
Rule 33    func_call_args_list -> empty
Rule 34    func_call_args_list_rem -> COMMA expression func_call_args_list_rem
Rule 35    func_call_args_list_rem -> empty
Rule 36    function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression
Rule 37    function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
Rule 38    func_params -> func_params_list
Rule 39    func_params_list -> id func_params_list_rem
Rule 40    func_params_list -> empty
Rule 41    func_params_list_rem -> COMMA id func_params_list_rem
Rule 42    func_params_list_rem -> empty
Rule 43    type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon
Rule 44    optional_inheritance -> INHERITS ID optional_inheritance_params
Rule 45    optional_inheritance -> empty
Rule 46    optional_inheritance_params -> LPAREN func_call_args RPAREN
Rule 47    optional_inheritance_params -> empty
Rule 48    optional_type_params -> LPAREN typedef_params RPAREN
Rule 49    optional_type_params -> empty
Rule 50    typedef_params -> id typedef_params_rem
Rule 51    typedef_params -> empty
Rule 52    typedef_params_rem -> COMMA id typedef_params_rem
Rule 53    typedef_params_rem -> empty
Rule 54    type_members -> type_member type_members
Rule 55    type_members -> empty
Rule 56    type_member -> member_func
Rule 57    member_func -> ID LPAREN func_params RPAREN type_of ARROW high_level_expression
Rule 58    member_func -> ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
Rule 59    type_member -> member_var
Rule 60    member_var -> id ASIGN high_level_expression
Rule 61    expression -> expression_block
Rule 62    high_level_expression -> expression SEMICOLON
Rule 63    high_level_expression -> expression_block
Rule 64    expression_block -> LBRACE expression_block_list RBRACE
Rule 65    expression_block_list -> high_level_expression expression_block_list
Rule 66    expression_block_list -> empty
Rule 67    high_level_expression -> LET assign_values IN high_level_expression
Rule 68    expression -> LET assign_values IN expression
Rule 69    assign_values -> id ASIGN expression rem_assignments
Rule 70    rem_assignments -> COMMA id ASIGN expression rem_assignments
Rule 71    rem_assignments -> empty
Rule 72    high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression
Rule 73    expression -> IF expression_parenthized expression opt_elifs ELSE expression
Rule 74    opt_elifs -> ELIF expression_parenthized expression opt_elifs
Rule 75    opt_elifs -> empty
Rule 76    optional_semicolon -> SEMICOLON
Rule 77    optional_semicolon -> empty
Rule 78    high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression
Rule 79    expression -> FOR LPAREN destroyable IN expression RPAREN expression
Rule 80    high_level_expression -> WHILE expression_parenthized high_level_expression
Rule 81    expression -> WHILE expression_parenthized expression
Rule 82    expression -> expression_parenthized
Rule 83    expression_parenthized -> LPAREN expression RPAREN
Rule 84    destroyablel -> ID
Rule 85    destroyablel -> ID DOT ID
Rule 86    expression -> ID DOT member_resolut
Rule 87    destroyabler -> ID LBRAC expression RBRAC
Rule 88    destroyabler -> ID DOT ID LBRAC expression RBRAC
Rule 89    expression -> expression PLUS expression
Rule 90    expression -> expression MINUS expression
Rule 91    expression -> expression TIMES expression
Rule 92    expression -> expression DIVIDE expression
Rule 93    expression -> expression POWER expression
Rule 94    expression -> expression MODULE expression
Rule 95    expression -> expression CONCAT expression
Rule 96    expression -> expression DOUBLECONCAT expression
Rule 97    expression -> expression AND expression
Rule 98    expression -> expression OR expression
Rule 99    expression -> expression EQUAL expression
Rule 100   expression -> expression DIFFERENT expression
Rule 101   expression -> expression MINOREQUAL expression
Rule 102   expression -> expression MAJOREQUAL expression
Rule 103   expression -> expression MINOR expression
Rule 104   expression -> expression MAJOR expression
Rule 105   expression -> expression IS type_test
Rule 106   expression -> expression AS type_test
Rule 107   expression -> destroyablel DESTRUCTASIGN expression
Rule 108   expression -> destroyabler DESTRUCTASIGN expression
Rule 109   high_level_expression -> expression PLUS high_level_expression
Rule 110   high_level_expression -> expression MINUS high_level_expression
Rule 111   high_level_expression -> expression TIMES high_level_expression
Rule 112   high_level_expression -> expression DIVIDE high_level_expression
Rule 113   high_level_expression -> expression POWER high_level_expression
Rule 114   high_level_expression -> expression MODULE high_level_expression
Rule 115   high_level_expression -> expression CONCAT high_level_expression
Rule 116   high_level_expression -> expression DOUBLECONCAT high_level_expression
Rule 117   high_level_expression -> expression AND high_level_expression
Rule 118   high_level_expression -> expression OR high_level_expression
Rule 119   high_level_expression -> expression EQUAL high_level_expression
Rule 120   high_level_expression -> expression DIFFERENT high_level_expression
Rule 121   high_level_expression -> expression MINOREQUAL high_level_expression
Rule 122   high_level_expression -> expression MAJOREQUAL high_level_expression
Rule 123   high_level_expression -> expression MINOR high_level_expression
Rule 124   high_level_expression -> expression MAJOR high_level_expression
Rule 125   high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression
Rule 126   high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression
Rule 127   destroyable -> ID
Rule 128   type_test -> args
Rule 129   expression -> member_resolute
Rule 130   member_resolute -> expression DOT member_resolut
Rule 131   member_resolut -> ID
Rule 132   member_resolut -> func_call_next
Rule 133   expression -> NOT expression
Rule 134   expression -> MINUS expression
Rule 135   high_level_expression -> NOT high_level_expression
Rule 136   high_level_expression -> MINUS high_level_expression
Rule 137   expression -> NUMBER
Rule 138   expression -> STRING
Rule 139   expression -> ID
Rule 140   expression -> vector
Rule 141   vector -> LBRAC func_call_args RBRAC
Rule 142   vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC
Rule 143   expression -> expression LBRAC expression RBRAC
Rule 144   expression -> PI
Rule 145   expression -> E
Rule 146   expression -> TRUE
Rule 147   expression -> FALSE
Rule 148   expression -> PRINT LPAREN expression RPAREN
Rule 149   expression -> RANGE LPAREN expression RPAREN
Rule 150   expression -> RANGE LPAREN expression COMMA expression RPAREN
Rule 151   expression -> SQRT LPAREN expression RPAREN
Rule 152   expression -> SIN LPAREN expression RPAREN
Rule 153   expression -> COS LPAREN expression RPAREN
Rule 154   expression -> EXP LPAREN expression RPAREN
Rule 155   expression -> LOG LPAREN expression COMMA expression RPAREN
Rule 156   expression -> RAND LPAREN RPAREN

Terminals, with rules where they appear

AND                  : 97 117
ARROW                : 36 57
AS                   : 106
ASIGN                : 60 69 70
BOOLEANTYPE          : 22
COMMA                : 25 34 41 52 70 150 155
COMMENTS             : 
CONCAT               : 95 115
COS                  : 153
DESTRUCTASIGN        : 107 108 125 126
DIFFERENT            : 100 120
DIVIDE               : 92 112
DOT                  : 85 86 88 130
DOUBLECONCAT         : 96 116
DOUBLEDOTS           : 2 17 23 25
E                    : 145
ELIF                 : 74
ELSE                 : 72 73
EQUAL                : 99 119
EXP                  : 154
EXTENDS              : 13
FALSE                : 147
FOR                  : 78 79
FUNCTION             : 36 37
GENERATOR            : 142
ID                   : 4 12 13 17 18 23 25 28 30 36 37 43 44 57 58 84 85 85 86 87 88 88 127 131 139
IF                   : 72 73
IN                   : 67 68 78 79 142
INHERITS             : 44
IS                   : 105
LBRAC                : 87 88 141 142 143
LBRACE               : 12 43 64
LET                  : 67 68
LOG                  : 155
LPAREN               : 17 28 30 36 37 46 48 57 58 78 79 83 148 149 150 151 152 153 154 155 156
MAJOR                : 104 124
MAJOREQUAL           : 102 122
MINOR                : 103 123
MINOREQUAL           : 101 121
MINUS                : 90 110 134 136
MODULE               : 94 114
NEW                  : 30
NOT                  : 133 135
NUMBER               : 137
NUMBERTYPE           : 20
OBJECT               : 19
OR                   : 98 118
PI                   : 144
PLUS                 : 89 109
POWER                : 93 113
PRINT                : 148
PROTOCOL             : 12
RAND                 : 156
RANGE                : 149 150
RBRAC                : 87 88 141 142 143
RBRACE               : 12 43 64
RPAREN               : 17 28 30 36 37 46 48 57 58 78 79 83 148 149 150 151 152 153 154 155 156
SEMICOLON            : 17 62 76
SIN                  : 152
SQRT                 : 151
STRING               : 138
STRINGTYPE           : 21
TIMES                : 91 111
TRUE                 : 146
TYPE                 : 43
WHILE                : 80 81
error                : 

Nonterminals, with rules where they appear

args                 : 2 17 23 25 128
assign_values        : 67 68
destroyable          : 78 79 142
destroyablel         : 107 125
destroyabler         : 108 126
empty                : 3 7 11 14 16 24 26 33 35 40 42 45 47 49 51 53 55 66 71 75 77
expression           : 32 34 62 68 69 70 72 73 73 74 78 79 79 81 83 87 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 130 133 134 142 142 143 143 148 149 150 150 151 152 153 154 155 155
expression_block     : 37 58 61 63
expression_block_list : 64 65
expression_parenthized : 72 73 74 80 81 82
func_call_args       : 28 30 46 141
func_call_args_list  : 31
func_call_args_list_rem : 32 34
func_call_next       : 27 132
func_params          : 36 37 57 58
func_params_list     : 38
func_params_list_rem : 39 41
function_definition  : 8
functions_types_protocols : 5 8 9 10
global_high_level_expression : 5
high_level_expression : 6 36 57 60 65 67 72 78 80 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 135 136
id                   : 39 41 50 52 60 69 70
member_func          : 56
member_resolut       : 86 130
member_resolute      : 129
member_var           : 59
opt_elifs            : 72 73 74
opt_extends          : 12
optional_inheritance : 43
optional_inheritance_params : 44
optional_semicolon   : 12 37 43 58
optional_type_params : 43
program              : 0
protocol_definition  : 10
protocol_method      : 15 16
protocol_methods     : 12 15
protocol_methods_arguments : 17
protocol_methods_arguments_rem : 23 25
rem_assignments      : 69 70
type_call            : 29
type_def             : 9
type_member          : 54
type_members         : 43 54
type_of              : 4 36 37 57 58
type_test            : 105 106
typedef_params       : 48
typedef_params_rem   : 50 52
vector               : 140

Parsing method: LALR

state 0

    (0) S' -> . program
    (5) program -> . functions_types_protocols global_high_level_expression
    (8) functions_types_protocols -> . function_definition functions_types_protocols
    (9) functions_types_protocols -> . type_def functions_types_protocols
    (10) functions_types_protocols -> . protocol_definition functions_types_protocols
    (11) functions_types_protocols -> . empty
    (36) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (43) type_def -> . TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon
    (12) protocol_definition -> . PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon
    (1) empty -> .

    FUNCTION        shift and go to state 7
    TYPE            shift and go to state 8
    PROTOCOL        shift and go to state 9
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    program                        shift and go to state 1
    functions_types_protocols      shift and go to state 2
    function_definition            shift and go to state 3
    type_def                       shift and go to state 4
    protocol_definition            shift and go to state 5
    empty                          shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (5) program -> functions_types_protocols . global_high_level_expression
    (6) global_high_level_expression -> . high_level_expression
    (7) global_high_level_expression -> . empty
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (1) empty -> .
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    $end            reduce using rule 1 (empty -> .)
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    global_high_level_expression   shift and go to state 10
    high_level_expression          shift and go to state 11
    empty                          shift and go to state 12
    expression                     shift and go to state 13
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 3

    (8) functions_types_protocols -> function_definition . functions_types_protocols
    (8) functions_types_protocols -> . function_definition functions_types_protocols
    (9) functions_types_protocols -> . type_def functions_types_protocols
    (10) functions_types_protocols -> . protocol_definition functions_types_protocols
    (11) functions_types_protocols -> . empty
    (36) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (43) type_def -> . TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon
    (12) protocol_definition -> . PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon
    (1) empty -> .

    FUNCTION        shift and go to state 7
    TYPE            shift and go to state 8
    PROTOCOL        shift and go to state 9
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    function_definition            shift and go to state 3
    functions_types_protocols      shift and go to state 47
    type_def                       shift and go to state 4
    protocol_definition            shift and go to state 5
    empty                          shift and go to state 6

state 4

    (9) functions_types_protocols -> type_def . functions_types_protocols
    (8) functions_types_protocols -> . function_definition functions_types_protocols
    (9) functions_types_protocols -> . type_def functions_types_protocols
    (10) functions_types_protocols -> . protocol_definition functions_types_protocols
    (11) functions_types_protocols -> . empty
    (36) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (43) type_def -> . TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon
    (12) protocol_definition -> . PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon
    (1) empty -> .

    FUNCTION        shift and go to state 7
    TYPE            shift and go to state 8
    PROTOCOL        shift and go to state 9
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    type_def                       shift and go to state 4
    functions_types_protocols      shift and go to state 48
    function_definition            shift and go to state 3
    protocol_definition            shift and go to state 5
    empty                          shift and go to state 6

state 5

    (10) functions_types_protocols -> protocol_definition . functions_types_protocols
    (8) functions_types_protocols -> . function_definition functions_types_protocols
    (9) functions_types_protocols -> . type_def functions_types_protocols
    (10) functions_types_protocols -> . protocol_definition functions_types_protocols
    (11) functions_types_protocols -> . empty
    (36) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> . FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (43) type_def -> . TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon
    (12) protocol_definition -> . PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon
    (1) empty -> .

    FUNCTION        shift and go to state 7
    TYPE            shift and go to state 8
    PROTOCOL        shift and go to state 9
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    protocol_definition            shift and go to state 5
    functions_types_protocols      shift and go to state 49
    function_definition            shift and go to state 3
    type_def                       shift and go to state 4
    empty                          shift and go to state 6

state 6

    (11) functions_types_protocols -> empty .

    LET             reduce using rule 11 (functions_types_protocols -> empty .)
    IF              reduce using rule 11 (functions_types_protocols -> empty .)
    FOR             reduce using rule 11 (functions_types_protocols -> empty .)
    WHILE           reduce using rule 11 (functions_types_protocols -> empty .)
    NOT             reduce using rule 11 (functions_types_protocols -> empty .)
    MINUS           reduce using rule 11 (functions_types_protocols -> empty .)
    ID              reduce using rule 11 (functions_types_protocols -> empty .)
    NUMBER          reduce using rule 11 (functions_types_protocols -> empty .)
    STRING          reduce using rule 11 (functions_types_protocols -> empty .)
    PI              reduce using rule 11 (functions_types_protocols -> empty .)
    E               reduce using rule 11 (functions_types_protocols -> empty .)
    TRUE            reduce using rule 11 (functions_types_protocols -> empty .)
    FALSE           reduce using rule 11 (functions_types_protocols -> empty .)
    PRINT           reduce using rule 11 (functions_types_protocols -> empty .)
    RANGE           reduce using rule 11 (functions_types_protocols -> empty .)
    SQRT            reduce using rule 11 (functions_types_protocols -> empty .)
    SIN             reduce using rule 11 (functions_types_protocols -> empty .)
    COS             reduce using rule 11 (functions_types_protocols -> empty .)
    EXP             reduce using rule 11 (functions_types_protocols -> empty .)
    LOG             reduce using rule 11 (functions_types_protocols -> empty .)
    RAND            reduce using rule 11 (functions_types_protocols -> empty .)
    LBRACE          reduce using rule 11 (functions_types_protocols -> empty .)
    NEW             reduce using rule 11 (functions_types_protocols -> empty .)
    LPAREN          reduce using rule 11 (functions_types_protocols -> empty .)
    LBRAC           reduce using rule 11 (functions_types_protocols -> empty .)
    $end            reduce using rule 11 (functions_types_protocols -> empty .)


state 7

    (36) function_definition -> FUNCTION . ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> FUNCTION . ID LPAREN func_params RPAREN type_of expression_block optional_semicolon

    ID              shift and go to state 50


state 8

    (43) type_def -> TYPE . ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon

    ID              shift and go to state 51


state 9

    (12) protocol_definition -> PROTOCOL . ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon

    ID              shift and go to state 52


state 10

    (5) program -> functions_types_protocols global_high_level_expression .

    $end            reduce using rule 5 (program -> functions_types_protocols global_high_level_expression .)


state 11

    (6) global_high_level_expression -> high_level_expression .

    $end            reduce using rule 6 (global_high_level_expression -> high_level_expression .)


state 12

    (7) global_high_level_expression -> empty .

    $end            reduce using rule 7 (global_high_level_expression -> empty .)


state 13

    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    CONCAT          shift and go to state 60
    DOUBLECONCAT    shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 14

    (63) high_level_expression -> expression_block .
    (61) expression -> expression_block .

  ! reduce/reduce conflict for MINUS resolved using rule 61 (expression -> expression_block .)
  ! reduce/reduce conflict for LBRAC resolved using rule 61 (expression -> expression_block .)
    $end            reduce using rule 63 (high_level_expression -> expression_block .)
    LET             reduce using rule 63 (high_level_expression -> expression_block .)
    IF              reduce using rule 63 (high_level_expression -> expression_block .)
    FOR             reduce using rule 63 (high_level_expression -> expression_block .)
    WHILE           reduce using rule 63 (high_level_expression -> expression_block .)
    NOT             reduce using rule 63 (high_level_expression -> expression_block .)
    ID              reduce using rule 63 (high_level_expression -> expression_block .)
    NUMBER          reduce using rule 63 (high_level_expression -> expression_block .)
    STRING          reduce using rule 63 (high_level_expression -> expression_block .)
    PI              reduce using rule 63 (high_level_expression -> expression_block .)
    E               reduce using rule 63 (high_level_expression -> expression_block .)
    TRUE            reduce using rule 63 (high_level_expression -> expression_block .)
    FALSE           reduce using rule 63 (high_level_expression -> expression_block .)
    PRINT           reduce using rule 63 (high_level_expression -> expression_block .)
    RANGE           reduce using rule 63 (high_level_expression -> expression_block .)
    SQRT            reduce using rule 63 (high_level_expression -> expression_block .)
    SIN             reduce using rule 63 (high_level_expression -> expression_block .)
    COS             reduce using rule 63 (high_level_expression -> expression_block .)
    EXP             reduce using rule 63 (high_level_expression -> expression_block .)
    LOG             reduce using rule 63 (high_level_expression -> expression_block .)
    RAND            reduce using rule 63 (high_level_expression -> expression_block .)
    LBRACE          reduce using rule 63 (high_level_expression -> expression_block .)
    NEW             reduce using rule 63 (high_level_expression -> expression_block .)
    LPAREN          reduce using rule 63 (high_level_expression -> expression_block .)
    RBRACE          reduce using rule 63 (high_level_expression -> expression_block .)
    FUNCTION        reduce using rule 63 (high_level_expression -> expression_block .)
    TYPE            reduce using rule 63 (high_level_expression -> expression_block .)
    PROTOCOL        reduce using rule 63 (high_level_expression -> expression_block .)
    SEMICOLON       reduce using rule 61 (expression -> expression_block .)
    PLUS            reduce using rule 61 (expression -> expression_block .)
    MINUS           reduce using rule 61 (expression -> expression_block .)
    TIMES           reduce using rule 61 (expression -> expression_block .)
    DIVIDE          reduce using rule 61 (expression -> expression_block .)
    POWER           reduce using rule 61 (expression -> expression_block .)
    MODULE          reduce using rule 61 (expression -> expression_block .)
    CONCAT          reduce using rule 61 (expression -> expression_block .)
    DOUBLECONCAT    reduce using rule 61 (expression -> expression_block .)
    AND             reduce using rule 61 (expression -> expression_block .)
    OR              reduce using rule 61 (expression -> expression_block .)
    EQUAL           reduce using rule 61 (expression -> expression_block .)
    DIFFERENT       reduce using rule 61 (expression -> expression_block .)
    MINOREQUAL      reduce using rule 61 (expression -> expression_block .)
    MAJOREQUAL      reduce using rule 61 (expression -> expression_block .)
    MINOR           reduce using rule 61 (expression -> expression_block .)
    MAJOR           reduce using rule 61 (expression -> expression_block .)
    IS              reduce using rule 61 (expression -> expression_block .)
    AS              reduce using rule 61 (expression -> expression_block .)
    LBRAC           reduce using rule 61 (expression -> expression_block .)
    DOT             reduce using rule 61 (expression -> expression_block .)
    ELIF            reduce using rule 61 (expression -> expression_block .)
    ELSE            reduce using rule 61 (expression -> expression_block .)
    RPAREN          reduce using rule 61 (expression -> expression_block .)

  ! MINUS           [ reduce using rule 63 (high_level_expression -> expression_block .) ]
  ! LBRAC           [ reduce using rule 63 (high_level_expression -> expression_block .) ]


state 15

    (67) high_level_expression -> LET . assign_values IN high_level_expression
    (68) expression -> LET . assign_values IN expression
    (69) assign_values -> . id ASIGN expression rem_assignments
    (4) id -> . ID type_of

    ID              shift and go to state 76

    assign_values                  shift and go to state 74
    id                             shift and go to state 75

state 16

    (72) high_level_expression -> IF . expression_parenthized expression opt_elifs ELSE high_level_expression
    (73) expression -> IF . expression_parenthized expression opt_elifs ELSE expression
    (83) expression_parenthized -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 19

    expression_parenthized         shift and go to state 77

state 17

    (82) expression -> expression_parenthized .

    SEMICOLON       reduce using rule 82 (expression -> expression_parenthized .)
    PLUS            reduce using rule 82 (expression -> expression_parenthized .)
    MINUS           reduce using rule 82 (expression -> expression_parenthized .)
    TIMES           reduce using rule 82 (expression -> expression_parenthized .)
    DIVIDE          reduce using rule 82 (expression -> expression_parenthized .)
    POWER           reduce using rule 82 (expression -> expression_parenthized .)
    MODULE          reduce using rule 82 (expression -> expression_parenthized .)
    CONCAT          reduce using rule 82 (expression -> expression_parenthized .)
    DOUBLECONCAT    reduce using rule 82 (expression -> expression_parenthized .)
    AND             reduce using rule 82 (expression -> expression_parenthized .)
    OR              reduce using rule 82 (expression -> expression_parenthized .)
    EQUAL           reduce using rule 82 (expression -> expression_parenthized .)
    DIFFERENT       reduce using rule 82 (expression -> expression_parenthized .)
    MINOREQUAL      reduce using rule 82 (expression -> expression_parenthized .)
    MAJOREQUAL      reduce using rule 82 (expression -> expression_parenthized .)
    MINOR           reduce using rule 82 (expression -> expression_parenthized .)
    MAJOR           reduce using rule 82 (expression -> expression_parenthized .)
    IS              reduce using rule 82 (expression -> expression_parenthized .)
    AS              reduce using rule 82 (expression -> expression_parenthized .)
    LBRAC           reduce using rule 82 (expression -> expression_parenthized .)
    DOT             reduce using rule 82 (expression -> expression_parenthized .)
    RPAREN          reduce using rule 82 (expression -> expression_parenthized .)
    ELIF            reduce using rule 82 (expression -> expression_parenthized .)
    ELSE            reduce using rule 82 (expression -> expression_parenthized .)
    GENERATOR       reduce using rule 82 (expression -> expression_parenthized .)
    COMMA           reduce using rule 82 (expression -> expression_parenthized .)
    RBRAC           reduce using rule 82 (expression -> expression_parenthized .)
    IN              reduce using rule 82 (expression -> expression_parenthized .)


state 18

    (78) high_level_expression -> FOR . LPAREN destroyable IN expression RPAREN high_level_expression
    (79) expression -> FOR . LPAREN destroyable IN expression RPAREN expression

    LPAREN          shift and go to state 78


state 19

    (83) expression_parenthized -> LPAREN . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 79
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 20

    (80) high_level_expression -> WHILE . expression_parenthized high_level_expression
    (81) expression -> WHILE . expression_parenthized expression
    (83) expression_parenthized -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 19

    expression_parenthized         shift and go to state 90

state 21

    (136) high_level_expression -> MINUS . high_level_expression
    (134) expression -> MINUS . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 91
    expression                     shift and go to state 92
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 22

    (125) high_level_expression -> destroyablel . DESTRUCTASIGN high_level_expression
    (107) expression -> destroyablel . DESTRUCTASIGN expression

    DESTRUCTASIGN   shift and go to state 93


state 23

    (126) high_level_expression -> destroyabler . DESTRUCTASIGN high_level_expression
    (108) expression -> destroyabler . DESTRUCTASIGN expression

    DESTRUCTASIGN   shift and go to state 94


state 24

    (135) high_level_expression -> NOT . high_level_expression
    (133) expression -> NOT . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 95
    expression                     shift and go to state 96
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 25

    (27) expression -> func_call_next .

    SEMICOLON       reduce using rule 27 (expression -> func_call_next .)
    PLUS            reduce using rule 27 (expression -> func_call_next .)
    MINUS           reduce using rule 27 (expression -> func_call_next .)
    TIMES           reduce using rule 27 (expression -> func_call_next .)
    DIVIDE          reduce using rule 27 (expression -> func_call_next .)
    POWER           reduce using rule 27 (expression -> func_call_next .)
    MODULE          reduce using rule 27 (expression -> func_call_next .)
    CONCAT          reduce using rule 27 (expression -> func_call_next .)
    DOUBLECONCAT    reduce using rule 27 (expression -> func_call_next .)
    AND             reduce using rule 27 (expression -> func_call_next .)
    OR              reduce using rule 27 (expression -> func_call_next .)
    EQUAL           reduce using rule 27 (expression -> func_call_next .)
    DIFFERENT       reduce using rule 27 (expression -> func_call_next .)
    MINOREQUAL      reduce using rule 27 (expression -> func_call_next .)
    MAJOREQUAL      reduce using rule 27 (expression -> func_call_next .)
    MINOR           reduce using rule 27 (expression -> func_call_next .)
    MAJOR           reduce using rule 27 (expression -> func_call_next .)
    IS              reduce using rule 27 (expression -> func_call_next .)
    AS              reduce using rule 27 (expression -> func_call_next .)
    LBRAC           reduce using rule 27 (expression -> func_call_next .)
    DOT             reduce using rule 27 (expression -> func_call_next .)
    RPAREN          reduce using rule 27 (expression -> func_call_next .)
    ELIF            reduce using rule 27 (expression -> func_call_next .)
    ELSE            reduce using rule 27 (expression -> func_call_next .)
    GENERATOR       reduce using rule 27 (expression -> func_call_next .)
    COMMA           reduce using rule 27 (expression -> func_call_next .)
    RBRAC           reduce using rule 27 (expression -> func_call_next .)
    IN              reduce using rule 27 (expression -> func_call_next .)


state 26

    (29) expression -> type_call .

    SEMICOLON       reduce using rule 29 (expression -> type_call .)
    PLUS            reduce using rule 29 (expression -> type_call .)
    MINUS           reduce using rule 29 (expression -> type_call .)
    TIMES           reduce using rule 29 (expression -> type_call .)
    DIVIDE          reduce using rule 29 (expression -> type_call .)
    POWER           reduce using rule 29 (expression -> type_call .)
    MODULE          reduce using rule 29 (expression -> type_call .)
    CONCAT          reduce using rule 29 (expression -> type_call .)
    DOUBLECONCAT    reduce using rule 29 (expression -> type_call .)
    AND             reduce using rule 29 (expression -> type_call .)
    OR              reduce using rule 29 (expression -> type_call .)
    EQUAL           reduce using rule 29 (expression -> type_call .)
    DIFFERENT       reduce using rule 29 (expression -> type_call .)
    MINOREQUAL      reduce using rule 29 (expression -> type_call .)
    MAJOREQUAL      reduce using rule 29 (expression -> type_call .)
    MINOR           reduce using rule 29 (expression -> type_call .)
    MAJOR           reduce using rule 29 (expression -> type_call .)
    IS              reduce using rule 29 (expression -> type_call .)
    AS              reduce using rule 29 (expression -> type_call .)
    LBRAC           reduce using rule 29 (expression -> type_call .)
    DOT             reduce using rule 29 (expression -> type_call .)
    RPAREN          reduce using rule 29 (expression -> type_call .)
    ELIF            reduce using rule 29 (expression -> type_call .)
    ELSE            reduce using rule 29 (expression -> type_call .)
    GENERATOR       reduce using rule 29 (expression -> type_call .)
    COMMA           reduce using rule 29 (expression -> type_call .)
    RBRAC           reduce using rule 29 (expression -> type_call .)
    IN              reduce using rule 29 (expression -> type_call .)


state 27

    (86) expression -> ID . DOT member_resolut
    (139) expression -> ID .
    (84) destroyablel -> ID .
    (85) destroyablel -> ID . DOT ID
    (87) destroyabler -> ID . LBRAC expression RBRAC
    (88) destroyabler -> ID . DOT ID LBRAC expression RBRAC
    (28) func_call_next -> ID . LPAREN func_call_args RPAREN

    DOT             shift and go to state 97
    SEMICOLON       reduce using rule 139 (expression -> ID .)
    PLUS            reduce using rule 139 (expression -> ID .)
    MINUS           reduce using rule 139 (expression -> ID .)
    TIMES           reduce using rule 139 (expression -> ID .)
    DIVIDE          reduce using rule 139 (expression -> ID .)
    POWER           reduce using rule 139 (expression -> ID .)
    MODULE          reduce using rule 139 (expression -> ID .)
    CONCAT          reduce using rule 139 (expression -> ID .)
    DOUBLECONCAT    reduce using rule 139 (expression -> ID .)
    AND             reduce using rule 139 (expression -> ID .)
    OR              reduce using rule 139 (expression -> ID .)
    EQUAL           reduce using rule 139 (expression -> ID .)
    DIFFERENT       reduce using rule 139 (expression -> ID .)
    MINOREQUAL      reduce using rule 139 (expression -> ID .)
    MAJOREQUAL      reduce using rule 139 (expression -> ID .)
    MINOR           reduce using rule 139 (expression -> ID .)
    MAJOR           reduce using rule 139 (expression -> ID .)
    IS              reduce using rule 139 (expression -> ID .)
    AS              reduce using rule 139 (expression -> ID .)
    LBRAC           reduce using rule 139 (expression -> ID .)
    ELIF            reduce using rule 139 (expression -> ID .)
    ELSE            reduce using rule 139 (expression -> ID .)
    RPAREN          reduce using rule 139 (expression -> ID .)
    DESTRUCTASIGN   reduce using rule 84 (destroyablel -> ID .)
    LPAREN          shift and go to state 99

  ! DOT             [ reduce using rule 139 (expression -> ID .) ]
  ! LBRAC           [ shift and go to state 98 ]


state 28

    (129) expression -> member_resolute .

    SEMICOLON       reduce using rule 129 (expression -> member_resolute .)
    PLUS            reduce using rule 129 (expression -> member_resolute .)
    MINUS           reduce using rule 129 (expression -> member_resolute .)
    TIMES           reduce using rule 129 (expression -> member_resolute .)
    DIVIDE          reduce using rule 129 (expression -> member_resolute .)
    POWER           reduce using rule 129 (expression -> member_resolute .)
    MODULE          reduce using rule 129 (expression -> member_resolute .)
    CONCAT          reduce using rule 129 (expression -> member_resolute .)
    DOUBLECONCAT    reduce using rule 129 (expression -> member_resolute .)
    AND             reduce using rule 129 (expression -> member_resolute .)
    OR              reduce using rule 129 (expression -> member_resolute .)
    EQUAL           reduce using rule 129 (expression -> member_resolute .)
    DIFFERENT       reduce using rule 129 (expression -> member_resolute .)
    MINOREQUAL      reduce using rule 129 (expression -> member_resolute .)
    MAJOREQUAL      reduce using rule 129 (expression -> member_resolute .)
    MINOR           reduce using rule 129 (expression -> member_resolute .)
    MAJOR           reduce using rule 129 (expression -> member_resolute .)
    IS              reduce using rule 129 (expression -> member_resolute .)
    AS              reduce using rule 129 (expression -> member_resolute .)
    LBRAC           reduce using rule 129 (expression -> member_resolute .)
    DOT             reduce using rule 129 (expression -> member_resolute .)
    RPAREN          reduce using rule 129 (expression -> member_resolute .)
    ELIF            reduce using rule 129 (expression -> member_resolute .)
    ELSE            reduce using rule 129 (expression -> member_resolute .)
    GENERATOR       reduce using rule 129 (expression -> member_resolute .)
    COMMA           reduce using rule 129 (expression -> member_resolute .)
    RBRAC           reduce using rule 129 (expression -> member_resolute .)
    IN              reduce using rule 129 (expression -> member_resolute .)


state 29

    (137) expression -> NUMBER .

    SEMICOLON       reduce using rule 137 (expression -> NUMBER .)
    PLUS            reduce using rule 137 (expression -> NUMBER .)
    MINUS           reduce using rule 137 (expression -> NUMBER .)
    TIMES           reduce using rule 137 (expression -> NUMBER .)
    DIVIDE          reduce using rule 137 (expression -> NUMBER .)
    POWER           reduce using rule 137 (expression -> NUMBER .)
    MODULE          reduce using rule 137 (expression -> NUMBER .)
    CONCAT          reduce using rule 137 (expression -> NUMBER .)
    DOUBLECONCAT    reduce using rule 137 (expression -> NUMBER .)
    AND             reduce using rule 137 (expression -> NUMBER .)
    OR              reduce using rule 137 (expression -> NUMBER .)
    EQUAL           reduce using rule 137 (expression -> NUMBER .)
    DIFFERENT       reduce using rule 137 (expression -> NUMBER .)
    MINOREQUAL      reduce using rule 137 (expression -> NUMBER .)
    MAJOREQUAL      reduce using rule 137 (expression -> NUMBER .)
    MINOR           reduce using rule 137 (expression -> NUMBER .)
    MAJOR           reduce using rule 137 (expression -> NUMBER .)
    IS              reduce using rule 137 (expression -> NUMBER .)
    AS              reduce using rule 137 (expression -> NUMBER .)
    LBRAC           reduce using rule 137 (expression -> NUMBER .)
    DOT             reduce using rule 137 (expression -> NUMBER .)
    RPAREN          reduce using rule 137 (expression -> NUMBER .)
    ELIF            reduce using rule 137 (expression -> NUMBER .)
    ELSE            reduce using rule 137 (expression -> NUMBER .)
    GENERATOR       reduce using rule 137 (expression -> NUMBER .)
    COMMA           reduce using rule 137 (expression -> NUMBER .)
    RBRAC           reduce using rule 137 (expression -> NUMBER .)
    IN              reduce using rule 137 (expression -> NUMBER .)


state 30

    (138) expression -> STRING .

    SEMICOLON       reduce using rule 138 (expression -> STRING .)
    PLUS            reduce using rule 138 (expression -> STRING .)
    MINUS           reduce using rule 138 (expression -> STRING .)
    TIMES           reduce using rule 138 (expression -> STRING .)
    DIVIDE          reduce using rule 138 (expression -> STRING .)
    POWER           reduce using rule 138 (expression -> STRING .)
    MODULE          reduce using rule 138 (expression -> STRING .)
    CONCAT          reduce using rule 138 (expression -> STRING .)
    DOUBLECONCAT    reduce using rule 138 (expression -> STRING .)
    AND             reduce using rule 138 (expression -> STRING .)
    OR              reduce using rule 138 (expression -> STRING .)
    EQUAL           reduce using rule 138 (expression -> STRING .)
    DIFFERENT       reduce using rule 138 (expression -> STRING .)
    MINOREQUAL      reduce using rule 138 (expression -> STRING .)
    MAJOREQUAL      reduce using rule 138 (expression -> STRING .)
    MINOR           reduce using rule 138 (expression -> STRING .)
    MAJOR           reduce using rule 138 (expression -> STRING .)
    IS              reduce using rule 138 (expression -> STRING .)
    AS              reduce using rule 138 (expression -> STRING .)
    LBRAC           reduce using rule 138 (expression -> STRING .)
    DOT             reduce using rule 138 (expression -> STRING .)
    RPAREN          reduce using rule 138 (expression -> STRING .)
    ELIF            reduce using rule 138 (expression -> STRING .)
    ELSE            reduce using rule 138 (expression -> STRING .)
    GENERATOR       reduce using rule 138 (expression -> STRING .)
    COMMA           reduce using rule 138 (expression -> STRING .)
    RBRAC           reduce using rule 138 (expression -> STRING .)
    IN              reduce using rule 138 (expression -> STRING .)


state 31

    (140) expression -> vector .

    SEMICOLON       reduce using rule 140 (expression -> vector .)
    PLUS            reduce using rule 140 (expression -> vector .)
    MINUS           reduce using rule 140 (expression -> vector .)
    TIMES           reduce using rule 140 (expression -> vector .)
    DIVIDE          reduce using rule 140 (expression -> vector .)
    POWER           reduce using rule 140 (expression -> vector .)
    MODULE          reduce using rule 140 (expression -> vector .)
    CONCAT          reduce using rule 140 (expression -> vector .)
    DOUBLECONCAT    reduce using rule 140 (expression -> vector .)
    AND             reduce using rule 140 (expression -> vector .)
    OR              reduce using rule 140 (expression -> vector .)
    EQUAL           reduce using rule 140 (expression -> vector .)
    DIFFERENT       reduce using rule 140 (expression -> vector .)
    MINOREQUAL      reduce using rule 140 (expression -> vector .)
    MAJOREQUAL      reduce using rule 140 (expression -> vector .)
    MINOR           reduce using rule 140 (expression -> vector .)
    MAJOR           reduce using rule 140 (expression -> vector .)
    IS              reduce using rule 140 (expression -> vector .)
    AS              reduce using rule 140 (expression -> vector .)
    LBRAC           reduce using rule 140 (expression -> vector .)
    DOT             reduce using rule 140 (expression -> vector .)
    RPAREN          reduce using rule 140 (expression -> vector .)
    ELIF            reduce using rule 140 (expression -> vector .)
    ELSE            reduce using rule 140 (expression -> vector .)
    GENERATOR       reduce using rule 140 (expression -> vector .)
    COMMA           reduce using rule 140 (expression -> vector .)
    RBRAC           reduce using rule 140 (expression -> vector .)
    IN              reduce using rule 140 (expression -> vector .)


state 32

    (141) vector -> LBRAC . func_call_args RBRAC
    (142) vector -> LBRAC . expression GENERATOR destroyable IN expression RBRAC
    (31) func_call_args -> . func_call_args_list
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (32) func_call_args_list -> . expression func_call_args_list_rem
    (33) func_call_args_list -> . empty
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC
    (1) empty -> .

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32
    RBRAC           reduce using rule 1 (empty -> .)

    func_call_args                 shift and go to state 100
    expression                     shift and go to state 101
    func_call_args_list            shift and go to state 102
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31
    empty                          shift and go to state 103

state 33

    (144) expression -> PI .

    SEMICOLON       reduce using rule 144 (expression -> PI .)
    PLUS            reduce using rule 144 (expression -> PI .)
    MINUS           reduce using rule 144 (expression -> PI .)
    TIMES           reduce using rule 144 (expression -> PI .)
    DIVIDE          reduce using rule 144 (expression -> PI .)
    POWER           reduce using rule 144 (expression -> PI .)
    MODULE          reduce using rule 144 (expression -> PI .)
    CONCAT          reduce using rule 144 (expression -> PI .)
    DOUBLECONCAT    reduce using rule 144 (expression -> PI .)
    AND             reduce using rule 144 (expression -> PI .)
    OR              reduce using rule 144 (expression -> PI .)
    EQUAL           reduce using rule 144 (expression -> PI .)
    DIFFERENT       reduce using rule 144 (expression -> PI .)
    MINOREQUAL      reduce using rule 144 (expression -> PI .)
    MAJOREQUAL      reduce using rule 144 (expression -> PI .)
    MINOR           reduce using rule 144 (expression -> PI .)
    MAJOR           reduce using rule 144 (expression -> PI .)
    IS              reduce using rule 144 (expression -> PI .)
    AS              reduce using rule 144 (expression -> PI .)
    LBRAC           reduce using rule 144 (expression -> PI .)
    DOT             reduce using rule 144 (expression -> PI .)
    RPAREN          reduce using rule 144 (expression -> PI .)
    ELIF            reduce using rule 144 (expression -> PI .)
    ELSE            reduce using rule 144 (expression -> PI .)
    GENERATOR       reduce using rule 144 (expression -> PI .)
    COMMA           reduce using rule 144 (expression -> PI .)
    RBRAC           reduce using rule 144 (expression -> PI .)
    IN              reduce using rule 144 (expression -> PI .)


state 34

    (145) expression -> E .

    SEMICOLON       reduce using rule 145 (expression -> E .)
    PLUS            reduce using rule 145 (expression -> E .)
    MINUS           reduce using rule 145 (expression -> E .)
    TIMES           reduce using rule 145 (expression -> E .)
    DIVIDE          reduce using rule 145 (expression -> E .)
    POWER           reduce using rule 145 (expression -> E .)
    MODULE          reduce using rule 145 (expression -> E .)
    CONCAT          reduce using rule 145 (expression -> E .)
    DOUBLECONCAT    reduce using rule 145 (expression -> E .)
    AND             reduce using rule 145 (expression -> E .)
    OR              reduce using rule 145 (expression -> E .)
    EQUAL           reduce using rule 145 (expression -> E .)
    DIFFERENT       reduce using rule 145 (expression -> E .)
    MINOREQUAL      reduce using rule 145 (expression -> E .)
    MAJOREQUAL      reduce using rule 145 (expression -> E .)
    MINOR           reduce using rule 145 (expression -> E .)
    MAJOR           reduce using rule 145 (expression -> E .)
    IS              reduce using rule 145 (expression -> E .)
    AS              reduce using rule 145 (expression -> E .)
    LBRAC           reduce using rule 145 (expression -> E .)
    DOT             reduce using rule 145 (expression -> E .)
    RPAREN          reduce using rule 145 (expression -> E .)
    ELIF            reduce using rule 145 (expression -> E .)
    ELSE            reduce using rule 145 (expression -> E .)
    GENERATOR       reduce using rule 145 (expression -> E .)
    COMMA           reduce using rule 145 (expression -> E .)
    RBRAC           reduce using rule 145 (expression -> E .)
    IN              reduce using rule 145 (expression -> E .)


state 35

    (146) expression -> TRUE .

    SEMICOLON       reduce using rule 146 (expression -> TRUE .)
    PLUS            reduce using rule 146 (expression -> TRUE .)
    MINUS           reduce using rule 146 (expression -> TRUE .)
    TIMES           reduce using rule 146 (expression -> TRUE .)
    DIVIDE          reduce using rule 146 (expression -> TRUE .)
    POWER           reduce using rule 146 (expression -> TRUE .)
    MODULE          reduce using rule 146 (expression -> TRUE .)
    CONCAT          reduce using rule 146 (expression -> TRUE .)
    DOUBLECONCAT    reduce using rule 146 (expression -> TRUE .)
    AND             reduce using rule 146 (expression -> TRUE .)
    OR              reduce using rule 146 (expression -> TRUE .)
    EQUAL           reduce using rule 146 (expression -> TRUE .)
    DIFFERENT       reduce using rule 146 (expression -> TRUE .)
    MINOREQUAL      reduce using rule 146 (expression -> TRUE .)
    MAJOREQUAL      reduce using rule 146 (expression -> TRUE .)
    MINOR           reduce using rule 146 (expression -> TRUE .)
    MAJOR           reduce using rule 146 (expression -> TRUE .)
    IS              reduce using rule 146 (expression -> TRUE .)
    AS              reduce using rule 146 (expression -> TRUE .)
    LBRAC           reduce using rule 146 (expression -> TRUE .)
    DOT             reduce using rule 146 (expression -> TRUE .)
    RPAREN          reduce using rule 146 (expression -> TRUE .)
    ELIF            reduce using rule 146 (expression -> TRUE .)
    ELSE            reduce using rule 146 (expression -> TRUE .)
    GENERATOR       reduce using rule 146 (expression -> TRUE .)
    COMMA           reduce using rule 146 (expression -> TRUE .)
    RBRAC           reduce using rule 146 (expression -> TRUE .)
    IN              reduce using rule 146 (expression -> TRUE .)


state 36

    (147) expression -> FALSE .

    SEMICOLON       reduce using rule 147 (expression -> FALSE .)
    PLUS            reduce using rule 147 (expression -> FALSE .)
    MINUS           reduce using rule 147 (expression -> FALSE .)
    TIMES           reduce using rule 147 (expression -> FALSE .)
    DIVIDE          reduce using rule 147 (expression -> FALSE .)
    POWER           reduce using rule 147 (expression -> FALSE .)
    MODULE          reduce using rule 147 (expression -> FALSE .)
    CONCAT          reduce using rule 147 (expression -> FALSE .)
    DOUBLECONCAT    reduce using rule 147 (expression -> FALSE .)
    AND             reduce using rule 147 (expression -> FALSE .)
    OR              reduce using rule 147 (expression -> FALSE .)
    EQUAL           reduce using rule 147 (expression -> FALSE .)
    DIFFERENT       reduce using rule 147 (expression -> FALSE .)
    MINOREQUAL      reduce using rule 147 (expression -> FALSE .)
    MAJOREQUAL      reduce using rule 147 (expression -> FALSE .)
    MINOR           reduce using rule 147 (expression -> FALSE .)
    MAJOR           reduce using rule 147 (expression -> FALSE .)
    IS              reduce using rule 147 (expression -> FALSE .)
    AS              reduce using rule 147 (expression -> FALSE .)
    LBRAC           reduce using rule 147 (expression -> FALSE .)
    DOT             reduce using rule 147 (expression -> FALSE .)
    RPAREN          reduce using rule 147 (expression -> FALSE .)
    ELIF            reduce using rule 147 (expression -> FALSE .)
    ELSE            reduce using rule 147 (expression -> FALSE .)
    GENERATOR       reduce using rule 147 (expression -> FALSE .)
    COMMA           reduce using rule 147 (expression -> FALSE .)
    RBRAC           reduce using rule 147 (expression -> FALSE .)
    IN              reduce using rule 147 (expression -> FALSE .)


state 37

    (148) expression -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 104


state 38

    (149) expression -> RANGE . LPAREN expression RPAREN
    (150) expression -> RANGE . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 105


state 39

    (151) expression -> SQRT . LPAREN expression RPAREN

    LPAREN          shift and go to state 106


state 40

    (152) expression -> SIN . LPAREN expression RPAREN

    LPAREN          shift and go to state 107


state 41

    (153) expression -> COS . LPAREN expression RPAREN

    LPAREN          shift and go to state 108


state 42

    (154) expression -> EXP . LPAREN expression RPAREN

    LPAREN          shift and go to state 109


state 43

    (155) expression -> LOG . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 110


state 44

    (156) expression -> RAND . LPAREN RPAREN

    LPAREN          shift and go to state 111


state 45

    (64) expression_block -> LBRACE . expression_block_list RBRACE
    (65) expression_block_list -> . high_level_expression expression_block_list
    (66) expression_block_list -> . empty
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (1) empty -> .
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    RBRACE          reduce using rule 1 (empty -> .)
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_block_list          shift and go to state 112
    high_level_expression          shift and go to state 113
    empty                          shift and go to state 114
    expression                     shift and go to state 13
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 46

    (30) type_call -> NEW . ID LPAREN func_call_args RPAREN

    ID              shift and go to state 115


state 47

    (8) functions_types_protocols -> function_definition functions_types_protocols .

    LET             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    IF              reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    FOR             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    WHILE           reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    NOT             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    MINUS           reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    ID              reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    NUMBER          reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    STRING          reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    PI              reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    E               reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    TRUE            reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    FALSE           reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    PRINT           reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    RANGE           reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    SQRT            reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    SIN             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    COS             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    EXP             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    LOG             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    RAND            reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    LBRACE          reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    NEW             reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    LPAREN          reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    LBRAC           reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)
    $end            reduce using rule 8 (functions_types_protocols -> function_definition functions_types_protocols .)


state 48

    (9) functions_types_protocols -> type_def functions_types_protocols .

    LET             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    IF              reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    FOR             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    WHILE           reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    NOT             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    MINUS           reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    ID              reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    NUMBER          reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    STRING          reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    PI              reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    E               reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    TRUE            reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    FALSE           reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    PRINT           reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    RANGE           reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    SQRT            reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    SIN             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    COS             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    EXP             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    LOG             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    RAND            reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    LBRACE          reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    NEW             reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    LPAREN          reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    LBRAC           reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)
    $end            reduce using rule 9 (functions_types_protocols -> type_def functions_types_protocols .)


state 49

    (10) functions_types_protocols -> protocol_definition functions_types_protocols .

    LET             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    IF              reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    FOR             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    WHILE           reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    NOT             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    MINUS           reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    ID              reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    NUMBER          reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    STRING          reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    PI              reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    E               reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    TRUE            reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    FALSE           reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    PRINT           reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    RANGE           reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    SQRT            reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    SIN             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    COS             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    EXP             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    LOG             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    RAND            reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    LBRACE          reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    NEW             reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    LPAREN          reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    LBRAC           reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)
    $end            reduce using rule 10 (functions_types_protocols -> protocol_definition functions_types_protocols .)


state 50

    (36) function_definition -> FUNCTION ID . LPAREN func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> FUNCTION ID . LPAREN func_params RPAREN type_of expression_block optional_semicolon

    LPAREN          shift and go to state 116


state 51

    (43) type_def -> TYPE ID . optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon
    (48) optional_type_params -> . LPAREN typedef_params RPAREN
    (49) optional_type_params -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 118
    INHERITS        reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    optional_type_params           shift and go to state 117
    empty                          shift and go to state 119

state 52

    (12) protocol_definition -> PROTOCOL ID . opt_extends LBRACE protocol_methods RBRACE optional_semicolon
    (13) opt_extends -> . EXTENDS ID
    (14) opt_extends -> . empty
    (1) empty -> .

    EXTENDS         shift and go to state 121
    LBRACE          reduce using rule 1 (empty -> .)

    opt_extends                    shift and go to state 120
    empty                          shift and go to state 122

state 53

    (62) high_level_expression -> expression SEMICOLON .

    $end            reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    LET             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    IF              reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    FOR             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    WHILE           reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    NOT             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    MINUS           reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    ID              reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    NUMBER          reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    STRING          reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    PI              reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    E               reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    TRUE            reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    FALSE           reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    PRINT           reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    RANGE           reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    SQRT            reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    SIN             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    COS             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    EXP             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    LOG             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    RAND            reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    LBRACE          reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    NEW             reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    LPAREN          reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    LBRAC           reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    RBRACE          reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    FUNCTION        reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    TYPE            reduce using rule 62 (high_level_expression -> expression SEMICOLON .)
    PROTOCOL        reduce using rule 62 (high_level_expression -> expression SEMICOLON .)


state 54

    (109) high_level_expression -> expression PLUS . high_level_expression
    (89) expression -> expression PLUS . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 123
    high_level_expression          shift and go to state 124
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 55

    (110) high_level_expression -> expression MINUS . high_level_expression
    (90) expression -> expression MINUS . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 125
    high_level_expression          shift and go to state 126
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 56

    (111) high_level_expression -> expression TIMES . high_level_expression
    (91) expression -> expression TIMES . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 127
    high_level_expression          shift and go to state 128
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 57

    (112) high_level_expression -> expression DIVIDE . high_level_expression
    (92) expression -> expression DIVIDE . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 129
    high_level_expression          shift and go to state 130
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 58

    (113) high_level_expression -> expression POWER . high_level_expression
    (93) expression -> expression POWER . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 131
    high_level_expression          shift and go to state 132
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 59

    (114) high_level_expression -> expression MODULE . high_level_expression
    (94) expression -> expression MODULE . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 133
    high_level_expression          shift and go to state 134
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 60

    (115) high_level_expression -> expression CONCAT . high_level_expression
    (95) expression -> expression CONCAT . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 135
    high_level_expression          shift and go to state 136
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 61

    (116) high_level_expression -> expression DOUBLECONCAT . high_level_expression
    (96) expression -> expression DOUBLECONCAT . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 137
    high_level_expression          shift and go to state 138
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 62

    (117) high_level_expression -> expression AND . high_level_expression
    (97) expression -> expression AND . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 139
    high_level_expression          shift and go to state 140
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 63

    (118) high_level_expression -> expression OR . high_level_expression
    (98) expression -> expression OR . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 141
    high_level_expression          shift and go to state 142
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 64

    (119) high_level_expression -> expression EQUAL . high_level_expression
    (99) expression -> expression EQUAL . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 143
    high_level_expression          shift and go to state 144
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 65

    (120) high_level_expression -> expression DIFFERENT . high_level_expression
    (100) expression -> expression DIFFERENT . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 145
    high_level_expression          shift and go to state 146
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 66

    (121) high_level_expression -> expression MINOREQUAL . high_level_expression
    (101) expression -> expression MINOREQUAL . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 147
    high_level_expression          shift and go to state 148
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 67

    (122) high_level_expression -> expression MAJOREQUAL . high_level_expression
    (102) expression -> expression MAJOREQUAL . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 149
    high_level_expression          shift and go to state 150
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 68

    (123) high_level_expression -> expression MINOR . high_level_expression
    (103) expression -> expression MINOR . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 151
    high_level_expression          shift and go to state 152
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 69

    (124) high_level_expression -> expression MAJOR . high_level_expression
    (104) expression -> expression MAJOR . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 153
    high_level_expression          shift and go to state 154
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 70

    (105) expression -> expression IS . type_test
    (128) type_test -> . args
    (18) args -> . ID
    (19) args -> . OBJECT
    (20) args -> . NUMBERTYPE
    (21) args -> . STRINGTYPE
    (22) args -> . BOOLEANTYPE

    ID              shift and go to state 157
    OBJECT          shift and go to state 158
    NUMBERTYPE      shift and go to state 159
    STRINGTYPE      shift and go to state 160
    BOOLEANTYPE     shift and go to state 161

    type_test                      shift and go to state 155
    args                           shift and go to state 156

state 71

    (106) expression -> expression AS . type_test
    (128) type_test -> . args
    (18) args -> . ID
    (19) args -> . OBJECT
    (20) args -> . NUMBERTYPE
    (21) args -> . STRINGTYPE
    (22) args -> . BOOLEANTYPE

    ID              shift and go to state 157
    OBJECT          shift and go to state 158
    NUMBERTYPE      shift and go to state 159
    STRINGTYPE      shift and go to state 160
    BOOLEANTYPE     shift and go to state 161

    type_test                      shift and go to state 162
    args                           shift and go to state 156

state 72

    (143) expression -> expression LBRAC . expression RBRAC
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 163
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 73

    (130) member_resolute -> expression DOT . member_resolut
    (131) member_resolut -> . ID
    (132) member_resolut -> . func_call_next
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN

    ID              shift and go to state 165

    member_resolut                 shift and go to state 164
    func_call_next                 shift and go to state 166

state 74

    (67) high_level_expression -> LET assign_values . IN high_level_expression
    (68) expression -> LET assign_values . IN expression

    IN              shift and go to state 167


state 75

    (69) assign_values -> id . ASIGN expression rem_assignments

    ASIGN           shift and go to state 168


state 76

    (4) id -> ID . type_of
    (2) type_of -> . DOUBLEDOTS args
    (3) type_of -> . empty
    (1) empty -> .

    DOUBLEDOTS      shift and go to state 170
    ASIGN           reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    type_of                        shift and go to state 169
    empty                          shift and go to state 171

state 77

    (72) high_level_expression -> IF expression_parenthized . expression opt_elifs ELSE high_level_expression
    (73) expression -> IF expression_parenthized . expression opt_elifs ELSE expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    expression                     shift and go to state 172
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 78

    (78) high_level_expression -> FOR LPAREN . destroyable IN expression RPAREN high_level_expression
    (79) expression -> FOR LPAREN . destroyable IN expression RPAREN expression
    (127) destroyable -> . ID

    ID              shift and go to state 174

    destroyable                    shift and go to state 173

state 79

    (83) expression_parenthized -> LPAREN expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 175
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 80

    (61) expression -> expression_block .

    RPAREN          reduce using rule 61 (expression -> expression_block .)
    PLUS            reduce using rule 61 (expression -> expression_block .)
    MINUS           reduce using rule 61 (expression -> expression_block .)
    TIMES           reduce using rule 61 (expression -> expression_block .)
    DIVIDE          reduce using rule 61 (expression -> expression_block .)
    POWER           reduce using rule 61 (expression -> expression_block .)
    MODULE          reduce using rule 61 (expression -> expression_block .)
    CONCAT          reduce using rule 61 (expression -> expression_block .)
    DOUBLECONCAT    reduce using rule 61 (expression -> expression_block .)
    AND             reduce using rule 61 (expression -> expression_block .)
    OR              reduce using rule 61 (expression -> expression_block .)
    EQUAL           reduce using rule 61 (expression -> expression_block .)
    DIFFERENT       reduce using rule 61 (expression -> expression_block .)
    MINOREQUAL      reduce using rule 61 (expression -> expression_block .)
    MAJOREQUAL      reduce using rule 61 (expression -> expression_block .)
    MINOR           reduce using rule 61 (expression -> expression_block .)
    MAJOR           reduce using rule 61 (expression -> expression_block .)
    IS              reduce using rule 61 (expression -> expression_block .)
    AS              reduce using rule 61 (expression -> expression_block .)
    LBRAC           reduce using rule 61 (expression -> expression_block .)
    DOT             reduce using rule 61 (expression -> expression_block .)
    GENERATOR       reduce using rule 61 (expression -> expression_block .)
    COMMA           reduce using rule 61 (expression -> expression_block .)
    RBRAC           reduce using rule 61 (expression -> expression_block .)
    ELIF            reduce using rule 61 (expression -> expression_block .)
    ELSE            reduce using rule 61 (expression -> expression_block .)
    IN              reduce using rule 61 (expression -> expression_block .)


state 81

    (68) expression -> LET . assign_values IN expression
    (69) assign_values -> . id ASIGN expression rem_assignments
    (4) id -> . ID type_of

    ID              shift and go to state 76

    assign_values                  shift and go to state 192
    id                             shift and go to state 75

state 82

    (73) expression -> IF . expression_parenthized expression opt_elifs ELSE expression
    (83) expression_parenthized -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 19

    expression_parenthized         shift and go to state 193

state 83

    (79) expression -> FOR . LPAREN destroyable IN expression RPAREN expression

    LPAREN          shift and go to state 194


state 84

    (81) expression -> WHILE . expression_parenthized expression
    (83) expression_parenthized -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 19

    expression_parenthized         shift and go to state 195

state 85

    (86) expression -> ID . DOT member_resolut
    (139) expression -> ID .
    (28) func_call_next -> ID . LPAREN func_call_args RPAREN
    (84) destroyablel -> ID .
    (85) destroyablel -> ID . DOT ID
    (87) destroyabler -> ID . LBRAC expression RBRAC
    (88) destroyabler -> ID . DOT ID LBRAC expression RBRAC

    DOT             shift and go to state 97
    RPAREN          reduce using rule 139 (expression -> ID .)
    PLUS            reduce using rule 139 (expression -> ID .)
    MINUS           reduce using rule 139 (expression -> ID .)
    TIMES           reduce using rule 139 (expression -> ID .)
    DIVIDE          reduce using rule 139 (expression -> ID .)
    POWER           reduce using rule 139 (expression -> ID .)
    MODULE          reduce using rule 139 (expression -> ID .)
    CONCAT          reduce using rule 139 (expression -> ID .)
    DOUBLECONCAT    reduce using rule 139 (expression -> ID .)
    AND             reduce using rule 139 (expression -> ID .)
    OR              reduce using rule 139 (expression -> ID .)
    EQUAL           reduce using rule 139 (expression -> ID .)
    DIFFERENT       reduce using rule 139 (expression -> ID .)
    MINOREQUAL      reduce using rule 139 (expression -> ID .)
    MAJOREQUAL      reduce using rule 139 (expression -> ID .)
    MINOR           reduce using rule 139 (expression -> ID .)
    MAJOR           reduce using rule 139 (expression -> ID .)
    IS              reduce using rule 139 (expression -> ID .)
    AS              reduce using rule 139 (expression -> ID .)
    LBRAC           reduce using rule 139 (expression -> ID .)
    GENERATOR       reduce using rule 139 (expression -> ID .)
    COMMA           reduce using rule 139 (expression -> ID .)
    RBRAC           reduce using rule 139 (expression -> ID .)
    ELIF            reduce using rule 139 (expression -> ID .)
    ELSE            reduce using rule 139 (expression -> ID .)
    IN              reduce using rule 139 (expression -> ID .)
    LPAREN          shift and go to state 99
    DESTRUCTASIGN   reduce using rule 84 (destroyablel -> ID .)

  ! DOT             [ reduce using rule 139 (expression -> ID .) ]
  ! LBRAC           [ shift and go to state 98 ]


state 86

    (134) expression -> MINUS . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 196
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 87

    (107) expression -> destroyablel . DESTRUCTASIGN expression

    DESTRUCTASIGN   shift and go to state 197


state 88

    (108) expression -> destroyabler . DESTRUCTASIGN expression

    DESTRUCTASIGN   shift and go to state 198


state 89

    (133) expression -> NOT . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 199
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 90

    (80) high_level_expression -> WHILE expression_parenthized . high_level_expression
    (81) expression -> WHILE expression_parenthized . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    high_level_expression          shift and go to state 200
    expression                     shift and go to state 201
    expression_block               shift and go to state 14
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 91

    (136) high_level_expression -> MINUS high_level_expression .

    $end            reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    LET             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    IF              reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    FOR             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    WHILE           reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    NOT             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    MINUS           reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    ID              reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    NUMBER          reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    STRING          reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    PI              reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    E               reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    TRUE            reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    FALSE           reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    PRINT           reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    RANGE           reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    SQRT            reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    SIN             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    COS             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    EXP             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    LOG             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    RAND            reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    LBRACE          reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    NEW             reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    LPAREN          reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    LBRAC           reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    RBRACE          reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    FUNCTION        reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    TYPE            reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)
    PROTOCOL        reduce using rule 136 (high_level_expression -> MINUS high_level_expression .)


state 92

    (134) expression -> MINUS expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 134 (expression -> MINUS expression .)
    PLUS            reduce using rule 134 (expression -> MINUS expression .)
    MINUS           reduce using rule 134 (expression -> MINUS expression .)
    TIMES           reduce using rule 134 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 134 (expression -> MINUS expression .)
    POWER           reduce using rule 134 (expression -> MINUS expression .)
    MODULE          reduce using rule 134 (expression -> MINUS expression .)
    CONCAT          reduce using rule 134 (expression -> MINUS expression .)
    DOUBLECONCAT    reduce using rule 134 (expression -> MINUS expression .)
    AND             reduce using rule 134 (expression -> MINUS expression .)
    OR              reduce using rule 134 (expression -> MINUS expression .)
    EQUAL           reduce using rule 134 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 134 (expression -> MINUS expression .)
    MINOREQUAL      reduce using rule 134 (expression -> MINUS expression .)
    MAJOREQUAL      reduce using rule 134 (expression -> MINUS expression .)
    MINOR           reduce using rule 134 (expression -> MINUS expression .)
    MAJOR           reduce using rule 134 (expression -> MINUS expression .)
    IS              reduce using rule 134 (expression -> MINUS expression .)
    AS              reduce using rule 134 (expression -> MINUS expression .)
    LBRAC           reduce using rule 134 (expression -> MINUS expression .)
    ELIF            reduce using rule 134 (expression -> MINUS expression .)
    ELSE            reduce using rule 134 (expression -> MINUS expression .)
    RPAREN          reduce using rule 134 (expression -> MINUS expression .)
    DOT             shift and go to state 73

  ! DOT             [ reduce using rule 134 (expression -> MINUS expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! POWER           [ shift and go to state 58 ]
  ! MODULE          [ shift and go to state 59 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 93

    (125) high_level_expression -> destroyablel DESTRUCTASIGN . high_level_expression
    (107) expression -> destroyablel DESTRUCTASIGN . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    destroyablel                   shift and go to state 22
    high_level_expression          shift and go to state 202
    expression                     shift and go to state 203
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 94

    (126) high_level_expression -> destroyabler DESTRUCTASIGN . high_level_expression
    (108) expression -> destroyabler DESTRUCTASIGN . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    destroyabler                   shift and go to state 23
    high_level_expression          shift and go to state 204
    expression                     shift and go to state 205
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 95

    (135) high_level_expression -> NOT high_level_expression .

    $end            reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    LET             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    IF              reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    FOR             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    WHILE           reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    NOT             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    MINUS           reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    ID              reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    NUMBER          reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    STRING          reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    PI              reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    E               reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    TRUE            reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    FALSE           reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    PRINT           reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    RANGE           reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    SQRT            reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    SIN             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    COS             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    EXP             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    LOG             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    RAND            reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    LBRACE          reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    NEW             reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    LPAREN          reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    LBRAC           reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    RBRACE          reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    FUNCTION        reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    TYPE            reduce using rule 135 (high_level_expression -> NOT high_level_expression .)
    PROTOCOL        reduce using rule 135 (high_level_expression -> NOT high_level_expression .)


state 96

    (133) expression -> NOT expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 133 (expression -> NOT expression .)
    CONCAT          reduce using rule 133 (expression -> NOT expression .)
    DOUBLECONCAT    reduce using rule 133 (expression -> NOT expression .)
    AND             reduce using rule 133 (expression -> NOT expression .)
    OR              reduce using rule 133 (expression -> NOT expression .)
    EQUAL           reduce using rule 133 (expression -> NOT expression .)
    DIFFERENT       reduce using rule 133 (expression -> NOT expression .)
    MINOREQUAL      reduce using rule 133 (expression -> NOT expression .)
    MAJOREQUAL      reduce using rule 133 (expression -> NOT expression .)
    MINOR           reduce using rule 133 (expression -> NOT expression .)
    MAJOR           reduce using rule 133 (expression -> NOT expression .)
    IS              reduce using rule 133 (expression -> NOT expression .)
    AS              reduce using rule 133 (expression -> NOT expression .)
    LBRAC           reduce using rule 133 (expression -> NOT expression .)
    ELIF            reduce using rule 133 (expression -> NOT expression .)
    ELSE            reduce using rule 133 (expression -> NOT expression .)
    RPAREN          reduce using rule 133 (expression -> NOT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 133 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 133 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 133 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 133 (expression -> NOT expression .) ]
  ! POWER           [ reduce using rule 133 (expression -> NOT expression .) ]
  ! MODULE          [ reduce using rule 133 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 133 (expression -> NOT expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 97

    (86) expression -> ID DOT . member_resolut
    (85) destroyablel -> ID DOT . ID
    (88) destroyabler -> ID DOT . ID LBRAC expression RBRAC
    (131) member_resolut -> . ID
    (132) member_resolut -> . func_call_next
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN

    ID              shift and go to state 206

    member_resolut                 shift and go to state 207
    func_call_next                 shift and go to state 166

state 98

    (87) destroyabler -> ID LBRAC . expression RBRAC
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 208
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 99

    (28) func_call_next -> ID LPAREN . func_call_args RPAREN
    (31) func_call_args -> . func_call_args_list
    (32) func_call_args_list -> . expression func_call_args_list_rem
    (33) func_call_args_list -> . empty
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (1) empty -> .
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    RPAREN          reduce using rule 1 (empty -> .)
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    func_call_args                 shift and go to state 209
    func_call_args_list            shift and go to state 102
    expression                     shift and go to state 210
    empty                          shift and go to state 103
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 100

    (141) vector -> LBRAC func_call_args . RBRAC

    RBRAC           shift and go to state 211


state 101

    (142) vector -> LBRAC expression . GENERATOR destroyable IN expression RBRAC
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (32) func_call_args_list -> expression . func_call_args_list_rem
    (130) member_resolute -> expression . DOT member_resolut
    (34) func_call_args_list_rem -> . COMMA expression func_call_args_list_rem
    (35) func_call_args_list_rem -> . empty
    (1) empty -> .

    GENERATOR       shift and go to state 212
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    COMMA           shift and go to state 214
    RBRAC           reduce using rule 1 (empty -> .)

    func_call_args_list_rem        shift and go to state 213
    empty                          shift and go to state 215

state 102

    (31) func_call_args -> func_call_args_list .

    RBRAC           reduce using rule 31 (func_call_args -> func_call_args_list .)
    RPAREN          reduce using rule 31 (func_call_args -> func_call_args_list .)


state 103

    (33) func_call_args_list -> empty .

    RBRAC           reduce using rule 33 (func_call_args_list -> empty .)
    RPAREN          reduce using rule 33 (func_call_args_list -> empty .)


state 104

    (148) expression -> PRINT LPAREN . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 216
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 105

    (149) expression -> RANGE LPAREN . expression RPAREN
    (150) expression -> RANGE LPAREN . expression COMMA expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 217
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 106

    (151) expression -> SQRT LPAREN . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 218
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 107

    (152) expression -> SIN LPAREN . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 219
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 108

    (153) expression -> COS LPAREN . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 220
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 109

    (154) expression -> EXP LPAREN . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 221
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 110

    (155) expression -> LOG LPAREN . expression COMMA expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 222
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 111

    (156) expression -> RAND LPAREN . RPAREN

    RPAREN          shift and go to state 223


state 112

    (64) expression_block -> LBRACE expression_block_list . RBRACE

    RBRACE          shift and go to state 224


state 113

    (65) expression_block_list -> high_level_expression . expression_block_list
    (65) expression_block_list -> . high_level_expression expression_block_list
    (66) expression_block_list -> . empty
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (1) empty -> .
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    RBRACE          reduce using rule 1 (empty -> .)
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 113
    expression_block_list          shift and go to state 225
    empty                          shift and go to state 114
    expression                     shift and go to state 13
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 114

    (66) expression_block_list -> empty .

    RBRACE          reduce using rule 66 (expression_block_list -> empty .)


state 115

    (30) type_call -> NEW ID . LPAREN func_call_args RPAREN

    LPAREN          shift and go to state 226


state 116

    (36) function_definition -> FUNCTION ID LPAREN . func_params RPAREN type_of ARROW high_level_expression
    (37) function_definition -> FUNCTION ID LPAREN . func_params RPAREN type_of expression_block optional_semicolon
    (38) func_params -> . func_params_list
    (39) func_params_list -> . id func_params_list_rem
    (40) func_params_list -> . empty
    (4) id -> . ID type_of
    (1) empty -> .

    ID              shift and go to state 76
    RPAREN          reduce using rule 1 (empty -> .)

    func_params                    shift and go to state 227
    func_params_list               shift and go to state 228
    id                             shift and go to state 229
    empty                          shift and go to state 230

state 117

    (43) type_def -> TYPE ID optional_type_params . optional_inheritance LBRACE type_members RBRACE optional_semicolon
    (44) optional_inheritance -> . INHERITS ID optional_inheritance_params
    (45) optional_inheritance -> . empty
    (1) empty -> .

    INHERITS        shift and go to state 232
    LBRACE          reduce using rule 1 (empty -> .)

    optional_inheritance           shift and go to state 231
    empty                          shift and go to state 233

state 118

    (48) optional_type_params -> LPAREN . typedef_params RPAREN
    (50) typedef_params -> . id typedef_params_rem
    (51) typedef_params -> . empty
    (4) id -> . ID type_of
    (1) empty -> .

    ID              shift and go to state 76
    RPAREN          reduce using rule 1 (empty -> .)

    typedef_params                 shift and go to state 234
    id                             shift and go to state 235
    empty                          shift and go to state 236

state 119

    (49) optional_type_params -> empty .

    INHERITS        reduce using rule 49 (optional_type_params -> empty .)
    LBRACE          reduce using rule 49 (optional_type_params -> empty .)


state 120

    (12) protocol_definition -> PROTOCOL ID opt_extends . LBRACE protocol_methods RBRACE optional_semicolon

    LBRACE          shift and go to state 237


state 121

    (13) opt_extends -> EXTENDS . ID

    ID              shift and go to state 238


state 122

    (14) opt_extends -> empty .

    LBRACE          reduce using rule 14 (opt_extends -> empty .)


state 123

    (89) expression -> expression PLUS expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 89 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 89 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 89 (expression -> expression PLUS expression .)
    CONCAT          reduce using rule 89 (expression -> expression PLUS expression .)
    DOUBLECONCAT    reduce using rule 89 (expression -> expression PLUS expression .)
    AND             reduce using rule 89 (expression -> expression PLUS expression .)
    OR              reduce using rule 89 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 89 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 89 (expression -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 89 (expression -> expression PLUS expression .)
    MAJOREQUAL      reduce using rule 89 (expression -> expression PLUS expression .)
    MINOR           reduce using rule 89 (expression -> expression PLUS expression .)
    MAJOR           reduce using rule 89 (expression -> expression PLUS expression .)
    IS              reduce using rule 89 (expression -> expression PLUS expression .)
    AS              reduce using rule 89 (expression -> expression PLUS expression .)
    LBRAC           reduce using rule 89 (expression -> expression PLUS expression .)
    ELIF            reduce using rule 89 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 89 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 89 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    DOT             shift and go to state 73

  ! TIMES           [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 124

    (109) high_level_expression -> expression PLUS high_level_expression .

    $end            reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    LET             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    IF              reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    FOR             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    WHILE           reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    NOT             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    MINUS           reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    ID              reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    NUMBER          reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    STRING          reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    PI              reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    E               reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    TRUE            reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    FALSE           reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    PRINT           reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    RANGE           reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    SQRT            reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    SIN             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    COS             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    EXP             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    LOG             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    RAND            reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    LBRACE          reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    NEW             reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    LPAREN          reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    LBRAC           reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    RBRACE          reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    FUNCTION        reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    TYPE            reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)
    PROTOCOL        reduce using rule 109 (high_level_expression -> expression PLUS high_level_expression .)


state 125

    (90) expression -> expression MINUS expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 90 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 90 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 90 (expression -> expression MINUS expression .)
    CONCAT          reduce using rule 90 (expression -> expression MINUS expression .)
    DOUBLECONCAT    reduce using rule 90 (expression -> expression MINUS expression .)
    AND             reduce using rule 90 (expression -> expression MINUS expression .)
    OR              reduce using rule 90 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 90 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 90 (expression -> expression MINUS expression .)
    MINOREQUAL      reduce using rule 90 (expression -> expression MINUS expression .)
    MAJOREQUAL      reduce using rule 90 (expression -> expression MINUS expression .)
    MINOR           reduce using rule 90 (expression -> expression MINUS expression .)
    MAJOR           reduce using rule 90 (expression -> expression MINUS expression .)
    IS              reduce using rule 90 (expression -> expression MINUS expression .)
    AS              reduce using rule 90 (expression -> expression MINUS expression .)
    LBRAC           reduce using rule 90 (expression -> expression MINUS expression .)
    ELIF            reduce using rule 90 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 90 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 90 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    DOT             shift and go to state 73

  ! TIMES           [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 126

    (110) high_level_expression -> expression MINUS high_level_expression .

    $end            reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    LET             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    IF              reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    FOR             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    WHILE           reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    NOT             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    MINUS           reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    ID              reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    NUMBER          reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    STRING          reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    PI              reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    E               reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    TRUE            reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    FALSE           reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    PRINT           reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    RANGE           reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    SQRT            reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    SIN             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    COS             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    EXP             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    LOG             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    RAND            reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    LBRACE          reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    NEW             reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    LPAREN          reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    LBRAC           reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    RBRACE          reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    FUNCTION        reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    TYPE            reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)
    PROTOCOL        reduce using rule 110 (high_level_expression -> expression MINUS high_level_expression .)


state 127

    (91) expression -> expression TIMES expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 91 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 91 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 91 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 91 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 91 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 91 (expression -> expression TIMES expression .)
    CONCAT          reduce using rule 91 (expression -> expression TIMES expression .)
    DOUBLECONCAT    reduce using rule 91 (expression -> expression TIMES expression .)
    AND             reduce using rule 91 (expression -> expression TIMES expression .)
    OR              reduce using rule 91 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 91 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 91 (expression -> expression TIMES expression .)
    MINOREQUAL      reduce using rule 91 (expression -> expression TIMES expression .)
    MAJOREQUAL      reduce using rule 91 (expression -> expression TIMES expression .)
    MINOR           reduce using rule 91 (expression -> expression TIMES expression .)
    MAJOR           reduce using rule 91 (expression -> expression TIMES expression .)
    IS              reduce using rule 91 (expression -> expression TIMES expression .)
    AS              reduce using rule 91 (expression -> expression TIMES expression .)
    LBRAC           reduce using rule 91 (expression -> expression TIMES expression .)
    ELIF            reduce using rule 91 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 91 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 91 (expression -> expression TIMES expression .)
    POWER           shift and go to state 58
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 91 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 91 (expression -> expression TIMES expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! MODULE          [ shift and go to state 59 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 128

    (111) high_level_expression -> expression TIMES high_level_expression .

    $end            reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    LET             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    IF              reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    FOR             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    WHILE           reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    NOT             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    MINUS           reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    ID              reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    NUMBER          reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    STRING          reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    PI              reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    E               reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    TRUE            reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    FALSE           reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    PRINT           reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    RANGE           reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    SQRT            reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    SIN             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    COS             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    EXP             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    LOG             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    RAND            reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    LBRACE          reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    NEW             reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    LPAREN          reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    LBRAC           reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    RBRACE          reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    FUNCTION        reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    TYPE            reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)
    PROTOCOL        reduce using rule 111 (high_level_expression -> expression TIMES high_level_expression .)


state 129

    (92) expression -> expression DIVIDE expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 92 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 92 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 92 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 92 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 92 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 92 (expression -> expression DIVIDE expression .)
    CONCAT          reduce using rule 92 (expression -> expression DIVIDE expression .)
    DOUBLECONCAT    reduce using rule 92 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 92 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 92 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 92 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 92 (expression -> expression DIVIDE expression .)
    MINOREQUAL      reduce using rule 92 (expression -> expression DIVIDE expression .)
    MAJOREQUAL      reduce using rule 92 (expression -> expression DIVIDE expression .)
    MINOR           reduce using rule 92 (expression -> expression DIVIDE expression .)
    MAJOR           reduce using rule 92 (expression -> expression DIVIDE expression .)
    IS              reduce using rule 92 (expression -> expression DIVIDE expression .)
    AS              reduce using rule 92 (expression -> expression DIVIDE expression .)
    LBRAC           reduce using rule 92 (expression -> expression DIVIDE expression .)
    ELIF            reduce using rule 92 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 92 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 92 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 58
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 92 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 92 (expression -> expression DIVIDE expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! MODULE          [ shift and go to state 59 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 130

    (112) high_level_expression -> expression DIVIDE high_level_expression .

    $end            reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    LET             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    IF              reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    FOR             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    WHILE           reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    NOT             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    MINUS           reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    ID              reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    NUMBER          reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    STRING          reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    PI              reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    E               reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    TRUE            reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    FALSE           reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    PRINT           reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    RANGE           reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    SQRT            reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    SIN             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    COS             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    EXP             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    LOG             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    RAND            reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    LBRACE          reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    NEW             reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    LPAREN          reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    LBRAC           reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    RBRACE          reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    FUNCTION        reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    TYPE            reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)
    PROTOCOL        reduce using rule 112 (high_level_expression -> expression DIVIDE high_level_expression .)


state 131

    (93) expression -> expression POWER expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 93 (expression -> expression POWER expression .)
    PLUS            reduce using rule 93 (expression -> expression POWER expression .)
    MINUS           reduce using rule 93 (expression -> expression POWER expression .)
    TIMES           reduce using rule 93 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 93 (expression -> expression POWER expression .)
    MODULE          reduce using rule 93 (expression -> expression POWER expression .)
    CONCAT          reduce using rule 93 (expression -> expression POWER expression .)
    DOUBLECONCAT    reduce using rule 93 (expression -> expression POWER expression .)
    AND             reduce using rule 93 (expression -> expression POWER expression .)
    OR              reduce using rule 93 (expression -> expression POWER expression .)
    EQUAL           reduce using rule 93 (expression -> expression POWER expression .)
    DIFFERENT       reduce using rule 93 (expression -> expression POWER expression .)
    MINOREQUAL      reduce using rule 93 (expression -> expression POWER expression .)
    MAJOREQUAL      reduce using rule 93 (expression -> expression POWER expression .)
    MINOR           reduce using rule 93 (expression -> expression POWER expression .)
    MAJOR           reduce using rule 93 (expression -> expression POWER expression .)
    IS              reduce using rule 93 (expression -> expression POWER expression .)
    AS              reduce using rule 93 (expression -> expression POWER expression .)
    LBRAC           reduce using rule 93 (expression -> expression POWER expression .)
    ELIF            reduce using rule 93 (expression -> expression POWER expression .)
    ELSE            reduce using rule 93 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 93 (expression -> expression POWER expression .)
    POWER           shift and go to state 58
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 93 (expression -> expression POWER expression .) ]
  ! DOT             [ reduce using rule 93 (expression -> expression POWER expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! MODULE          [ shift and go to state 59 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 132

    (113) high_level_expression -> expression POWER high_level_expression .

    $end            reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    LET             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    IF              reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    FOR             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    WHILE           reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    NOT             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    MINUS           reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    ID              reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    NUMBER          reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    STRING          reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    PI              reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    E               reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    TRUE            reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    FALSE           reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    PRINT           reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    RANGE           reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    SQRT            reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    SIN             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    COS             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    EXP             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    LOG             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    RAND            reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    LBRACE          reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    NEW             reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    LPAREN          reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    LBRAC           reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    RBRACE          reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    FUNCTION        reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    TYPE            reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)
    PROTOCOL        reduce using rule 113 (high_level_expression -> expression POWER high_level_expression .)


state 133

    (94) expression -> expression MODULE expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 94 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 94 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 94 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 94 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 94 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 94 (expression -> expression MODULE expression .)
    CONCAT          reduce using rule 94 (expression -> expression MODULE expression .)
    DOUBLECONCAT    reduce using rule 94 (expression -> expression MODULE expression .)
    AND             reduce using rule 94 (expression -> expression MODULE expression .)
    OR              reduce using rule 94 (expression -> expression MODULE expression .)
    EQUAL           reduce using rule 94 (expression -> expression MODULE expression .)
    DIFFERENT       reduce using rule 94 (expression -> expression MODULE expression .)
    MINOREQUAL      reduce using rule 94 (expression -> expression MODULE expression .)
    MAJOREQUAL      reduce using rule 94 (expression -> expression MODULE expression .)
    MINOR           reduce using rule 94 (expression -> expression MODULE expression .)
    MAJOR           reduce using rule 94 (expression -> expression MODULE expression .)
    IS              reduce using rule 94 (expression -> expression MODULE expression .)
    AS              reduce using rule 94 (expression -> expression MODULE expression .)
    LBRAC           reduce using rule 94 (expression -> expression MODULE expression .)
    ELIF            reduce using rule 94 (expression -> expression MODULE expression .)
    ELSE            reduce using rule 94 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 94 (expression -> expression MODULE expression .)
    POWER           shift and go to state 58
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 94 (expression -> expression MODULE expression .) ]
  ! DOT             [ reduce using rule 94 (expression -> expression MODULE expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! MODULE          [ shift and go to state 59 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 134

    (114) high_level_expression -> expression MODULE high_level_expression .

    $end            reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    LET             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    IF              reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    FOR             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    WHILE           reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    NOT             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    MINUS           reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    ID              reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    NUMBER          reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    STRING          reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    PI              reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    E               reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    TRUE            reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    FALSE           reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    PRINT           reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    RANGE           reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    SQRT            reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    SIN             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    COS             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    EXP             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    LOG             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    RAND            reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    LBRACE          reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    NEW             reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    LPAREN          reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    LBRAC           reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    RBRACE          reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    FUNCTION        reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    TYPE            reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)
    PROTOCOL        reduce using rule 114 (high_level_expression -> expression MODULE high_level_expression .)


state 135

    (95) expression -> expression CONCAT expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 95 (expression -> expression CONCAT expression .)
    CONCAT          reduce using rule 95 (expression -> expression CONCAT expression .)
    DOUBLECONCAT    reduce using rule 95 (expression -> expression CONCAT expression .)
    IS              reduce using rule 95 (expression -> expression CONCAT expression .)
    AS              reduce using rule 95 (expression -> expression CONCAT expression .)
    LBRAC           reduce using rule 95 (expression -> expression CONCAT expression .)
    ELIF            reduce using rule 95 (expression -> expression CONCAT expression .)
    ELSE            reduce using rule 95 (expression -> expression CONCAT expression .)
    RPAREN          reduce using rule 95 (expression -> expression CONCAT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MINUS           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! TIMES           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! DIVIDE          [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! POWER           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MODULE          [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! AND             [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! OR              [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! EQUAL           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! DIFFERENT       [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MINOREQUAL      [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MAJOREQUAL      [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MINOR           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MAJOR           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! DOT             [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 136

    (115) high_level_expression -> expression CONCAT high_level_expression .

    $end            reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    LET             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    IF              reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    FOR             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    WHILE           reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    NOT             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    MINUS           reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    ID              reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    NUMBER          reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    STRING          reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    PI              reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    E               reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    TRUE            reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    FALSE           reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    PRINT           reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    RANGE           reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    SQRT            reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    SIN             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    COS             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    EXP             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    LOG             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    RAND            reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    LBRACE          reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    NEW             reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    LPAREN          reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    LBRAC           reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    RBRACE          reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    FUNCTION        reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    TYPE            reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)
    PROTOCOL        reduce using rule 115 (high_level_expression -> expression CONCAT high_level_expression .)


state 137

    (96) expression -> expression DOUBLECONCAT expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    CONCAT          reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    DOUBLECONCAT    reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    IS              reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    AS              reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    LBRAC           reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    ELIF            reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    ELSE            reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    RPAREN          reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MINUS           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! TIMES           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! DIVIDE          [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! POWER           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MODULE          [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! AND             [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! OR              [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! EQUAL           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! DIFFERENT       [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MINOREQUAL      [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MAJOREQUAL      [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MINOR           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MAJOR           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! DOT             [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 138

    (116) high_level_expression -> expression DOUBLECONCAT high_level_expression .

    $end            reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    LET             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    IF              reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    FOR             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    WHILE           reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    NOT             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    MINUS           reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    ID              reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    NUMBER          reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    STRING          reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    PI              reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    E               reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    TRUE            reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    FALSE           reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    PRINT           reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    RANGE           reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    SQRT            reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    SIN             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    COS             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    EXP             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    LOG             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    RAND            reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    LBRACE          reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    NEW             reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    LPAREN          reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    LBRAC           reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    RBRACE          reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    FUNCTION        reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    TYPE            reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)
    PROTOCOL        reduce using rule 116 (high_level_expression -> expression DOUBLECONCAT high_level_expression .)


state 139

    (97) expression -> expression AND expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 97 (expression -> expression AND expression .)
    CONCAT          reduce using rule 97 (expression -> expression AND expression .)
    DOUBLECONCAT    reduce using rule 97 (expression -> expression AND expression .)
    AND             reduce using rule 97 (expression -> expression AND expression .)
    OR              reduce using rule 97 (expression -> expression AND expression .)
    IS              reduce using rule 97 (expression -> expression AND expression .)
    AS              reduce using rule 97 (expression -> expression AND expression .)
    LBRAC           reduce using rule 97 (expression -> expression AND expression .)
    ELIF            reduce using rule 97 (expression -> expression AND expression .)
    ELSE            reduce using rule 97 (expression -> expression AND expression .)
    RPAREN          reduce using rule 97 (expression -> expression AND expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! POWER           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! DIFFERENT       [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MINOREQUAL      [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MAJOREQUAL      [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MINOR           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MAJOR           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 140

    (117) high_level_expression -> expression AND high_level_expression .

    $end            reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    LET             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    IF              reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    FOR             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    WHILE           reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    NOT             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    MINUS           reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    ID              reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    NUMBER          reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    STRING          reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    PI              reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    E               reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    TRUE            reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    FALSE           reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    PRINT           reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    RANGE           reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    SQRT            reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    SIN             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    COS             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    EXP             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    LOG             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    RAND            reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    LBRACE          reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    NEW             reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    LPAREN          reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    LBRAC           reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    RBRACE          reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    FUNCTION        reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    TYPE            reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)
    PROTOCOL        reduce using rule 117 (high_level_expression -> expression AND high_level_expression .)


state 141

    (98) expression -> expression OR expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 98 (expression -> expression OR expression .)
    CONCAT          reduce using rule 98 (expression -> expression OR expression .)
    DOUBLECONCAT    reduce using rule 98 (expression -> expression OR expression .)
    OR              reduce using rule 98 (expression -> expression OR expression .)
    IS              reduce using rule 98 (expression -> expression OR expression .)
    AS              reduce using rule 98 (expression -> expression OR expression .)
    LBRAC           reduce using rule 98 (expression -> expression OR expression .)
    ELIF            reduce using rule 98 (expression -> expression OR expression .)
    ELSE            reduce using rule 98 (expression -> expression OR expression .)
    RPAREN          reduce using rule 98 (expression -> expression OR expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    AND             shift and go to state 62
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! POWER           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! DIFFERENT       [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MINOREQUAL      [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MAJOREQUAL      [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MINOR           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MAJOR           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! OR              [ shift and go to state 63 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 142

    (118) high_level_expression -> expression OR high_level_expression .

    $end            reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    LET             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    IF              reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    FOR             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    WHILE           reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    NOT             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    MINUS           reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    ID              reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    NUMBER          reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    STRING          reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    PI              reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    E               reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    TRUE            reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    FALSE           reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    PRINT           reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    RANGE           reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    SQRT            reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    SIN             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    COS             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    EXP             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    LOG             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    RAND            reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    LBRACE          reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    NEW             reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    LPAREN          reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    LBRAC           reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    RBRACE          reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    FUNCTION        reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    TYPE            reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)
    PROTOCOL        reduce using rule 118 (high_level_expression -> expression OR high_level_expression .)


state 143

    (99) expression -> expression EQUAL expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 99 (expression -> expression EQUAL expression .)
    CONCAT          reduce using rule 99 (expression -> expression EQUAL expression .)
    DOUBLECONCAT    reduce using rule 99 (expression -> expression EQUAL expression .)
    AND             reduce using rule 99 (expression -> expression EQUAL expression .)
    OR              reduce using rule 99 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 99 (expression -> expression EQUAL expression .)
    DIFFERENT       reduce using rule 99 (expression -> expression EQUAL expression .)
    IS              reduce using rule 99 (expression -> expression EQUAL expression .)
    AS              reduce using rule 99 (expression -> expression EQUAL expression .)
    LBRAC           reduce using rule 99 (expression -> expression EQUAL expression .)
    ELIF            reduce using rule 99 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 99 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 99 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! POWER           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MODULE          [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MINOREQUAL      [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MAJOREQUAL      [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MINOR           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MAJOR           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! DOT             [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 144

    (119) high_level_expression -> expression EQUAL high_level_expression .

    $end            reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    LET             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    IF              reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    FOR             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    WHILE           reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    NOT             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    MINUS           reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    ID              reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    NUMBER          reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    STRING          reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    PI              reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    E               reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    TRUE            reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    FALSE           reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    PRINT           reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    RANGE           reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    SQRT            reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    SIN             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    COS             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    EXP             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    LOG             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    RAND            reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    LBRACE          reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    NEW             reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    LPAREN          reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    LBRAC           reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    RBRACE          reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    FUNCTION        reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    TYPE            reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)
    PROTOCOL        reduce using rule 119 (high_level_expression -> expression EQUAL high_level_expression .)


state 145

    (100) expression -> expression DIFFERENT expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 100 (expression -> expression DIFFERENT expression .)
    CONCAT          reduce using rule 100 (expression -> expression DIFFERENT expression .)
    DOUBLECONCAT    reduce using rule 100 (expression -> expression DIFFERENT expression .)
    AND             reduce using rule 100 (expression -> expression DIFFERENT expression .)
    OR              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    EQUAL           reduce using rule 100 (expression -> expression DIFFERENT expression .)
    DIFFERENT       reduce using rule 100 (expression -> expression DIFFERENT expression .)
    IS              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    AS              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    LBRAC           reduce using rule 100 (expression -> expression DIFFERENT expression .)
    ELIF            reduce using rule 100 (expression -> expression DIFFERENT expression .)
    ELSE            reduce using rule 100 (expression -> expression DIFFERENT expression .)
    RPAREN          reduce using rule 100 (expression -> expression DIFFERENT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! POWER           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MODULE          [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MINOREQUAL      [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MAJOREQUAL      [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MINOR           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MAJOR           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! DOT             [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 146

    (120) high_level_expression -> expression DIFFERENT high_level_expression .

    $end            reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    LET             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    IF              reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    FOR             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    WHILE           reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    NOT             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    MINUS           reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    ID              reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    NUMBER          reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    STRING          reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    PI              reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    E               reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    TRUE            reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    FALSE           reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    PRINT           reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    RANGE           reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    SQRT            reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    SIN             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    COS             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    EXP             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    LOG             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    RAND            reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    LBRACE          reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    NEW             reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    LPAREN          reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    LBRAC           reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    RBRACE          reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    FUNCTION        reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    TYPE            reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)
    PROTOCOL        reduce using rule 120 (high_level_expression -> expression DIFFERENT high_level_expression .)


state 147

    (101) expression -> expression MINOREQUAL expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    CONCAT          reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    DOUBLECONCAT    reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    AND             reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    OR              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    EQUAL           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    DIFFERENT       reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    IS              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    AS              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    LBRAC           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    ELIF            reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    ELSE            reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    RPAREN          reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MINUS           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! TIMES           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! POWER           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MODULE          [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MINOREQUAL      [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MAJOREQUAL      [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MINOR           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MAJOR           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! DOT             [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 148

    (121) high_level_expression -> expression MINOREQUAL high_level_expression .

    $end            reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    LET             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    IF              reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    FOR             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    WHILE           reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    NOT             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    MINUS           reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    ID              reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    NUMBER          reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    STRING          reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    PI              reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    E               reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    TRUE            reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    FALSE           reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    PRINT           reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    RANGE           reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    SQRT            reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    SIN             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    COS             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    EXP             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    LOG             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    RAND            reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    LBRACE          reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    NEW             reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    LPAREN          reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    LBRAC           reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    RBRACE          reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    FUNCTION        reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    TYPE            reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)
    PROTOCOL        reduce using rule 121 (high_level_expression -> expression MINOREQUAL high_level_expression .)


state 149

    (102) expression -> expression MAJOREQUAL expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    CONCAT          reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    DOUBLECONCAT    reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    AND             reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    OR              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    EQUAL           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    DIFFERENT       reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    IS              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    AS              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    LBRAC           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    ELIF            reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    ELSE            reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    RPAREN          reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MINUS           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! TIMES           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! POWER           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MODULE          [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MINOREQUAL      [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MAJOREQUAL      [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MINOR           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MAJOR           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! DOT             [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 150

    (122) high_level_expression -> expression MAJOREQUAL high_level_expression .

    $end            reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    LET             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    IF              reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    FOR             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    WHILE           reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    NOT             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    MINUS           reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    ID              reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    NUMBER          reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    STRING          reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    PI              reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    E               reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    TRUE            reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    FALSE           reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    PRINT           reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    RANGE           reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    SQRT            reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    SIN             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    COS             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    EXP             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    LOG             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    RAND            reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    LBRACE          reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    NEW             reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    LPAREN          reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    LBRAC           reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    RBRACE          reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    FUNCTION        reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    TYPE            reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)
    PROTOCOL        reduce using rule 122 (high_level_expression -> expression MAJOREQUAL high_level_expression .)


state 151

    (103) expression -> expression MINOR expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 103 (expression -> expression MINOR expression .)
    CONCAT          reduce using rule 103 (expression -> expression MINOR expression .)
    DOUBLECONCAT    reduce using rule 103 (expression -> expression MINOR expression .)
    AND             reduce using rule 103 (expression -> expression MINOR expression .)
    OR              reduce using rule 103 (expression -> expression MINOR expression .)
    EQUAL           reduce using rule 103 (expression -> expression MINOR expression .)
    DIFFERENT       reduce using rule 103 (expression -> expression MINOR expression .)
    IS              reduce using rule 103 (expression -> expression MINOR expression .)
    AS              reduce using rule 103 (expression -> expression MINOR expression .)
    LBRAC           reduce using rule 103 (expression -> expression MINOR expression .)
    ELIF            reduce using rule 103 (expression -> expression MINOR expression .)
    ELSE            reduce using rule 103 (expression -> expression MINOR expression .)
    RPAREN          reduce using rule 103 (expression -> expression MINOR expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MINUS           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! TIMES           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! DIVIDE          [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! POWER           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MODULE          [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MINOREQUAL      [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MAJOREQUAL      [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MINOR           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MAJOR           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! DOT             [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 152

    (123) high_level_expression -> expression MINOR high_level_expression .

    $end            reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    LET             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    IF              reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    FOR             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    WHILE           reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    NOT             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    MINUS           reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    ID              reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    NUMBER          reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    STRING          reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    PI              reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    E               reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    TRUE            reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    FALSE           reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    PRINT           reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    RANGE           reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    SQRT            reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    SIN             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    COS             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    EXP             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    LOG             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    RAND            reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    LBRACE          reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    NEW             reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    LPAREN          reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    LBRAC           reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    RBRACE          reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    FUNCTION        reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    TYPE            reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)
    PROTOCOL        reduce using rule 123 (high_level_expression -> expression MINOR high_level_expression .)


state 153

    (104) expression -> expression MAJOR expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 104 (expression -> expression MAJOR expression .)
    CONCAT          reduce using rule 104 (expression -> expression MAJOR expression .)
    DOUBLECONCAT    reduce using rule 104 (expression -> expression MAJOR expression .)
    AND             reduce using rule 104 (expression -> expression MAJOR expression .)
    OR              reduce using rule 104 (expression -> expression MAJOR expression .)
    EQUAL           reduce using rule 104 (expression -> expression MAJOR expression .)
    DIFFERENT       reduce using rule 104 (expression -> expression MAJOR expression .)
    IS              reduce using rule 104 (expression -> expression MAJOR expression .)
    AS              reduce using rule 104 (expression -> expression MAJOR expression .)
    LBRAC           reduce using rule 104 (expression -> expression MAJOR expression .)
    ELIF            reduce using rule 104 (expression -> expression MAJOR expression .)
    ELSE            reduce using rule 104 (expression -> expression MAJOR expression .)
    RPAREN          reduce using rule 104 (expression -> expression MAJOR expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MINUS           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! TIMES           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! DIVIDE          [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! POWER           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MODULE          [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MINOREQUAL      [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MAJOREQUAL      [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MINOR           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MAJOR           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! DOT             [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 154

    (124) high_level_expression -> expression MAJOR high_level_expression .

    $end            reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    LET             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    IF              reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    FOR             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    WHILE           reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    NOT             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    MINUS           reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    ID              reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    NUMBER          reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    STRING          reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    PI              reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    E               reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    TRUE            reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    FALSE           reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    PRINT           reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    RANGE           reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    SQRT            reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    SIN             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    COS             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    EXP             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    LOG             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    RAND            reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    LBRACE          reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    NEW             reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    LPAREN          reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    LBRAC           reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    RBRACE          reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    FUNCTION        reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    TYPE            reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)
    PROTOCOL        reduce using rule 124 (high_level_expression -> expression MAJOR high_level_expression .)


state 155

    (105) expression -> expression IS type_test .

    SEMICOLON       reduce using rule 105 (expression -> expression IS type_test .)
    PLUS            reduce using rule 105 (expression -> expression IS type_test .)
    MINUS           reduce using rule 105 (expression -> expression IS type_test .)
    TIMES           reduce using rule 105 (expression -> expression IS type_test .)
    DIVIDE          reduce using rule 105 (expression -> expression IS type_test .)
    POWER           reduce using rule 105 (expression -> expression IS type_test .)
    MODULE          reduce using rule 105 (expression -> expression IS type_test .)
    CONCAT          reduce using rule 105 (expression -> expression IS type_test .)
    DOUBLECONCAT    reduce using rule 105 (expression -> expression IS type_test .)
    AND             reduce using rule 105 (expression -> expression IS type_test .)
    OR              reduce using rule 105 (expression -> expression IS type_test .)
    EQUAL           reduce using rule 105 (expression -> expression IS type_test .)
    DIFFERENT       reduce using rule 105 (expression -> expression IS type_test .)
    MINOREQUAL      reduce using rule 105 (expression -> expression IS type_test .)
    MAJOREQUAL      reduce using rule 105 (expression -> expression IS type_test .)
    MINOR           reduce using rule 105 (expression -> expression IS type_test .)
    MAJOR           reduce using rule 105 (expression -> expression IS type_test .)
    IS              reduce using rule 105 (expression -> expression IS type_test .)
    AS              reduce using rule 105 (expression -> expression IS type_test .)
    LBRAC           reduce using rule 105 (expression -> expression IS type_test .)
    DOT             reduce using rule 105 (expression -> expression IS type_test .)
    RPAREN          reduce using rule 105 (expression -> expression IS type_test .)
    ELIF            reduce using rule 105 (expression -> expression IS type_test .)
    ELSE            reduce using rule 105 (expression -> expression IS type_test .)
    GENERATOR       reduce using rule 105 (expression -> expression IS type_test .)
    COMMA           reduce using rule 105 (expression -> expression IS type_test .)
    RBRAC           reduce using rule 105 (expression -> expression IS type_test .)
    IN              reduce using rule 105 (expression -> expression IS type_test .)


state 156

    (128) type_test -> args .

    SEMICOLON       reduce using rule 128 (type_test -> args .)
    PLUS            reduce using rule 128 (type_test -> args .)
    MINUS           reduce using rule 128 (type_test -> args .)
    TIMES           reduce using rule 128 (type_test -> args .)
    DIVIDE          reduce using rule 128 (type_test -> args .)
    POWER           reduce using rule 128 (type_test -> args .)
    MODULE          reduce using rule 128 (type_test -> args .)
    CONCAT          reduce using rule 128 (type_test -> args .)
    DOUBLECONCAT    reduce using rule 128 (type_test -> args .)
    AND             reduce using rule 128 (type_test -> args .)
    OR              reduce using rule 128 (type_test -> args .)
    EQUAL           reduce using rule 128 (type_test -> args .)
    DIFFERENT       reduce using rule 128 (type_test -> args .)
    MINOREQUAL      reduce using rule 128 (type_test -> args .)
    MAJOREQUAL      reduce using rule 128 (type_test -> args .)
    MINOR           reduce using rule 128 (type_test -> args .)
    MAJOR           reduce using rule 128 (type_test -> args .)
    IS              reduce using rule 128 (type_test -> args .)
    AS              reduce using rule 128 (type_test -> args .)
    LBRAC           reduce using rule 128 (type_test -> args .)
    DOT             reduce using rule 128 (type_test -> args .)
    RPAREN          reduce using rule 128 (type_test -> args .)
    ELIF            reduce using rule 128 (type_test -> args .)
    ELSE            reduce using rule 128 (type_test -> args .)
    GENERATOR       reduce using rule 128 (type_test -> args .)
    COMMA           reduce using rule 128 (type_test -> args .)
    RBRAC           reduce using rule 128 (type_test -> args .)
    IN              reduce using rule 128 (type_test -> args .)


state 157

    (18) args -> ID .

    SEMICOLON       reduce using rule 18 (args -> ID .)
    PLUS            reduce using rule 18 (args -> ID .)
    MINUS           reduce using rule 18 (args -> ID .)
    TIMES           reduce using rule 18 (args -> ID .)
    DIVIDE          reduce using rule 18 (args -> ID .)
    POWER           reduce using rule 18 (args -> ID .)
    MODULE          reduce using rule 18 (args -> ID .)
    CONCAT          reduce using rule 18 (args -> ID .)
    DOUBLECONCAT    reduce using rule 18 (args -> ID .)
    AND             reduce using rule 18 (args -> ID .)
    OR              reduce using rule 18 (args -> ID .)
    EQUAL           reduce using rule 18 (args -> ID .)
    DIFFERENT       reduce using rule 18 (args -> ID .)
    MINOREQUAL      reduce using rule 18 (args -> ID .)
    MAJOREQUAL      reduce using rule 18 (args -> ID .)
    MINOR           reduce using rule 18 (args -> ID .)
    MAJOR           reduce using rule 18 (args -> ID .)
    IS              reduce using rule 18 (args -> ID .)
    AS              reduce using rule 18 (args -> ID .)
    LBRAC           reduce using rule 18 (args -> ID .)
    DOT             reduce using rule 18 (args -> ID .)
    RPAREN          reduce using rule 18 (args -> ID .)
    ELIF            reduce using rule 18 (args -> ID .)
    ELSE            reduce using rule 18 (args -> ID .)
    GENERATOR       reduce using rule 18 (args -> ID .)
    COMMA           reduce using rule 18 (args -> ID .)
    RBRAC           reduce using rule 18 (args -> ID .)
    IN              reduce using rule 18 (args -> ID .)
    ASIGN           reduce using rule 18 (args -> ID .)
    ARROW           reduce using rule 18 (args -> ID .)
    LBRACE          reduce using rule 18 (args -> ID .)


state 158

    (19) args -> OBJECT .

    SEMICOLON       reduce using rule 19 (args -> OBJECT .)
    PLUS            reduce using rule 19 (args -> OBJECT .)
    MINUS           reduce using rule 19 (args -> OBJECT .)
    TIMES           reduce using rule 19 (args -> OBJECT .)
    DIVIDE          reduce using rule 19 (args -> OBJECT .)
    POWER           reduce using rule 19 (args -> OBJECT .)
    MODULE          reduce using rule 19 (args -> OBJECT .)
    CONCAT          reduce using rule 19 (args -> OBJECT .)
    DOUBLECONCAT    reduce using rule 19 (args -> OBJECT .)
    AND             reduce using rule 19 (args -> OBJECT .)
    OR              reduce using rule 19 (args -> OBJECT .)
    EQUAL           reduce using rule 19 (args -> OBJECT .)
    DIFFERENT       reduce using rule 19 (args -> OBJECT .)
    MINOREQUAL      reduce using rule 19 (args -> OBJECT .)
    MAJOREQUAL      reduce using rule 19 (args -> OBJECT .)
    MINOR           reduce using rule 19 (args -> OBJECT .)
    MAJOR           reduce using rule 19 (args -> OBJECT .)
    IS              reduce using rule 19 (args -> OBJECT .)
    AS              reduce using rule 19 (args -> OBJECT .)
    LBRAC           reduce using rule 19 (args -> OBJECT .)
    DOT             reduce using rule 19 (args -> OBJECT .)
    RPAREN          reduce using rule 19 (args -> OBJECT .)
    ELIF            reduce using rule 19 (args -> OBJECT .)
    ELSE            reduce using rule 19 (args -> OBJECT .)
    GENERATOR       reduce using rule 19 (args -> OBJECT .)
    COMMA           reduce using rule 19 (args -> OBJECT .)
    RBRAC           reduce using rule 19 (args -> OBJECT .)
    IN              reduce using rule 19 (args -> OBJECT .)
    ASIGN           reduce using rule 19 (args -> OBJECT .)
    ARROW           reduce using rule 19 (args -> OBJECT .)
    LBRACE          reduce using rule 19 (args -> OBJECT .)


state 159

    (20) args -> NUMBERTYPE .

    SEMICOLON       reduce using rule 20 (args -> NUMBERTYPE .)
    PLUS            reduce using rule 20 (args -> NUMBERTYPE .)
    MINUS           reduce using rule 20 (args -> NUMBERTYPE .)
    TIMES           reduce using rule 20 (args -> NUMBERTYPE .)
    DIVIDE          reduce using rule 20 (args -> NUMBERTYPE .)
    POWER           reduce using rule 20 (args -> NUMBERTYPE .)
    MODULE          reduce using rule 20 (args -> NUMBERTYPE .)
    CONCAT          reduce using rule 20 (args -> NUMBERTYPE .)
    DOUBLECONCAT    reduce using rule 20 (args -> NUMBERTYPE .)
    AND             reduce using rule 20 (args -> NUMBERTYPE .)
    OR              reduce using rule 20 (args -> NUMBERTYPE .)
    EQUAL           reduce using rule 20 (args -> NUMBERTYPE .)
    DIFFERENT       reduce using rule 20 (args -> NUMBERTYPE .)
    MINOREQUAL      reduce using rule 20 (args -> NUMBERTYPE .)
    MAJOREQUAL      reduce using rule 20 (args -> NUMBERTYPE .)
    MINOR           reduce using rule 20 (args -> NUMBERTYPE .)
    MAJOR           reduce using rule 20 (args -> NUMBERTYPE .)
    IS              reduce using rule 20 (args -> NUMBERTYPE .)
    AS              reduce using rule 20 (args -> NUMBERTYPE .)
    LBRAC           reduce using rule 20 (args -> NUMBERTYPE .)
    DOT             reduce using rule 20 (args -> NUMBERTYPE .)
    RPAREN          reduce using rule 20 (args -> NUMBERTYPE .)
    ELIF            reduce using rule 20 (args -> NUMBERTYPE .)
    ELSE            reduce using rule 20 (args -> NUMBERTYPE .)
    GENERATOR       reduce using rule 20 (args -> NUMBERTYPE .)
    COMMA           reduce using rule 20 (args -> NUMBERTYPE .)
    RBRAC           reduce using rule 20 (args -> NUMBERTYPE .)
    IN              reduce using rule 20 (args -> NUMBERTYPE .)
    ASIGN           reduce using rule 20 (args -> NUMBERTYPE .)
    ARROW           reduce using rule 20 (args -> NUMBERTYPE .)
    LBRACE          reduce using rule 20 (args -> NUMBERTYPE .)


state 160

    (21) args -> STRINGTYPE .

    SEMICOLON       reduce using rule 21 (args -> STRINGTYPE .)
    PLUS            reduce using rule 21 (args -> STRINGTYPE .)
    MINUS           reduce using rule 21 (args -> STRINGTYPE .)
    TIMES           reduce using rule 21 (args -> STRINGTYPE .)
    DIVIDE          reduce using rule 21 (args -> STRINGTYPE .)
    POWER           reduce using rule 21 (args -> STRINGTYPE .)
    MODULE          reduce using rule 21 (args -> STRINGTYPE .)
    CONCAT          reduce using rule 21 (args -> STRINGTYPE .)
    DOUBLECONCAT    reduce using rule 21 (args -> STRINGTYPE .)
    AND             reduce using rule 21 (args -> STRINGTYPE .)
    OR              reduce using rule 21 (args -> STRINGTYPE .)
    EQUAL           reduce using rule 21 (args -> STRINGTYPE .)
    DIFFERENT       reduce using rule 21 (args -> STRINGTYPE .)
    MINOREQUAL      reduce using rule 21 (args -> STRINGTYPE .)
    MAJOREQUAL      reduce using rule 21 (args -> STRINGTYPE .)
    MINOR           reduce using rule 21 (args -> STRINGTYPE .)
    MAJOR           reduce using rule 21 (args -> STRINGTYPE .)
    IS              reduce using rule 21 (args -> STRINGTYPE .)
    AS              reduce using rule 21 (args -> STRINGTYPE .)
    LBRAC           reduce using rule 21 (args -> STRINGTYPE .)
    DOT             reduce using rule 21 (args -> STRINGTYPE .)
    RPAREN          reduce using rule 21 (args -> STRINGTYPE .)
    ELIF            reduce using rule 21 (args -> STRINGTYPE .)
    ELSE            reduce using rule 21 (args -> STRINGTYPE .)
    GENERATOR       reduce using rule 21 (args -> STRINGTYPE .)
    COMMA           reduce using rule 21 (args -> STRINGTYPE .)
    RBRAC           reduce using rule 21 (args -> STRINGTYPE .)
    IN              reduce using rule 21 (args -> STRINGTYPE .)
    ASIGN           reduce using rule 21 (args -> STRINGTYPE .)
    ARROW           reduce using rule 21 (args -> STRINGTYPE .)
    LBRACE          reduce using rule 21 (args -> STRINGTYPE .)


state 161

    (22) args -> BOOLEANTYPE .

    SEMICOLON       reduce using rule 22 (args -> BOOLEANTYPE .)
    PLUS            reduce using rule 22 (args -> BOOLEANTYPE .)
    MINUS           reduce using rule 22 (args -> BOOLEANTYPE .)
    TIMES           reduce using rule 22 (args -> BOOLEANTYPE .)
    DIVIDE          reduce using rule 22 (args -> BOOLEANTYPE .)
    POWER           reduce using rule 22 (args -> BOOLEANTYPE .)
    MODULE          reduce using rule 22 (args -> BOOLEANTYPE .)
    CONCAT          reduce using rule 22 (args -> BOOLEANTYPE .)
    DOUBLECONCAT    reduce using rule 22 (args -> BOOLEANTYPE .)
    AND             reduce using rule 22 (args -> BOOLEANTYPE .)
    OR              reduce using rule 22 (args -> BOOLEANTYPE .)
    EQUAL           reduce using rule 22 (args -> BOOLEANTYPE .)
    DIFFERENT       reduce using rule 22 (args -> BOOLEANTYPE .)
    MINOREQUAL      reduce using rule 22 (args -> BOOLEANTYPE .)
    MAJOREQUAL      reduce using rule 22 (args -> BOOLEANTYPE .)
    MINOR           reduce using rule 22 (args -> BOOLEANTYPE .)
    MAJOR           reduce using rule 22 (args -> BOOLEANTYPE .)
    IS              reduce using rule 22 (args -> BOOLEANTYPE .)
    AS              reduce using rule 22 (args -> BOOLEANTYPE .)
    LBRAC           reduce using rule 22 (args -> BOOLEANTYPE .)
    DOT             reduce using rule 22 (args -> BOOLEANTYPE .)
    RPAREN          reduce using rule 22 (args -> BOOLEANTYPE .)
    ELIF            reduce using rule 22 (args -> BOOLEANTYPE .)
    ELSE            reduce using rule 22 (args -> BOOLEANTYPE .)
    GENERATOR       reduce using rule 22 (args -> BOOLEANTYPE .)
    COMMA           reduce using rule 22 (args -> BOOLEANTYPE .)
    RBRAC           reduce using rule 22 (args -> BOOLEANTYPE .)
    IN              reduce using rule 22 (args -> BOOLEANTYPE .)
    ASIGN           reduce using rule 22 (args -> BOOLEANTYPE .)
    ARROW           reduce using rule 22 (args -> BOOLEANTYPE .)
    LBRACE          reduce using rule 22 (args -> BOOLEANTYPE .)


state 162

    (106) expression -> expression AS type_test .

    SEMICOLON       reduce using rule 106 (expression -> expression AS type_test .)
    PLUS            reduce using rule 106 (expression -> expression AS type_test .)
    MINUS           reduce using rule 106 (expression -> expression AS type_test .)
    TIMES           reduce using rule 106 (expression -> expression AS type_test .)
    DIVIDE          reduce using rule 106 (expression -> expression AS type_test .)
    POWER           reduce using rule 106 (expression -> expression AS type_test .)
    MODULE          reduce using rule 106 (expression -> expression AS type_test .)
    CONCAT          reduce using rule 106 (expression -> expression AS type_test .)
    DOUBLECONCAT    reduce using rule 106 (expression -> expression AS type_test .)
    AND             reduce using rule 106 (expression -> expression AS type_test .)
    OR              reduce using rule 106 (expression -> expression AS type_test .)
    EQUAL           reduce using rule 106 (expression -> expression AS type_test .)
    DIFFERENT       reduce using rule 106 (expression -> expression AS type_test .)
    MINOREQUAL      reduce using rule 106 (expression -> expression AS type_test .)
    MAJOREQUAL      reduce using rule 106 (expression -> expression AS type_test .)
    MINOR           reduce using rule 106 (expression -> expression AS type_test .)
    MAJOR           reduce using rule 106 (expression -> expression AS type_test .)
    IS              reduce using rule 106 (expression -> expression AS type_test .)
    AS              reduce using rule 106 (expression -> expression AS type_test .)
    LBRAC           reduce using rule 106 (expression -> expression AS type_test .)
    DOT             reduce using rule 106 (expression -> expression AS type_test .)
    RPAREN          reduce using rule 106 (expression -> expression AS type_test .)
    ELIF            reduce using rule 106 (expression -> expression AS type_test .)
    ELSE            reduce using rule 106 (expression -> expression AS type_test .)
    GENERATOR       reduce using rule 106 (expression -> expression AS type_test .)
    COMMA           reduce using rule 106 (expression -> expression AS type_test .)
    RBRAC           reduce using rule 106 (expression -> expression AS type_test .)
    IN              reduce using rule 106 (expression -> expression AS type_test .)


state 163

    (143) expression -> expression LBRAC expression . RBRAC
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RBRAC           shift and go to state 239
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 164

    (130) member_resolute -> expression DOT member_resolut .

    SEMICOLON       reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    PLUS            reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    MINUS           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    TIMES           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    DIVIDE          reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    POWER           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    MODULE          reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    CONCAT          reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    DOUBLECONCAT    reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    AND             reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    OR              reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    EQUAL           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    DIFFERENT       reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    MINOREQUAL      reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    MAJOREQUAL      reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    MINOR           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    MAJOR           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    IS              reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    AS              reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    LBRAC           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    DOT             reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    RPAREN          reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    ELIF            reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    ELSE            reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    GENERATOR       reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    COMMA           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    RBRAC           reduce using rule 130 (member_resolute -> expression DOT member_resolut .)
    IN              reduce using rule 130 (member_resolute -> expression DOT member_resolut .)


state 165

    (131) member_resolut -> ID .
    (28) func_call_next -> ID . LPAREN func_call_args RPAREN

    SEMICOLON       reduce using rule 131 (member_resolut -> ID .)
    PLUS            reduce using rule 131 (member_resolut -> ID .)
    MINUS           reduce using rule 131 (member_resolut -> ID .)
    TIMES           reduce using rule 131 (member_resolut -> ID .)
    DIVIDE          reduce using rule 131 (member_resolut -> ID .)
    POWER           reduce using rule 131 (member_resolut -> ID .)
    MODULE          reduce using rule 131 (member_resolut -> ID .)
    CONCAT          reduce using rule 131 (member_resolut -> ID .)
    DOUBLECONCAT    reduce using rule 131 (member_resolut -> ID .)
    AND             reduce using rule 131 (member_resolut -> ID .)
    OR              reduce using rule 131 (member_resolut -> ID .)
    EQUAL           reduce using rule 131 (member_resolut -> ID .)
    DIFFERENT       reduce using rule 131 (member_resolut -> ID .)
    MINOREQUAL      reduce using rule 131 (member_resolut -> ID .)
    MAJOREQUAL      reduce using rule 131 (member_resolut -> ID .)
    MINOR           reduce using rule 131 (member_resolut -> ID .)
    MAJOR           reduce using rule 131 (member_resolut -> ID .)
    IS              reduce using rule 131 (member_resolut -> ID .)
    AS              reduce using rule 131 (member_resolut -> ID .)
    LBRAC           reduce using rule 131 (member_resolut -> ID .)
    DOT             reduce using rule 131 (member_resolut -> ID .)
    RPAREN          reduce using rule 131 (member_resolut -> ID .)
    ELIF            reduce using rule 131 (member_resolut -> ID .)
    ELSE            reduce using rule 131 (member_resolut -> ID .)
    GENERATOR       reduce using rule 131 (member_resolut -> ID .)
    COMMA           reduce using rule 131 (member_resolut -> ID .)
    RBRAC           reduce using rule 131 (member_resolut -> ID .)
    IN              reduce using rule 131 (member_resolut -> ID .)
    LPAREN          shift and go to state 99


state 166

    (132) member_resolut -> func_call_next .

    SEMICOLON       reduce using rule 132 (member_resolut -> func_call_next .)
    PLUS            reduce using rule 132 (member_resolut -> func_call_next .)
    MINUS           reduce using rule 132 (member_resolut -> func_call_next .)
    TIMES           reduce using rule 132 (member_resolut -> func_call_next .)
    DIVIDE          reduce using rule 132 (member_resolut -> func_call_next .)
    POWER           reduce using rule 132 (member_resolut -> func_call_next .)
    MODULE          reduce using rule 132 (member_resolut -> func_call_next .)
    CONCAT          reduce using rule 132 (member_resolut -> func_call_next .)
    DOUBLECONCAT    reduce using rule 132 (member_resolut -> func_call_next .)
    AND             reduce using rule 132 (member_resolut -> func_call_next .)
    OR              reduce using rule 132 (member_resolut -> func_call_next .)
    EQUAL           reduce using rule 132 (member_resolut -> func_call_next .)
    DIFFERENT       reduce using rule 132 (member_resolut -> func_call_next .)
    MINOREQUAL      reduce using rule 132 (member_resolut -> func_call_next .)
    MAJOREQUAL      reduce using rule 132 (member_resolut -> func_call_next .)
    MINOR           reduce using rule 132 (member_resolut -> func_call_next .)
    MAJOR           reduce using rule 132 (member_resolut -> func_call_next .)
    IS              reduce using rule 132 (member_resolut -> func_call_next .)
    AS              reduce using rule 132 (member_resolut -> func_call_next .)
    LBRAC           reduce using rule 132 (member_resolut -> func_call_next .)
    DOT             reduce using rule 132 (member_resolut -> func_call_next .)
    RPAREN          reduce using rule 132 (member_resolut -> func_call_next .)
    ELIF            reduce using rule 132 (member_resolut -> func_call_next .)
    ELSE            reduce using rule 132 (member_resolut -> func_call_next .)
    GENERATOR       reduce using rule 132 (member_resolut -> func_call_next .)
    COMMA           reduce using rule 132 (member_resolut -> func_call_next .)
    RBRAC           reduce using rule 132 (member_resolut -> func_call_next .)
    IN              reduce using rule 132 (member_resolut -> func_call_next .)


state 167

    (67) high_level_expression -> LET assign_values IN . high_level_expression
    (68) expression -> LET assign_values IN . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 240
    expression                     shift and go to state 241
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 168

    (69) assign_values -> id ASIGN . expression rem_assignments
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 242
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 169

    (4) id -> ID type_of .

    ASIGN           reduce using rule 4 (id -> ID type_of .)
    COMMA           reduce using rule 4 (id -> ID type_of .)
    RPAREN          reduce using rule 4 (id -> ID type_of .)


state 170

    (2) type_of -> DOUBLEDOTS . args
    (18) args -> . ID
    (19) args -> . OBJECT
    (20) args -> . NUMBERTYPE
    (21) args -> . STRINGTYPE
    (22) args -> . BOOLEANTYPE

    ID              shift and go to state 157
    OBJECT          shift and go to state 158
    NUMBERTYPE      shift and go to state 159
    STRINGTYPE      shift and go to state 160
    BOOLEANTYPE     shift and go to state 161

    args                           shift and go to state 243

state 171

    (3) type_of -> empty .

    ASIGN           reduce using rule 3 (type_of -> empty .)
    COMMA           reduce using rule 3 (type_of -> empty .)
    RPAREN          reduce using rule 3 (type_of -> empty .)
    ARROW           reduce using rule 3 (type_of -> empty .)
    LBRACE          reduce using rule 3 (type_of -> empty .)


state 172

    (72) high_level_expression -> IF expression_parenthized expression . opt_elifs ELSE high_level_expression
    (73) expression -> IF expression_parenthized expression . opt_elifs ELSE expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (74) opt_elifs -> . ELIF expression_parenthized expression opt_elifs
    (75) opt_elifs -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    ELIF            shift and go to state 245
    ELSE            reduce using rule 1 (empty -> .)

    opt_elifs                      shift and go to state 244
    empty                          shift and go to state 246

state 173

    (78) high_level_expression -> FOR LPAREN destroyable . IN expression RPAREN high_level_expression
    (79) expression -> FOR LPAREN destroyable . IN expression RPAREN expression

    IN              shift and go to state 247


state 174

    (127) destroyable -> ID .

    IN              reduce using rule 127 (destroyable -> ID .)


state 175

    (83) expression_parenthized -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    POWER           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    CONCAT          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    AND             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    OR              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    MINOR           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    MAJOR           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    IS              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    AS              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    LBRAC           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    DOT             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    LET             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    IF              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    FOR             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    ID              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    NOT             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    STRING          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    PI              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    E               reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    SQRT            reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    SIN             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    COS             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    EXP             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    LOG             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    RAND            reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    NEW             reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    RBRAC           reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)
    IN              reduce using rule 83 (expression_parenthized -> LPAREN expression RPAREN .)


state 176

    (89) expression -> expression PLUS . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 248
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 177

    (90) expression -> expression MINUS . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 249
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 178

    (91) expression -> expression TIMES . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 250
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 179

    (92) expression -> expression DIVIDE . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 251
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 180

    (93) expression -> expression POWER . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 252
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 181

    (94) expression -> expression MODULE . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 253
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 182

    (95) expression -> expression CONCAT . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 254
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 183

    (96) expression -> expression DOUBLECONCAT . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 255
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 184

    (97) expression -> expression AND . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 256
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 185

    (98) expression -> expression OR . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 257
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 186

    (99) expression -> expression EQUAL . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 258
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 187

    (100) expression -> expression DIFFERENT . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 259
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 188

    (101) expression -> expression MINOREQUAL . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 260
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 189

    (102) expression -> expression MAJOREQUAL . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 261
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 190

    (103) expression -> expression MINOR . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 262
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 191

    (104) expression -> expression MAJOR . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 263
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 192

    (68) expression -> LET assign_values . IN expression

    IN              shift and go to state 264


state 193

    (73) expression -> IF expression_parenthized . expression opt_elifs ELSE expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    expression                     shift and go to state 265
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 194

    (79) expression -> FOR LPAREN . destroyable IN expression RPAREN expression
    (127) destroyable -> . ID

    ID              shift and go to state 174

    destroyable                    shift and go to state 266

state 195

    (81) expression -> WHILE expression_parenthized . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    expression                     shift and go to state 267
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 196

    (134) expression -> MINUS expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 134 (expression -> MINUS expression .)
    PLUS            reduce using rule 134 (expression -> MINUS expression .)
    MINUS           reduce using rule 134 (expression -> MINUS expression .)
    TIMES           reduce using rule 134 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 134 (expression -> MINUS expression .)
    POWER           reduce using rule 134 (expression -> MINUS expression .)
    MODULE          reduce using rule 134 (expression -> MINUS expression .)
    CONCAT          reduce using rule 134 (expression -> MINUS expression .)
    DOUBLECONCAT    reduce using rule 134 (expression -> MINUS expression .)
    AND             reduce using rule 134 (expression -> MINUS expression .)
    OR              reduce using rule 134 (expression -> MINUS expression .)
    EQUAL           reduce using rule 134 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 134 (expression -> MINUS expression .)
    MINOREQUAL      reduce using rule 134 (expression -> MINUS expression .)
    MAJOREQUAL      reduce using rule 134 (expression -> MINUS expression .)
    MINOR           reduce using rule 134 (expression -> MINUS expression .)
    MAJOR           reduce using rule 134 (expression -> MINUS expression .)
    IS              reduce using rule 134 (expression -> MINUS expression .)
    AS              reduce using rule 134 (expression -> MINUS expression .)
    LBRAC           reduce using rule 134 (expression -> MINUS expression .)
    GENERATOR       reduce using rule 134 (expression -> MINUS expression .)
    COMMA           reduce using rule 134 (expression -> MINUS expression .)
    RBRAC           reduce using rule 134 (expression -> MINUS expression .)
    ELIF            reduce using rule 134 (expression -> MINUS expression .)
    ELSE            reduce using rule 134 (expression -> MINUS expression .)
    IN              reduce using rule 134 (expression -> MINUS expression .)
    DOT             shift and go to state 73

  ! DOT             [ reduce using rule 134 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! TIMES           [ shift and go to state 178 ]
  ! DIVIDE          [ shift and go to state 179 ]
  ! POWER           [ shift and go to state 180 ]
  ! MODULE          [ shift and go to state 181 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 197

    (107) expression -> destroyablel DESTRUCTASIGN . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    destroyablel                   shift and go to state 87
    expression                     shift and go to state 268
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 198

    (108) expression -> destroyabler DESTRUCTASIGN . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    destroyabler                   shift and go to state 88
    expression                     shift and go to state 269
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 199

    (133) expression -> NOT expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 133 (expression -> NOT expression .)
    CONCAT          reduce using rule 133 (expression -> NOT expression .)
    DOUBLECONCAT    reduce using rule 133 (expression -> NOT expression .)
    AND             reduce using rule 133 (expression -> NOT expression .)
    OR              reduce using rule 133 (expression -> NOT expression .)
    EQUAL           reduce using rule 133 (expression -> NOT expression .)
    DIFFERENT       reduce using rule 133 (expression -> NOT expression .)
    MINOREQUAL      reduce using rule 133 (expression -> NOT expression .)
    MAJOREQUAL      reduce using rule 133 (expression -> NOT expression .)
    MINOR           reduce using rule 133 (expression -> NOT expression .)
    MAJOR           reduce using rule 133 (expression -> NOT expression .)
    IS              reduce using rule 133 (expression -> NOT expression .)
    AS              reduce using rule 133 (expression -> NOT expression .)
    LBRAC           reduce using rule 133 (expression -> NOT expression .)
    GENERATOR       reduce using rule 133 (expression -> NOT expression .)
    COMMA           reduce using rule 133 (expression -> NOT expression .)
    RBRAC           reduce using rule 133 (expression -> NOT expression .)
    ELIF            reduce using rule 133 (expression -> NOT expression .)
    ELSE            reduce using rule 133 (expression -> NOT expression .)
    IN              reduce using rule 133 (expression -> NOT expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 133 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 133 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 133 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 133 (expression -> NOT expression .) ]
  ! POWER           [ reduce using rule 133 (expression -> NOT expression .) ]
  ! MODULE          [ reduce using rule 133 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 133 (expression -> NOT expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 200

    (80) high_level_expression -> WHILE expression_parenthized high_level_expression .

    $end            reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    LET             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    IF              reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    FOR             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    WHILE           reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    NOT             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    MINUS           reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    ID              reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    NUMBER          reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    STRING          reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    PI              reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    E               reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    TRUE            reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    FALSE           reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    PRINT           reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    RANGE           reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    SQRT            reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    SIN             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    COS             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    EXP             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    LOG             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    RAND            reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    LBRACE          reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    NEW             reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    LPAREN          reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    LBRAC           reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    RBRACE          reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    FUNCTION        reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    TYPE            reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)
    PROTOCOL        reduce using rule 80 (high_level_expression -> WHILE expression_parenthized high_level_expression .)


state 201

    (81) expression -> WHILE expression_parenthized expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    LBRAC           reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    ELIF            reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    ELSE            reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    RPAREN          reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    CONCAT          shift and go to state 60
    DOUBLECONCAT    shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MINUS           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! TIMES           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DIVIDE          [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! POWER           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MODULE          [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! CONCAT          [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! AND             [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! OR              [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! EQUAL           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DIFFERENT       [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MINOREQUAL      [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MAJOREQUAL      [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MINOR           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MAJOR           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! IS              [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! AS              [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DOT             [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! LBRAC           [ shift and go to state 72 ]


state 202

    (125) high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .

    $end            reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    LET             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    IF              reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    FOR             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    WHILE           reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    NOT             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    MINUS           reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    ID              reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    NUMBER          reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    STRING          reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    PI              reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    E               reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    TRUE            reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    FALSE           reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    PRINT           reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    RANGE           reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    SQRT            reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    SIN             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    COS             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    EXP             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    LOG             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    RAND            reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    LBRACE          reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    NEW             reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    LPAREN          reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    LBRAC           reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    RBRACE          reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    FUNCTION        reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    TYPE            reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)
    PROTOCOL        reduce using rule 125 (high_level_expression -> destroyablel DESTRUCTASIGN high_level_expression .)


state 203

    (107) expression -> destroyablel DESTRUCTASIGN expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    LBRAC           reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    ELIF            reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    ELSE            reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    RPAREN          reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    CONCAT          shift and go to state 60
    DOUBLECONCAT    shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MINUS           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! TIMES           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DIVIDE          [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! POWER           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MODULE          [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! CONCAT          [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! AND             [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! OR              [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! EQUAL           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DIFFERENT       [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MINOREQUAL      [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MAJOREQUAL      [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MINOR           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MAJOR           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! IS              [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! AS              [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DOT             [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! LBRAC           [ shift and go to state 72 ]


state 204

    (126) high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .

    $end            reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    LET             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    IF              reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    FOR             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    WHILE           reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    NOT             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    MINUS           reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    ID              reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    NUMBER          reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    STRING          reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    PI              reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    E               reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    TRUE            reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    FALSE           reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    PRINT           reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    RANGE           reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    SQRT            reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    SIN             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    COS             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    EXP             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    LOG             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    RAND            reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    LBRACE          reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    NEW             reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    LPAREN          reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    LBRAC           reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    RBRACE          reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    FUNCTION        reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    TYPE            reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)
    PROTOCOL        reduce using rule 126 (high_level_expression -> destroyabler DESTRUCTASIGN high_level_expression .)


state 205

    (108) expression -> destroyabler DESTRUCTASIGN expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    LBRAC           reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    ELIF            reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    ELSE            reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    RPAREN          reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    CONCAT          shift and go to state 60
    DOUBLECONCAT    shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MINUS           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! TIMES           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DIVIDE          [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! POWER           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MODULE          [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! CONCAT          [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! AND             [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! OR              [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! EQUAL           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DIFFERENT       [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MINOREQUAL      [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MAJOREQUAL      [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MINOR           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MAJOR           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! IS              [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! AS              [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DOT             [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! LBRAC           [ shift and go to state 72 ]


state 206

    (85) destroyablel -> ID DOT ID .
    (88) destroyabler -> ID DOT ID . LBRAC expression RBRAC
    (131) member_resolut -> ID .
    (28) func_call_next -> ID . LPAREN func_call_args RPAREN

    DESTRUCTASIGN   reduce using rule 85 (destroyablel -> ID DOT ID .)
    SEMICOLON       reduce using rule 131 (member_resolut -> ID .)
    PLUS            reduce using rule 131 (member_resolut -> ID .)
    MINUS           reduce using rule 131 (member_resolut -> ID .)
    TIMES           reduce using rule 131 (member_resolut -> ID .)
    DIVIDE          reduce using rule 131 (member_resolut -> ID .)
    POWER           reduce using rule 131 (member_resolut -> ID .)
    MODULE          reduce using rule 131 (member_resolut -> ID .)
    CONCAT          reduce using rule 131 (member_resolut -> ID .)
    DOUBLECONCAT    reduce using rule 131 (member_resolut -> ID .)
    AND             reduce using rule 131 (member_resolut -> ID .)
    OR              reduce using rule 131 (member_resolut -> ID .)
    EQUAL           reduce using rule 131 (member_resolut -> ID .)
    DIFFERENT       reduce using rule 131 (member_resolut -> ID .)
    MINOREQUAL      reduce using rule 131 (member_resolut -> ID .)
    MAJOREQUAL      reduce using rule 131 (member_resolut -> ID .)
    MINOR           reduce using rule 131 (member_resolut -> ID .)
    MAJOR           reduce using rule 131 (member_resolut -> ID .)
    IS              reduce using rule 131 (member_resolut -> ID .)
    AS              reduce using rule 131 (member_resolut -> ID .)
    LBRAC           reduce using rule 131 (member_resolut -> ID .)
    DOT             reduce using rule 131 (member_resolut -> ID .)
    RPAREN          reduce using rule 131 (member_resolut -> ID .)
    ELIF            reduce using rule 131 (member_resolut -> ID .)
    ELSE            reduce using rule 131 (member_resolut -> ID .)
    GENERATOR       reduce using rule 131 (member_resolut -> ID .)
    COMMA           reduce using rule 131 (member_resolut -> ID .)
    RBRAC           reduce using rule 131 (member_resolut -> ID .)
    IN              reduce using rule 131 (member_resolut -> ID .)
    LPAREN          shift and go to state 99

  ! LBRAC           [ shift and go to state 270 ]


state 207

    (86) expression -> ID DOT member_resolut .

    SEMICOLON       reduce using rule 86 (expression -> ID DOT member_resolut .)
    PLUS            reduce using rule 86 (expression -> ID DOT member_resolut .)
    MINUS           reduce using rule 86 (expression -> ID DOT member_resolut .)
    TIMES           reduce using rule 86 (expression -> ID DOT member_resolut .)
    DIVIDE          reduce using rule 86 (expression -> ID DOT member_resolut .)
    POWER           reduce using rule 86 (expression -> ID DOT member_resolut .)
    MODULE          reduce using rule 86 (expression -> ID DOT member_resolut .)
    CONCAT          reduce using rule 86 (expression -> ID DOT member_resolut .)
    DOUBLECONCAT    reduce using rule 86 (expression -> ID DOT member_resolut .)
    AND             reduce using rule 86 (expression -> ID DOT member_resolut .)
    OR              reduce using rule 86 (expression -> ID DOT member_resolut .)
    EQUAL           reduce using rule 86 (expression -> ID DOT member_resolut .)
    DIFFERENT       reduce using rule 86 (expression -> ID DOT member_resolut .)
    MINOREQUAL      reduce using rule 86 (expression -> ID DOT member_resolut .)
    MAJOREQUAL      reduce using rule 86 (expression -> ID DOT member_resolut .)
    MINOR           reduce using rule 86 (expression -> ID DOT member_resolut .)
    MAJOR           reduce using rule 86 (expression -> ID DOT member_resolut .)
    IS              reduce using rule 86 (expression -> ID DOT member_resolut .)
    AS              reduce using rule 86 (expression -> ID DOT member_resolut .)
    LBRAC           reduce using rule 86 (expression -> ID DOT member_resolut .)
    DOT             reduce using rule 86 (expression -> ID DOT member_resolut .)
    RPAREN          reduce using rule 86 (expression -> ID DOT member_resolut .)
    ELIF            reduce using rule 86 (expression -> ID DOT member_resolut .)
    ELSE            reduce using rule 86 (expression -> ID DOT member_resolut .)
    GENERATOR       reduce using rule 86 (expression -> ID DOT member_resolut .)
    COMMA           reduce using rule 86 (expression -> ID DOT member_resolut .)
    RBRAC           reduce using rule 86 (expression -> ID DOT member_resolut .)
    IN              reduce using rule 86 (expression -> ID DOT member_resolut .)


state 208

    (87) destroyabler -> ID LBRAC expression . RBRAC
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RBRAC           shift and go to state 271
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 209

    (28) func_call_next -> ID LPAREN func_call_args . RPAREN

    RPAREN          shift and go to state 272


state 210

    (32) func_call_args_list -> expression . func_call_args_list_rem
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (34) func_call_args_list_rem -> . COMMA expression func_call_args_list_rem
    (35) func_call_args_list_rem -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    COMMA           shift and go to state 214
    RPAREN          reduce using rule 1 (empty -> .)

    func_call_args_list_rem        shift and go to state 213
    empty                          shift and go to state 215

state 211

    (141) vector -> LBRAC func_call_args RBRAC .

    SEMICOLON       reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    PLUS            reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    MINUS           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    TIMES           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    DIVIDE          reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    POWER           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    MODULE          reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    CONCAT          reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    DOUBLECONCAT    reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    AND             reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    OR              reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    EQUAL           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    DIFFERENT       reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    MINOREQUAL      reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    MAJOREQUAL      reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    MINOR           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    MAJOR           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    IS              reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    AS              reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    LBRAC           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    DOT             reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    RPAREN          reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    ELIF            reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    ELSE            reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    GENERATOR       reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    COMMA           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    RBRAC           reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)
    IN              reduce using rule 141 (vector -> LBRAC func_call_args RBRAC .)


state 212

    (142) vector -> LBRAC expression GENERATOR . destroyable IN expression RBRAC
    (127) destroyable -> . ID

    ID              shift and go to state 174

    destroyable                    shift and go to state 273

state 213

    (32) func_call_args_list -> expression func_call_args_list_rem .

    RBRAC           reduce using rule 32 (func_call_args_list -> expression func_call_args_list_rem .)
    RPAREN          reduce using rule 32 (func_call_args_list -> expression func_call_args_list_rem .)


state 214

    (34) func_call_args_list_rem -> COMMA . expression func_call_args_list_rem
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 274
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 215

    (35) func_call_args_list_rem -> empty .

    RBRAC           reduce using rule 35 (func_call_args_list_rem -> empty .)
    RPAREN          reduce using rule 35 (func_call_args_list_rem -> empty .)


state 216

    (148) expression -> PRINT LPAREN expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 275
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 217

    (149) expression -> RANGE LPAREN expression . RPAREN
    (150) expression -> RANGE LPAREN expression . COMMA expression RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 276
    COMMA           shift and go to state 277
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 218

    (151) expression -> SQRT LPAREN expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 278
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 219

    (152) expression -> SIN LPAREN expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 279
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 220

    (153) expression -> COS LPAREN expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 280
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 221

    (154) expression -> EXP LPAREN expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 281
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 222

    (155) expression -> LOG LPAREN expression . COMMA expression RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    COMMA           shift and go to state 282
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 223

    (156) expression -> RAND LPAREN RPAREN .

    SEMICOLON       reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    PLUS            reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    MINUS           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    TIMES           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    DIVIDE          reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    POWER           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    MODULE          reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    CONCAT          reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    DOUBLECONCAT    reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    AND             reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    OR              reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    EQUAL           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    DIFFERENT       reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    MINOREQUAL      reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    MAJOREQUAL      reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    MINOR           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    MAJOR           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    IS              reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    AS              reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    LBRAC           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    DOT             reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    RPAREN          reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    ELIF            reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    ELSE            reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    GENERATOR       reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    COMMA           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    RBRAC           reduce using rule 156 (expression -> RAND LPAREN RPAREN .)
    IN              reduce using rule 156 (expression -> RAND LPAREN RPAREN .)


state 224

    (64) expression_block -> LBRACE expression_block_list RBRACE .

    $end            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    SEMICOLON       reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    PLUS            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    MINUS           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    TIMES           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    DIVIDE          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    POWER           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    MODULE          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    CONCAT          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    DOUBLECONCAT    reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    AND             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    OR              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    EQUAL           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    DIFFERENT       reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    MINOREQUAL      reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    MAJOREQUAL      reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    MINOR           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    MAJOR           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    IS              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    AS              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    LBRAC           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    DOT             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    RPAREN          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    LET             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    IF              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    FOR             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    WHILE           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    NOT             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    ID              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    NUMBER          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    STRING          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    PI              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    E               reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    TRUE            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    FALSE           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    PRINT           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    RANGE           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    SQRT            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    SIN             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    COS             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    EXP             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    LOG             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    RAND            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    LBRACE          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    NEW             reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    LPAREN          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    RBRACE          reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    FUNCTION        reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    TYPE            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    PROTOCOL        reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    ELIF            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    ELSE            reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    GENERATOR       reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    COMMA           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    RBRAC           reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)
    IN              reduce using rule 64 (expression_block -> LBRACE expression_block_list RBRACE .)


state 225

    (65) expression_block_list -> high_level_expression expression_block_list .

    RBRACE          reduce using rule 65 (expression_block_list -> high_level_expression expression_block_list .)


state 226

    (30) type_call -> NEW ID LPAREN . func_call_args RPAREN
    (31) func_call_args -> . func_call_args_list
    (32) func_call_args_list -> . expression func_call_args_list_rem
    (33) func_call_args_list -> . empty
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (1) empty -> .
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    RPAREN          reduce using rule 1 (empty -> .)
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    func_call_args                 shift and go to state 283
    func_call_args_list            shift and go to state 102
    expression                     shift and go to state 210
    empty                          shift and go to state 103
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 227

    (36) function_definition -> FUNCTION ID LPAREN func_params . RPAREN type_of ARROW high_level_expression
    (37) function_definition -> FUNCTION ID LPAREN func_params . RPAREN type_of expression_block optional_semicolon

    RPAREN          shift and go to state 284


state 228

    (38) func_params -> func_params_list .

    RPAREN          reduce using rule 38 (func_params -> func_params_list .)


state 229

    (39) func_params_list -> id . func_params_list_rem
    (41) func_params_list_rem -> . COMMA id func_params_list_rem
    (42) func_params_list_rem -> . empty
    (1) empty -> .

    COMMA           shift and go to state 286
    RPAREN          reduce using rule 1 (empty -> .)

    func_params_list_rem           shift and go to state 285
    empty                          shift and go to state 287

state 230

    (40) func_params_list -> empty .

    RPAREN          reduce using rule 40 (func_params_list -> empty .)


state 231

    (43) type_def -> TYPE ID optional_type_params optional_inheritance . LBRACE type_members RBRACE optional_semicolon

    LBRACE          shift and go to state 288


state 232

    (44) optional_inheritance -> INHERITS . ID optional_inheritance_params

    ID              shift and go to state 289


state 233

    (45) optional_inheritance -> empty .

    LBRACE          reduce using rule 45 (optional_inheritance -> empty .)


state 234

    (48) optional_type_params -> LPAREN typedef_params . RPAREN

    RPAREN          shift and go to state 290


state 235

    (50) typedef_params -> id . typedef_params_rem
    (52) typedef_params_rem -> . COMMA id typedef_params_rem
    (53) typedef_params_rem -> . empty
    (1) empty -> .

    COMMA           shift and go to state 292
    RPAREN          reduce using rule 1 (empty -> .)

    typedef_params_rem             shift and go to state 291
    empty                          shift and go to state 293

state 236

    (51) typedef_params -> empty .

    RPAREN          reduce using rule 51 (typedef_params -> empty .)


state 237

    (12) protocol_definition -> PROTOCOL ID opt_extends LBRACE . protocol_methods RBRACE optional_semicolon
    (15) protocol_methods -> . protocol_method protocol_methods
    (16) protocol_methods -> . protocol_method empty
    (17) protocol_method -> . ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON

    ID              shift and go to state 294

    protocol_methods               shift and go to state 295
    protocol_method                shift and go to state 296

state 238

    (13) opt_extends -> EXTENDS ID .

    LBRACE          reduce using rule 13 (opt_extends -> EXTENDS ID .)


state 239

    (143) expression -> expression LBRAC expression RBRAC .

    SEMICOLON       reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    PLUS            reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    MINUS           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    TIMES           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    DIVIDE          reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    POWER           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    MODULE          reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    CONCAT          reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    DOUBLECONCAT    reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    AND             reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    OR              reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    EQUAL           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    DIFFERENT       reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    MINOREQUAL      reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    MAJOREQUAL      reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    MINOR           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    MAJOR           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    IS              reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    AS              reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    LBRAC           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    DOT             reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    RPAREN          reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    ELIF            reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    ELSE            reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    GENERATOR       reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    COMMA           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    RBRAC           reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)
    IN              reduce using rule 143 (expression -> expression LBRAC expression RBRAC .)


state 240

    (67) high_level_expression -> LET assign_values IN high_level_expression .

    $end            reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    LET             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    IF              reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    FOR             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    WHILE           reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    NOT             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    MINUS           reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    ID              reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    NUMBER          reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    STRING          reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    PI              reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    E               reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    TRUE            reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    FALSE           reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    PRINT           reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    RANGE           reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    SQRT            reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    SIN             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    COS             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    EXP             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    LOG             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    RAND            reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    LBRACE          reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    NEW             reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    LPAREN          reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    LBRAC           reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    RBRACE          reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    FUNCTION        reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    TYPE            reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)
    PROTOCOL        reduce using rule 67 (high_level_expression -> LET assign_values IN high_level_expression .)


state 241

    (68) expression -> LET assign_values IN expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 68 (expression -> LET assign_values IN expression .)
    LBRAC           reduce using rule 68 (expression -> LET assign_values IN expression .)
    ELIF            reduce using rule 68 (expression -> LET assign_values IN expression .)
    ELSE            reduce using rule 68 (expression -> LET assign_values IN expression .)
    RPAREN          reduce using rule 68 (expression -> LET assign_values IN expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    CONCAT          shift and go to state 60
    DOUBLECONCAT    shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! TIMES           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! POWER           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MODULE          [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! CONCAT          [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! AND             [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! OR              [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! EQUAL           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DIFFERENT       [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MINOREQUAL      [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MAJOREQUAL      [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MINOR           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MAJOR           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! IS              [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! AS              [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DOT             [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! LBRAC           [ shift and go to state 72 ]


state 242

    (69) assign_values -> id ASIGN expression . rem_assignments
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (70) rem_assignments -> . COMMA id ASIGN expression rem_assignments
    (71) rem_assignments -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    COMMA           shift and go to state 298
    IN              reduce using rule 1 (empty -> .)

    rem_assignments                shift and go to state 297
    empty                          shift and go to state 299

state 243

    (2) type_of -> DOUBLEDOTS args .

    ASIGN           reduce using rule 2 (type_of -> DOUBLEDOTS args .)
    COMMA           reduce using rule 2 (type_of -> DOUBLEDOTS args .)
    RPAREN          reduce using rule 2 (type_of -> DOUBLEDOTS args .)
    ARROW           reduce using rule 2 (type_of -> DOUBLEDOTS args .)
    LBRACE          reduce using rule 2 (type_of -> DOUBLEDOTS args .)


state 244

    (72) high_level_expression -> IF expression_parenthized expression opt_elifs . ELSE high_level_expression
    (73) expression -> IF expression_parenthized expression opt_elifs . ELSE expression

    ELSE            shift and go to state 300


state 245

    (74) opt_elifs -> ELIF . expression_parenthized expression opt_elifs
    (83) expression_parenthized -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 19

    expression_parenthized         shift and go to state 301

state 246

    (75) opt_elifs -> empty .

    ELSE            reduce using rule 75 (opt_elifs -> empty .)


state 247

    (78) high_level_expression -> FOR LPAREN destroyable IN . expression RPAREN high_level_expression
    (79) expression -> FOR LPAREN destroyable IN . expression RPAREN expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 302
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 248

    (89) expression -> expression PLUS expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 89 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 89 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 89 (expression -> expression PLUS expression .)
    CONCAT          reduce using rule 89 (expression -> expression PLUS expression .)
    DOUBLECONCAT    reduce using rule 89 (expression -> expression PLUS expression .)
    AND             reduce using rule 89 (expression -> expression PLUS expression .)
    OR              reduce using rule 89 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 89 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 89 (expression -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 89 (expression -> expression PLUS expression .)
    MAJOREQUAL      reduce using rule 89 (expression -> expression PLUS expression .)
    MINOR           reduce using rule 89 (expression -> expression PLUS expression .)
    MAJOR           reduce using rule 89 (expression -> expression PLUS expression .)
    IS              reduce using rule 89 (expression -> expression PLUS expression .)
    AS              reduce using rule 89 (expression -> expression PLUS expression .)
    LBRAC           reduce using rule 89 (expression -> expression PLUS expression .)
    GENERATOR       reduce using rule 89 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 89 (expression -> expression PLUS expression .)
    RBRAC           reduce using rule 89 (expression -> expression PLUS expression .)
    ELIF            reduce using rule 89 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 89 (expression -> expression PLUS expression .)
    IN              reduce using rule 89 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! TIMES           [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 89 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 249

    (90) expression -> expression MINUS expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 90 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 90 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 90 (expression -> expression MINUS expression .)
    CONCAT          reduce using rule 90 (expression -> expression MINUS expression .)
    DOUBLECONCAT    reduce using rule 90 (expression -> expression MINUS expression .)
    AND             reduce using rule 90 (expression -> expression MINUS expression .)
    OR              reduce using rule 90 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 90 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 90 (expression -> expression MINUS expression .)
    MINOREQUAL      reduce using rule 90 (expression -> expression MINUS expression .)
    MAJOREQUAL      reduce using rule 90 (expression -> expression MINUS expression .)
    MINOR           reduce using rule 90 (expression -> expression MINUS expression .)
    MAJOR           reduce using rule 90 (expression -> expression MINUS expression .)
    IS              reduce using rule 90 (expression -> expression MINUS expression .)
    AS              reduce using rule 90 (expression -> expression MINUS expression .)
    LBRAC           reduce using rule 90 (expression -> expression MINUS expression .)
    GENERATOR       reduce using rule 90 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 90 (expression -> expression MINUS expression .)
    RBRAC           reduce using rule 90 (expression -> expression MINUS expression .)
    ELIF            reduce using rule 90 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 90 (expression -> expression MINUS expression .)
    IN              reduce using rule 90 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! TIMES           [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 90 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 250

    (91) expression -> expression TIMES expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 91 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 91 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 91 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 91 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 91 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 91 (expression -> expression TIMES expression .)
    CONCAT          reduce using rule 91 (expression -> expression TIMES expression .)
    DOUBLECONCAT    reduce using rule 91 (expression -> expression TIMES expression .)
    AND             reduce using rule 91 (expression -> expression TIMES expression .)
    OR              reduce using rule 91 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 91 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 91 (expression -> expression TIMES expression .)
    MINOREQUAL      reduce using rule 91 (expression -> expression TIMES expression .)
    MAJOREQUAL      reduce using rule 91 (expression -> expression TIMES expression .)
    MINOR           reduce using rule 91 (expression -> expression TIMES expression .)
    MAJOR           reduce using rule 91 (expression -> expression TIMES expression .)
    IS              reduce using rule 91 (expression -> expression TIMES expression .)
    AS              reduce using rule 91 (expression -> expression TIMES expression .)
    LBRAC           reduce using rule 91 (expression -> expression TIMES expression .)
    GENERATOR       reduce using rule 91 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 91 (expression -> expression TIMES expression .)
    RBRAC           reduce using rule 91 (expression -> expression TIMES expression .)
    ELIF            reduce using rule 91 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 91 (expression -> expression TIMES expression .)
    IN              reduce using rule 91 (expression -> expression TIMES expression .)
    POWER           shift and go to state 180
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 91 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 91 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! TIMES           [ shift and go to state 178 ]
  ! DIVIDE          [ shift and go to state 179 ]
  ! MODULE          [ shift and go to state 181 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 251

    (92) expression -> expression DIVIDE expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 92 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 92 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 92 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 92 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 92 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 92 (expression -> expression DIVIDE expression .)
    CONCAT          reduce using rule 92 (expression -> expression DIVIDE expression .)
    DOUBLECONCAT    reduce using rule 92 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 92 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 92 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 92 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 92 (expression -> expression DIVIDE expression .)
    MINOREQUAL      reduce using rule 92 (expression -> expression DIVIDE expression .)
    MAJOREQUAL      reduce using rule 92 (expression -> expression DIVIDE expression .)
    MINOR           reduce using rule 92 (expression -> expression DIVIDE expression .)
    MAJOR           reduce using rule 92 (expression -> expression DIVIDE expression .)
    IS              reduce using rule 92 (expression -> expression DIVIDE expression .)
    AS              reduce using rule 92 (expression -> expression DIVIDE expression .)
    LBRAC           reduce using rule 92 (expression -> expression DIVIDE expression .)
    GENERATOR       reduce using rule 92 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 92 (expression -> expression DIVIDE expression .)
    RBRAC           reduce using rule 92 (expression -> expression DIVIDE expression .)
    ELIF            reduce using rule 92 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 92 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 92 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 180
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 92 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 92 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! TIMES           [ shift and go to state 178 ]
  ! DIVIDE          [ shift and go to state 179 ]
  ! MODULE          [ shift and go to state 181 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 252

    (93) expression -> expression POWER expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 93 (expression -> expression POWER expression .)
    PLUS            reduce using rule 93 (expression -> expression POWER expression .)
    MINUS           reduce using rule 93 (expression -> expression POWER expression .)
    TIMES           reduce using rule 93 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 93 (expression -> expression POWER expression .)
    MODULE          reduce using rule 93 (expression -> expression POWER expression .)
    CONCAT          reduce using rule 93 (expression -> expression POWER expression .)
    DOUBLECONCAT    reduce using rule 93 (expression -> expression POWER expression .)
    AND             reduce using rule 93 (expression -> expression POWER expression .)
    OR              reduce using rule 93 (expression -> expression POWER expression .)
    EQUAL           reduce using rule 93 (expression -> expression POWER expression .)
    DIFFERENT       reduce using rule 93 (expression -> expression POWER expression .)
    MINOREQUAL      reduce using rule 93 (expression -> expression POWER expression .)
    MAJOREQUAL      reduce using rule 93 (expression -> expression POWER expression .)
    MINOR           reduce using rule 93 (expression -> expression POWER expression .)
    MAJOR           reduce using rule 93 (expression -> expression POWER expression .)
    IS              reduce using rule 93 (expression -> expression POWER expression .)
    AS              reduce using rule 93 (expression -> expression POWER expression .)
    LBRAC           reduce using rule 93 (expression -> expression POWER expression .)
    GENERATOR       reduce using rule 93 (expression -> expression POWER expression .)
    COMMA           reduce using rule 93 (expression -> expression POWER expression .)
    RBRAC           reduce using rule 93 (expression -> expression POWER expression .)
    ELIF            reduce using rule 93 (expression -> expression POWER expression .)
    ELSE            reduce using rule 93 (expression -> expression POWER expression .)
    IN              reduce using rule 93 (expression -> expression POWER expression .)
    POWER           shift and go to state 180
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 93 (expression -> expression POWER expression .) ]
  ! DOT             [ reduce using rule 93 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! TIMES           [ shift and go to state 178 ]
  ! DIVIDE          [ shift and go to state 179 ]
  ! MODULE          [ shift and go to state 181 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 253

    (94) expression -> expression MODULE expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 94 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 94 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 94 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 94 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 94 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 94 (expression -> expression MODULE expression .)
    CONCAT          reduce using rule 94 (expression -> expression MODULE expression .)
    DOUBLECONCAT    reduce using rule 94 (expression -> expression MODULE expression .)
    AND             reduce using rule 94 (expression -> expression MODULE expression .)
    OR              reduce using rule 94 (expression -> expression MODULE expression .)
    EQUAL           reduce using rule 94 (expression -> expression MODULE expression .)
    DIFFERENT       reduce using rule 94 (expression -> expression MODULE expression .)
    MINOREQUAL      reduce using rule 94 (expression -> expression MODULE expression .)
    MAJOREQUAL      reduce using rule 94 (expression -> expression MODULE expression .)
    MINOR           reduce using rule 94 (expression -> expression MODULE expression .)
    MAJOR           reduce using rule 94 (expression -> expression MODULE expression .)
    IS              reduce using rule 94 (expression -> expression MODULE expression .)
    AS              reduce using rule 94 (expression -> expression MODULE expression .)
    LBRAC           reduce using rule 94 (expression -> expression MODULE expression .)
    GENERATOR       reduce using rule 94 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 94 (expression -> expression MODULE expression .)
    RBRAC           reduce using rule 94 (expression -> expression MODULE expression .)
    ELIF            reduce using rule 94 (expression -> expression MODULE expression .)
    ELSE            reduce using rule 94 (expression -> expression MODULE expression .)
    IN              reduce using rule 94 (expression -> expression MODULE expression .)
    POWER           shift and go to state 180
    DOT             shift and go to state 73

  ! POWER           [ reduce using rule 94 (expression -> expression MODULE expression .) ]
  ! DOT             [ reduce using rule 94 (expression -> expression MODULE expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! TIMES           [ shift and go to state 178 ]
  ! DIVIDE          [ shift and go to state 179 ]
  ! MODULE          [ shift and go to state 181 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 254

    (95) expression -> expression CONCAT expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 95 (expression -> expression CONCAT expression .)
    CONCAT          reduce using rule 95 (expression -> expression CONCAT expression .)
    DOUBLECONCAT    reduce using rule 95 (expression -> expression CONCAT expression .)
    IS              reduce using rule 95 (expression -> expression CONCAT expression .)
    AS              reduce using rule 95 (expression -> expression CONCAT expression .)
    LBRAC           reduce using rule 95 (expression -> expression CONCAT expression .)
    GENERATOR       reduce using rule 95 (expression -> expression CONCAT expression .)
    COMMA           reduce using rule 95 (expression -> expression CONCAT expression .)
    RBRAC           reduce using rule 95 (expression -> expression CONCAT expression .)
    ELIF            reduce using rule 95 (expression -> expression CONCAT expression .)
    ELSE            reduce using rule 95 (expression -> expression CONCAT expression .)
    IN              reduce using rule 95 (expression -> expression CONCAT expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MINUS           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! TIMES           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! DIVIDE          [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! POWER           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MODULE          [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! AND             [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! OR              [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! EQUAL           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! DIFFERENT       [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MINOREQUAL      [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MAJOREQUAL      [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MINOR           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! MAJOR           [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! DOT             [ reduce using rule 95 (expression -> expression CONCAT expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 255

    (96) expression -> expression DOUBLECONCAT expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    CONCAT          reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    DOUBLECONCAT    reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    IS              reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    AS              reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    LBRAC           reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    GENERATOR       reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    COMMA           reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    RBRAC           reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    ELIF            reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    ELSE            reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    IN              reduce using rule 96 (expression -> expression DOUBLECONCAT expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MINUS           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! TIMES           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! DIVIDE          [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! POWER           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MODULE          [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! AND             [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! OR              [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! EQUAL           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! DIFFERENT       [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MINOREQUAL      [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MAJOREQUAL      [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MINOR           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! MAJOR           [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! DOT             [ reduce using rule 96 (expression -> expression DOUBLECONCAT expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 256

    (97) expression -> expression AND expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 97 (expression -> expression AND expression .)
    CONCAT          reduce using rule 97 (expression -> expression AND expression .)
    DOUBLECONCAT    reduce using rule 97 (expression -> expression AND expression .)
    AND             reduce using rule 97 (expression -> expression AND expression .)
    OR              reduce using rule 97 (expression -> expression AND expression .)
    IS              reduce using rule 97 (expression -> expression AND expression .)
    AS              reduce using rule 97 (expression -> expression AND expression .)
    LBRAC           reduce using rule 97 (expression -> expression AND expression .)
    GENERATOR       reduce using rule 97 (expression -> expression AND expression .)
    COMMA           reduce using rule 97 (expression -> expression AND expression .)
    RBRAC           reduce using rule 97 (expression -> expression AND expression .)
    ELIF            reduce using rule 97 (expression -> expression AND expression .)
    ELSE            reduce using rule 97 (expression -> expression AND expression .)
    IN              reduce using rule 97 (expression -> expression AND expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! POWER           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! DIFFERENT       [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MINOREQUAL      [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MAJOREQUAL      [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MINOR           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! MAJOR           [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 97 (expression -> expression AND expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 257

    (98) expression -> expression OR expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 98 (expression -> expression OR expression .)
    CONCAT          reduce using rule 98 (expression -> expression OR expression .)
    DOUBLECONCAT    reduce using rule 98 (expression -> expression OR expression .)
    OR              reduce using rule 98 (expression -> expression OR expression .)
    IS              reduce using rule 98 (expression -> expression OR expression .)
    AS              reduce using rule 98 (expression -> expression OR expression .)
    LBRAC           reduce using rule 98 (expression -> expression OR expression .)
    GENERATOR       reduce using rule 98 (expression -> expression OR expression .)
    COMMA           reduce using rule 98 (expression -> expression OR expression .)
    RBRAC           reduce using rule 98 (expression -> expression OR expression .)
    ELIF            reduce using rule 98 (expression -> expression OR expression .)
    ELSE            reduce using rule 98 (expression -> expression OR expression .)
    IN              reduce using rule 98 (expression -> expression OR expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    AND             shift and go to state 184
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! POWER           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! DIFFERENT       [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MINOREQUAL      [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MAJOREQUAL      [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MINOR           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! MAJOR           [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 98 (expression -> expression OR expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! OR              [ shift and go to state 185 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 258

    (99) expression -> expression EQUAL expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 99 (expression -> expression EQUAL expression .)
    CONCAT          reduce using rule 99 (expression -> expression EQUAL expression .)
    DOUBLECONCAT    reduce using rule 99 (expression -> expression EQUAL expression .)
    AND             reduce using rule 99 (expression -> expression EQUAL expression .)
    OR              reduce using rule 99 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 99 (expression -> expression EQUAL expression .)
    DIFFERENT       reduce using rule 99 (expression -> expression EQUAL expression .)
    IS              reduce using rule 99 (expression -> expression EQUAL expression .)
    AS              reduce using rule 99 (expression -> expression EQUAL expression .)
    LBRAC           reduce using rule 99 (expression -> expression EQUAL expression .)
    GENERATOR       reduce using rule 99 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 99 (expression -> expression EQUAL expression .)
    RBRAC           reduce using rule 99 (expression -> expression EQUAL expression .)
    ELIF            reduce using rule 99 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 99 (expression -> expression EQUAL expression .)
    IN              reduce using rule 99 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! POWER           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MODULE          [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MINOREQUAL      [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MAJOREQUAL      [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MINOR           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! MAJOR           [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! DOT             [ reduce using rule 99 (expression -> expression EQUAL expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 259

    (100) expression -> expression DIFFERENT expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 100 (expression -> expression DIFFERENT expression .)
    CONCAT          reduce using rule 100 (expression -> expression DIFFERENT expression .)
    DOUBLECONCAT    reduce using rule 100 (expression -> expression DIFFERENT expression .)
    AND             reduce using rule 100 (expression -> expression DIFFERENT expression .)
    OR              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    EQUAL           reduce using rule 100 (expression -> expression DIFFERENT expression .)
    DIFFERENT       reduce using rule 100 (expression -> expression DIFFERENT expression .)
    IS              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    AS              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    LBRAC           reduce using rule 100 (expression -> expression DIFFERENT expression .)
    GENERATOR       reduce using rule 100 (expression -> expression DIFFERENT expression .)
    COMMA           reduce using rule 100 (expression -> expression DIFFERENT expression .)
    RBRAC           reduce using rule 100 (expression -> expression DIFFERENT expression .)
    ELIF            reduce using rule 100 (expression -> expression DIFFERENT expression .)
    ELSE            reduce using rule 100 (expression -> expression DIFFERENT expression .)
    IN              reduce using rule 100 (expression -> expression DIFFERENT expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! POWER           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MODULE          [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MINOREQUAL      [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MAJOREQUAL      [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MINOR           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! MAJOR           [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! DOT             [ reduce using rule 100 (expression -> expression DIFFERENT expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 260

    (101) expression -> expression MINOREQUAL expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    CONCAT          reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    DOUBLECONCAT    reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    AND             reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    OR              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    EQUAL           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    DIFFERENT       reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    MAJOREQUAL      reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    MAJOR           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    IS              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    AS              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    LBRAC           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    GENERATOR       reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    COMMA           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    RBRAC           reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    ELIF            reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    ELSE            reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    IN              reduce using rule 101 (expression -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MINUS           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! TIMES           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! POWER           [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! MODULE          [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! DOT             [ reduce using rule 101 (expression -> expression MINOREQUAL expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 261

    (102) expression -> expression MAJOREQUAL expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    CONCAT          reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    DOUBLECONCAT    reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    AND             reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    OR              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    EQUAL           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    DIFFERENT       reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    MINOREQUAL      reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    MAJOREQUAL      reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    MINOR           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    MAJOR           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    IS              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    AS              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    LBRAC           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    GENERATOR       reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    COMMA           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    RBRAC           reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    ELIF            reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    ELSE            reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    IN              reduce using rule 102 (expression -> expression MAJOREQUAL expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MINUS           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! TIMES           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! POWER           [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! MODULE          [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! DOT             [ reduce using rule 102 (expression -> expression MAJOREQUAL expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 262

    (103) expression -> expression MINOR expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 103 (expression -> expression MINOR expression .)
    CONCAT          reduce using rule 103 (expression -> expression MINOR expression .)
    DOUBLECONCAT    reduce using rule 103 (expression -> expression MINOR expression .)
    AND             reduce using rule 103 (expression -> expression MINOR expression .)
    OR              reduce using rule 103 (expression -> expression MINOR expression .)
    EQUAL           reduce using rule 103 (expression -> expression MINOR expression .)
    DIFFERENT       reduce using rule 103 (expression -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 103 (expression -> expression MINOR expression .)
    MAJOREQUAL      reduce using rule 103 (expression -> expression MINOR expression .)
    MINOR           reduce using rule 103 (expression -> expression MINOR expression .)
    MAJOR           reduce using rule 103 (expression -> expression MINOR expression .)
    IS              reduce using rule 103 (expression -> expression MINOR expression .)
    AS              reduce using rule 103 (expression -> expression MINOR expression .)
    LBRAC           reduce using rule 103 (expression -> expression MINOR expression .)
    GENERATOR       reduce using rule 103 (expression -> expression MINOR expression .)
    COMMA           reduce using rule 103 (expression -> expression MINOR expression .)
    RBRAC           reduce using rule 103 (expression -> expression MINOR expression .)
    ELIF            reduce using rule 103 (expression -> expression MINOR expression .)
    ELSE            reduce using rule 103 (expression -> expression MINOR expression .)
    IN              reduce using rule 103 (expression -> expression MINOR expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MINUS           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! TIMES           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! DIVIDE          [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! POWER           [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! MODULE          [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! DOT             [ reduce using rule 103 (expression -> expression MINOR expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 263

    (104) expression -> expression MAJOR expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 104 (expression -> expression MAJOR expression .)
    CONCAT          reduce using rule 104 (expression -> expression MAJOR expression .)
    DOUBLECONCAT    reduce using rule 104 (expression -> expression MAJOR expression .)
    AND             reduce using rule 104 (expression -> expression MAJOR expression .)
    OR              reduce using rule 104 (expression -> expression MAJOR expression .)
    EQUAL           reduce using rule 104 (expression -> expression MAJOR expression .)
    DIFFERENT       reduce using rule 104 (expression -> expression MAJOR expression .)
    MINOREQUAL      reduce using rule 104 (expression -> expression MAJOR expression .)
    MAJOREQUAL      reduce using rule 104 (expression -> expression MAJOR expression .)
    MINOR           reduce using rule 104 (expression -> expression MAJOR expression .)
    MAJOR           reduce using rule 104 (expression -> expression MAJOR expression .)
    IS              reduce using rule 104 (expression -> expression MAJOR expression .)
    AS              reduce using rule 104 (expression -> expression MAJOR expression .)
    LBRAC           reduce using rule 104 (expression -> expression MAJOR expression .)
    GENERATOR       reduce using rule 104 (expression -> expression MAJOR expression .)
    COMMA           reduce using rule 104 (expression -> expression MAJOR expression .)
    RBRAC           reduce using rule 104 (expression -> expression MAJOR expression .)
    ELIF            reduce using rule 104 (expression -> expression MAJOR expression .)
    ELSE            reduce using rule 104 (expression -> expression MAJOR expression .)
    IN              reduce using rule 104 (expression -> expression MAJOR expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MINUS           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! TIMES           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! DIVIDE          [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! POWER           [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! MODULE          [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! DOT             [ reduce using rule 104 (expression -> expression MAJOR expression .) ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 264

    (68) expression -> LET assign_values IN . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 303
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 265

    (73) expression -> IF expression_parenthized expression . opt_elifs ELSE expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (74) opt_elifs -> . ELIF expression_parenthized expression opt_elifs
    (75) opt_elifs -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    ELIF            shift and go to state 245
    ELSE            reduce using rule 1 (empty -> .)

    opt_elifs                      shift and go to state 304
    empty                          shift and go to state 246

state 266

    (79) expression -> FOR LPAREN destroyable . IN expression RPAREN expression

    IN              shift and go to state 305


state 267

    (81) expression -> WHILE expression_parenthized expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    LBRAC           reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    GENERATOR       reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    COMMA           reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    RBRAC           reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    ELIF            reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    ELSE            reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    IN              reduce using rule 81 (expression -> WHILE expression_parenthized expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MINUS           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! TIMES           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DIVIDE          [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! POWER           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MODULE          [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! CONCAT          [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! AND             [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! OR              [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! EQUAL           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DIFFERENT       [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MINOREQUAL      [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MAJOREQUAL      [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MINOR           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! MAJOR           [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! IS              [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! AS              [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! DOT             [ reduce using rule 81 (expression -> WHILE expression_parenthized expression .) ]
  ! LBRAC           [ shift and go to state 72 ]


state 268

    (107) expression -> destroyablel DESTRUCTASIGN expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    LBRAC           reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    GENERATOR       reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    COMMA           reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    RBRAC           reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    ELIF            reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    ELSE            reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    IN              reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MINUS           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! TIMES           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DIVIDE          [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! POWER           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MODULE          [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! CONCAT          [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! AND             [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! OR              [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! EQUAL           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DIFFERENT       [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MINOREQUAL      [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MAJOREQUAL      [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MINOR           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! MAJOR           [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! IS              [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! AS              [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! DOT             [ reduce using rule 107 (expression -> destroyablel DESTRUCTASIGN expression .) ]
  ! LBRAC           [ shift and go to state 72 ]


state 269

    (108) expression -> destroyabler DESTRUCTASIGN expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    LBRAC           reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    GENERATOR       reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    COMMA           reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    RBRAC           reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    ELIF            reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    ELSE            reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    IN              reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MINUS           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! TIMES           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DIVIDE          [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! POWER           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MODULE          [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! CONCAT          [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! AND             [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! OR              [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! EQUAL           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DIFFERENT       [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MINOREQUAL      [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MAJOREQUAL      [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MINOR           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! MAJOR           [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! IS              [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! AS              [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! DOT             [ reduce using rule 108 (expression -> destroyabler DESTRUCTASIGN expression .) ]
  ! LBRAC           [ shift and go to state 72 ]


state 270

    (88) destroyabler -> ID DOT ID LBRAC . expression RBRAC
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 306
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 271

    (87) destroyabler -> ID LBRAC expression RBRAC .

    DESTRUCTASIGN   reduce using rule 87 (destroyabler -> ID LBRAC expression RBRAC .)


state 272

    (28) func_call_next -> ID LPAREN func_call_args RPAREN .

    SEMICOLON       reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    PLUS            reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    MINUS           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    TIMES           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    DIVIDE          reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    POWER           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    MODULE          reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    CONCAT          reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    DOUBLECONCAT    reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    AND             reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    OR              reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    EQUAL           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    DIFFERENT       reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    MINOREQUAL      reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    MAJOREQUAL      reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    MINOR           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    MAJOR           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    IS              reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    AS              reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    LBRAC           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    DOT             reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    RPAREN          reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    ELIF            reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    ELSE            reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    GENERATOR       reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    COMMA           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    RBRAC           reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)
    IN              reduce using rule 28 (func_call_next -> ID LPAREN func_call_args RPAREN .)


state 273

    (142) vector -> LBRAC expression GENERATOR destroyable . IN expression RBRAC

    IN              shift and go to state 307


state 274

    (34) func_call_args_list_rem -> COMMA expression . func_call_args_list_rem
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (34) func_call_args_list_rem -> . COMMA expression func_call_args_list_rem
    (35) func_call_args_list_rem -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    COMMA           shift and go to state 214
    RBRAC           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    func_call_args_list_rem        shift and go to state 308
    empty                          shift and go to state 215

state 275

    (148) expression -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    PLUS            reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    TIMES           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    POWER           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    MODULE          reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    CONCAT          reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    AND             reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    OR              reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    EQUAL           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    MINOR           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    MAJOR           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    IS              reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    AS              reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    LBRAC           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    DOT             reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    ELIF            reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    COMMA           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    RBRAC           reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)
    IN              reduce using rule 148 (expression -> PRINT LPAREN expression RPAREN .)


state 276

    (149) expression -> RANGE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    PLUS            reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    MINUS           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    TIMES           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    POWER           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    MODULE          reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    CONCAT          reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    AND             reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    OR              reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    EQUAL           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    MINOR           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    MAJOR           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    IS              reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    AS              reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    LBRAC           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    DOT             reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    ELIF            reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    ELSE            reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    COMMA           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    RBRAC           reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)
    IN              reduce using rule 149 (expression -> RANGE LPAREN expression RPAREN .)


state 277

    (150) expression -> RANGE LPAREN expression COMMA . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 309
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 278

    (151) expression -> SQRT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    PLUS            reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    MINUS           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    TIMES           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    POWER           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    MODULE          reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    CONCAT          reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    AND             reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    OR              reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    EQUAL           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    MINOR           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    MAJOR           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    IS              reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    AS              reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    LBRAC           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    DOT             reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    ELIF            reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    ELSE            reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    COMMA           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    RBRAC           reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)
    IN              reduce using rule 151 (expression -> SQRT LPAREN expression RPAREN .)


state 279

    (152) expression -> SIN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    PLUS            reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    MINUS           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    TIMES           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    POWER           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    MODULE          reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    CONCAT          reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    AND             reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    OR              reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    EQUAL           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    MINOR           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    MAJOR           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    IS              reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    AS              reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    LBRAC           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    DOT             reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    RPAREN          reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    ELIF            reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    ELSE            reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    COMMA           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    RBRAC           reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)
    IN              reduce using rule 152 (expression -> SIN LPAREN expression RPAREN .)


state 280

    (153) expression -> COS LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    PLUS            reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    MINUS           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    TIMES           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    POWER           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    MODULE          reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    CONCAT          reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    AND             reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    OR              reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    EQUAL           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    MINOR           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    MAJOR           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    IS              reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    AS              reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    LBRAC           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    DOT             reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    RPAREN          reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    ELIF            reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    ELSE            reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    COMMA           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    RBRAC           reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)
    IN              reduce using rule 153 (expression -> COS LPAREN expression RPAREN .)


state 281

    (154) expression -> EXP LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    PLUS            reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    MINUS           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    TIMES           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    POWER           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    MODULE          reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    CONCAT          reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    DOUBLECONCAT    reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    AND             reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    OR              reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    EQUAL           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    MINOREQUAL      reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    MAJOREQUAL      reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    MINOR           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    MAJOR           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    IS              reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    AS              reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    LBRAC           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    DOT             reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    ELIF            reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    ELSE            reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    GENERATOR       reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    COMMA           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    RBRAC           reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)
    IN              reduce using rule 154 (expression -> EXP LPAREN expression RPAREN .)


state 282

    (155) expression -> LOG LPAREN expression COMMA . expression RPAREN
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 310
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 283

    (30) type_call -> NEW ID LPAREN func_call_args . RPAREN

    RPAREN          shift and go to state 311


state 284

    (36) function_definition -> FUNCTION ID LPAREN func_params RPAREN . type_of ARROW high_level_expression
    (37) function_definition -> FUNCTION ID LPAREN func_params RPAREN . type_of expression_block optional_semicolon
    (2) type_of -> . DOUBLEDOTS args
    (3) type_of -> . empty
    (1) empty -> .

    DOUBLEDOTS      shift and go to state 170
    ARROW           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    type_of                        shift and go to state 312
    empty                          shift and go to state 171

state 285

    (39) func_params_list -> id func_params_list_rem .

    RPAREN          reduce using rule 39 (func_params_list -> id func_params_list_rem .)


state 286

    (41) func_params_list_rem -> COMMA . id func_params_list_rem
    (4) id -> . ID type_of

    ID              shift and go to state 76

    id                             shift and go to state 313

state 287

    (42) func_params_list_rem -> empty .

    RPAREN          reduce using rule 42 (func_params_list_rem -> empty .)


state 288

    (43) type_def -> TYPE ID optional_type_params optional_inheritance LBRACE . type_members RBRACE optional_semicolon
    (54) type_members -> . type_member type_members
    (55) type_members -> . empty
    (56) type_member -> . member_func
    (59) type_member -> . member_var
    (1) empty -> .
    (57) member_func -> . ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (58) member_func -> . ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (60) member_var -> . id ASIGN high_level_expression
    (4) id -> . ID type_of

    RBRACE          reduce using rule 1 (empty -> .)
    ID              shift and go to state 314

    type_members                   shift and go to state 315
    type_member                    shift and go to state 316
    empty                          shift and go to state 317
    member_func                    shift and go to state 318
    member_var                     shift and go to state 319
    id                             shift and go to state 320

state 289

    (44) optional_inheritance -> INHERITS ID . optional_inheritance_params
    (46) optional_inheritance_params -> . LPAREN func_call_args RPAREN
    (47) optional_inheritance_params -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 322
    LBRACE          reduce using rule 1 (empty -> .)

    optional_inheritance_params    shift and go to state 321
    empty                          shift and go to state 323

state 290

    (48) optional_type_params -> LPAREN typedef_params RPAREN .

    INHERITS        reduce using rule 48 (optional_type_params -> LPAREN typedef_params RPAREN .)
    LBRACE          reduce using rule 48 (optional_type_params -> LPAREN typedef_params RPAREN .)


state 291

    (50) typedef_params -> id typedef_params_rem .

    RPAREN          reduce using rule 50 (typedef_params -> id typedef_params_rem .)


state 292

    (52) typedef_params_rem -> COMMA . id typedef_params_rem
    (4) id -> . ID type_of

    ID              shift and go to state 76

    id                             shift and go to state 324

state 293

    (53) typedef_params_rem -> empty .

    RPAREN          reduce using rule 53 (typedef_params_rem -> empty .)


state 294

    (17) protocol_method -> ID . LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON

    LPAREN          shift and go to state 325


state 295

    (12) protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods . RBRACE optional_semicolon

    RBRACE          shift and go to state 326


state 296

    (15) protocol_methods -> protocol_method . protocol_methods
    (16) protocol_methods -> protocol_method . empty
    (15) protocol_methods -> . protocol_method protocol_methods
    (16) protocol_methods -> . protocol_method empty
    (1) empty -> .
    (17) protocol_method -> . ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON

    RBRACE          reduce using rule 1 (empty -> .)
    ID              shift and go to state 294

    protocol_method                shift and go to state 296
    protocol_methods               shift and go to state 327
    empty                          shift and go to state 328

state 297

    (69) assign_values -> id ASIGN expression rem_assignments .

    IN              reduce using rule 69 (assign_values -> id ASIGN expression rem_assignments .)


state 298

    (70) rem_assignments -> COMMA . id ASIGN expression rem_assignments
    (4) id -> . ID type_of

    ID              shift and go to state 76

    id                             shift and go to state 329

state 299

    (71) rem_assignments -> empty .

    IN              reduce using rule 71 (rem_assignments -> empty .)


state 300

    (72) high_level_expression -> IF expression_parenthized expression opt_elifs ELSE . high_level_expression
    (73) expression -> IF expression_parenthized expression opt_elifs ELSE . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    expression                     shift and go to state 330
    high_level_expression          shift and go to state 331
    expression_block               shift and go to state 14
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 301

    (74) opt_elifs -> ELIF expression_parenthized . expression opt_elifs
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    expression                     shift and go to state 332
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 302

    (78) high_level_expression -> FOR LPAREN destroyable IN expression . RPAREN high_level_expression
    (79) expression -> FOR LPAREN destroyable IN expression . RPAREN expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 333
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 303

    (68) expression -> LET assign_values IN expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 68 (expression -> LET assign_values IN expression .)
    LBRAC           reduce using rule 68 (expression -> LET assign_values IN expression .)
    GENERATOR       reduce using rule 68 (expression -> LET assign_values IN expression .)
    COMMA           reduce using rule 68 (expression -> LET assign_values IN expression .)
    RBRAC           reduce using rule 68 (expression -> LET assign_values IN expression .)
    ELIF            reduce using rule 68 (expression -> LET assign_values IN expression .)
    ELSE            reduce using rule 68 (expression -> LET assign_values IN expression .)
    IN              reduce using rule 68 (expression -> LET assign_values IN expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! TIMES           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! POWER           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MODULE          [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! CONCAT          [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! AND             [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! OR              [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! EQUAL           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DIFFERENT       [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MINOREQUAL      [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MAJOREQUAL      [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MINOR           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! MAJOR           [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! IS              [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! AS              [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! DOT             [ reduce using rule 68 (expression -> LET assign_values IN expression .) ]
  ! LBRAC           [ shift and go to state 72 ]


state 304

    (73) expression -> IF expression_parenthized expression opt_elifs . ELSE expression

    ELSE            shift and go to state 334


state 305

    (79) expression -> FOR LPAREN destroyable IN . expression RPAREN expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 335
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 306

    (88) destroyabler -> ID DOT ID LBRAC expression . RBRAC
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RBRAC           shift and go to state 336
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 307

    (142) vector -> LBRAC expression GENERATOR destroyable IN . expression RBRAC
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 337
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 308

    (34) func_call_args_list_rem -> COMMA expression func_call_args_list_rem .

    RBRAC           reduce using rule 34 (func_call_args_list_rem -> COMMA expression func_call_args_list_rem .)
    RPAREN          reduce using rule 34 (func_call_args_list_rem -> COMMA expression func_call_args_list_rem .)


state 309

    (150) expression -> RANGE LPAREN expression COMMA expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 338
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 310

    (155) expression -> LOG LPAREN expression COMMA expression . RPAREN
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 339
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 311

    (30) type_call -> NEW ID LPAREN func_call_args RPAREN .

    SEMICOLON       reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    PLUS            reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    MINUS           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    TIMES           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    DIVIDE          reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    POWER           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    MODULE          reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    CONCAT          reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    DOUBLECONCAT    reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    AND             reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    OR              reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    EQUAL           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    DIFFERENT       reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    MINOREQUAL      reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    MAJOREQUAL      reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    MINOR           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    MAJOR           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    IS              reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    AS              reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    LBRAC           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    DOT             reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    RPAREN          reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    ELIF            reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    ELSE            reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    GENERATOR       reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    COMMA           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    RBRAC           reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)
    IN              reduce using rule 30 (type_call -> NEW ID LPAREN func_call_args RPAREN .)


state 312

    (36) function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of . ARROW high_level_expression
    (37) function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of . expression_block optional_semicolon
    (64) expression_block -> . LBRACE expression_block_list RBRACE

    ARROW           shift and go to state 340
    LBRACE          shift and go to state 45

    expression_block               shift and go to state 341

state 313

    (41) func_params_list_rem -> COMMA id . func_params_list_rem
    (41) func_params_list_rem -> . COMMA id func_params_list_rem
    (42) func_params_list_rem -> . empty
    (1) empty -> .

    COMMA           shift and go to state 286
    RPAREN          reduce using rule 1 (empty -> .)

    func_params_list_rem           shift and go to state 342
    empty                          shift and go to state 287

state 314

    (57) member_func -> ID . LPAREN func_params RPAREN type_of ARROW high_level_expression
    (58) member_func -> ID . LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (4) id -> ID . type_of
    (2) type_of -> . DOUBLEDOTS args
    (3) type_of -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 343
    DOUBLEDOTS      shift and go to state 170
    ASIGN           reduce using rule 1 (empty -> .)

    type_of                        shift and go to state 169
    empty                          shift and go to state 171

state 315

    (43) type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members . RBRACE optional_semicolon

    RBRACE          shift and go to state 344


state 316

    (54) type_members -> type_member . type_members
    (54) type_members -> . type_member type_members
    (55) type_members -> . empty
    (56) type_member -> . member_func
    (59) type_member -> . member_var
    (1) empty -> .
    (57) member_func -> . ID LPAREN func_params RPAREN type_of ARROW high_level_expression
    (58) member_func -> . ID LPAREN func_params RPAREN type_of expression_block optional_semicolon
    (60) member_var -> . id ASIGN high_level_expression
    (4) id -> . ID type_of

    RBRACE          reduce using rule 1 (empty -> .)
    ID              shift and go to state 314

    type_member                    shift and go to state 316
    type_members                   shift and go to state 345
    empty                          shift and go to state 317
    member_func                    shift and go to state 318
    member_var                     shift and go to state 319
    id                             shift and go to state 320

state 317

    (55) type_members -> empty .

    RBRACE          reduce using rule 55 (type_members -> empty .)


state 318

    (56) type_member -> member_func .

    ID              reduce using rule 56 (type_member -> member_func .)
    RBRACE          reduce using rule 56 (type_member -> member_func .)


state 319

    (59) type_member -> member_var .

    ID              reduce using rule 59 (type_member -> member_var .)
    RBRACE          reduce using rule 59 (type_member -> member_var .)


state 320

    (60) member_var -> id . ASIGN high_level_expression

    ASIGN           shift and go to state 346


state 321

    (44) optional_inheritance -> INHERITS ID optional_inheritance_params .

    LBRACE          reduce using rule 44 (optional_inheritance -> INHERITS ID optional_inheritance_params .)


state 322

    (46) optional_inheritance_params -> LPAREN . func_call_args RPAREN
    (31) func_call_args -> . func_call_args_list
    (32) func_call_args_list -> . expression func_call_args_list_rem
    (33) func_call_args_list -> . empty
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (1) empty -> .
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    RPAREN          reduce using rule 1 (empty -> .)
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    func_call_args                 shift and go to state 347
    func_call_args_list            shift and go to state 102
    expression                     shift and go to state 210
    empty                          shift and go to state 103
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 323

    (47) optional_inheritance_params -> empty .

    LBRACE          reduce using rule 47 (optional_inheritance_params -> empty .)


state 324

    (52) typedef_params_rem -> COMMA id . typedef_params_rem
    (52) typedef_params_rem -> . COMMA id typedef_params_rem
    (53) typedef_params_rem -> . empty
    (1) empty -> .

    COMMA           shift and go to state 292
    RPAREN          reduce using rule 1 (empty -> .)

    typedef_params_rem             shift and go to state 348
    empty                          shift and go to state 293

state 325

    (17) protocol_method -> ID LPAREN . protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON
    (23) protocol_methods_arguments -> . ID DOUBLEDOTS args protocol_methods_arguments_rem
    (24) protocol_methods_arguments -> . empty
    (1) empty -> .

    ID              shift and go to state 349
    RPAREN          reduce using rule 1 (empty -> .)

    protocol_methods_arguments     shift and go to state 350
    empty                          shift and go to state 351

state 326

    (12) protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE . optional_semicolon
    (76) optional_semicolon -> . SEMICOLON
    (77) optional_semicolon -> . empty
    (1) empty -> .

    SEMICOLON       shift and go to state 353
    FUNCTION        reduce using rule 1 (empty -> .)
    TYPE            reduce using rule 1 (empty -> .)
    PROTOCOL        reduce using rule 1 (empty -> .)
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    optional_semicolon             shift and go to state 352
    empty                          shift and go to state 354

state 327

    (15) protocol_methods -> protocol_method protocol_methods .

    RBRACE          reduce using rule 15 (protocol_methods -> protocol_method protocol_methods .)


state 328

    (16) protocol_methods -> protocol_method empty .

    RBRACE          reduce using rule 16 (protocol_methods -> protocol_method empty .)


state 329

    (70) rem_assignments -> COMMA id . ASIGN expression rem_assignments

    ASIGN           shift and go to state 355


state 330

    (73) expression -> IF expression_parenthized expression opt_elifs ELSE expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    LBRAC           reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    ELIF            reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    ELSE            reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    RPAREN          reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    MODULE          shift and go to state 59
    CONCAT          shift and go to state 60
    DOUBLECONCAT    shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUAL           shift and go to state 64
    DIFFERENT       shift and go to state 65
    MINOREQUAL      shift and go to state 66
    MAJOREQUAL      shift and go to state 67
    MINOR           shift and go to state 68
    MAJOR           shift and go to state 69
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! TIMES           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! POWER           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MODULE          [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! CONCAT          [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! AND             [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! OR              [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! EQUAL           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DIFFERENT       [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MINOREQUAL      [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MAJOREQUAL      [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MINOR           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MAJOR           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! IS              [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! AS              [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DOT             [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! LBRAC           [ shift and go to state 72 ]


state 331

    (72) high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .

    $end            reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    LET             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    IF              reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    FOR             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    WHILE           reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    NOT             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    MINUS           reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    ID              reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    NUMBER          reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    STRING          reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    PI              reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    E               reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    TRUE            reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    FALSE           reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    PRINT           reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    RANGE           reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    SQRT            reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    SIN             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    COS             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    EXP             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    LOG             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    RAND            reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    LBRACE          reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    NEW             reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    LPAREN          reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    LBRAC           reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    RBRACE          reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    FUNCTION        reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    TYPE            reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)
    PROTOCOL        reduce using rule 72 (high_level_expression -> IF expression_parenthized expression opt_elifs ELSE high_level_expression .)


state 332

    (74) opt_elifs -> ELIF expression_parenthized expression . opt_elifs
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (74) opt_elifs -> . ELIF expression_parenthized expression opt_elifs
    (75) opt_elifs -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    ELIF            shift and go to state 245
    ELSE            reduce using rule 1 (empty -> .)

    opt_elifs                      shift and go to state 356
    empty                          shift and go to state 246

state 333

    (78) high_level_expression -> FOR LPAREN destroyable IN expression RPAREN . high_level_expression
    (79) expression -> FOR LPAREN destroyable IN expression RPAREN . expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 357
    high_level_expression          shift and go to state 358
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 334

    (73) expression -> IF expression_parenthized expression opt_elifs ELSE . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression_parenthized         shift and go to state 17
    expression                     shift and go to state 359
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 335

    (79) expression -> FOR LPAREN destroyable IN expression . RPAREN expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          shift and go to state 360
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 336

    (88) destroyabler -> ID DOT ID LBRAC expression RBRAC .

    DESTRUCTASIGN   reduce using rule 88 (destroyabler -> ID DOT ID LBRAC expression RBRAC .)


state 337

    (142) vector -> LBRAC expression GENERATOR destroyable IN expression . RBRAC
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RBRAC           shift and go to state 361
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73


state 338

    (150) expression -> RANGE LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    POWER           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    MODULE          reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    CONCAT          reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    DOUBLECONCAT    reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    DIFFERENT       reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    MINOREQUAL      reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    MAJOREQUAL      reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    MINOR           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    MAJOR           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    IS              reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    AS              reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    LBRAC           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    DOT             reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    ELIF            reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    ELSE            reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    GENERATOR       reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    RBRAC           reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)
    IN              reduce using rule 150 (expression -> RANGE LPAREN expression COMMA expression RPAREN .)


state 339

    (155) expression -> LOG LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    POWER           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    MODULE          reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    CONCAT          reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    DOUBLECONCAT    reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    DIFFERENT       reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    MINOREQUAL      reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    MAJOREQUAL      reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    MINOR           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    MAJOR           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    IS              reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    AS              reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    LBRAC           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    DOT             reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    ELIF            reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    ELSE            reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    GENERATOR       reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    RBRAC           reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)
    IN              reduce using rule 155 (expression -> LOG LPAREN expression COMMA expression RPAREN .)


state 340

    (36) function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW . high_level_expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 362
    expression                     shift and go to state 13
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 341

    (37) function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block . optional_semicolon
    (76) optional_semicolon -> . SEMICOLON
    (77) optional_semicolon -> . empty
    (1) empty -> .

    SEMICOLON       shift and go to state 353
    FUNCTION        reduce using rule 1 (empty -> .)
    TYPE            reduce using rule 1 (empty -> .)
    PROTOCOL        reduce using rule 1 (empty -> .)
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    optional_semicolon             shift and go to state 363
    empty                          shift and go to state 354

state 342

    (41) func_params_list_rem -> COMMA id func_params_list_rem .

    RPAREN          reduce using rule 41 (func_params_list_rem -> COMMA id func_params_list_rem .)


state 343

    (57) member_func -> ID LPAREN . func_params RPAREN type_of ARROW high_level_expression
    (58) member_func -> ID LPAREN . func_params RPAREN type_of expression_block optional_semicolon
    (38) func_params -> . func_params_list
    (39) func_params_list -> . id func_params_list_rem
    (40) func_params_list -> . empty
    (4) id -> . ID type_of
    (1) empty -> .

    ID              shift and go to state 76
    RPAREN          reduce using rule 1 (empty -> .)

    func_params                    shift and go to state 364
    func_params_list               shift and go to state 228
    id                             shift and go to state 229
    empty                          shift and go to state 230

state 344

    (43) type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE . optional_semicolon
    (76) optional_semicolon -> . SEMICOLON
    (77) optional_semicolon -> . empty
    (1) empty -> .

    SEMICOLON       shift and go to state 353
    FUNCTION        reduce using rule 1 (empty -> .)
    TYPE            reduce using rule 1 (empty -> .)
    PROTOCOL        reduce using rule 1 (empty -> .)
    LET             reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    NOT             reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    NUMBER          reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    PI              reduce using rule 1 (empty -> .)
    E               reduce using rule 1 (empty -> .)
    TRUE            reduce using rule 1 (empty -> .)
    FALSE           reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    RANGE           reduce using rule 1 (empty -> .)
    SQRT            reduce using rule 1 (empty -> .)
    SIN             reduce using rule 1 (empty -> .)
    COS             reduce using rule 1 (empty -> .)
    EXP             reduce using rule 1 (empty -> .)
    LOG             reduce using rule 1 (empty -> .)
    RAND            reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    LBRAC           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    optional_semicolon             shift and go to state 365
    empty                          shift and go to state 354

state 345

    (54) type_members -> type_member type_members .

    RBRACE          reduce using rule 54 (type_members -> type_member type_members .)


state 346

    (60) member_var -> id ASIGN . high_level_expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 366
    expression                     shift and go to state 13
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 347

    (46) optional_inheritance_params -> LPAREN func_call_args . RPAREN

    RPAREN          shift and go to state 367


state 348

    (52) typedef_params_rem -> COMMA id typedef_params_rem .

    RPAREN          reduce using rule 52 (typedef_params_rem -> COMMA id typedef_params_rem .)


state 349

    (23) protocol_methods_arguments -> ID . DOUBLEDOTS args protocol_methods_arguments_rem

    DOUBLEDOTS      shift and go to state 368


state 350

    (17) protocol_method -> ID LPAREN protocol_methods_arguments . RPAREN DOUBLEDOTS args SEMICOLON

    RPAREN          shift and go to state 369


state 351

    (24) protocol_methods_arguments -> empty .

    RPAREN          reduce using rule 24 (protocol_methods_arguments -> empty .)


state 352

    (12) protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .

    FUNCTION        reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    TYPE            reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    PROTOCOL        reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    LET             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    IF              reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    FOR             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    WHILE           reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    NOT             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    MINUS           reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    ID              reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    NUMBER          reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    STRING          reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    PI              reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    E               reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    TRUE            reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    FALSE           reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    PRINT           reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    RANGE           reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    SQRT            reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    SIN             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    COS             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    EXP             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    LOG             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    RAND            reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    LBRACE          reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    NEW             reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    LPAREN          reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    LBRAC           reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)
    $end            reduce using rule 12 (protocol_definition -> PROTOCOL ID opt_extends LBRACE protocol_methods RBRACE optional_semicolon .)


state 353

    (76) optional_semicolon -> SEMICOLON .

    FUNCTION        reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    TYPE            reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    PROTOCOL        reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    LET             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    IF              reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    FOR             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    WHILE           reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    NOT             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    MINUS           reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    ID              reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    NUMBER          reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    STRING          reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    PI              reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    E               reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    TRUE            reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    FALSE           reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    PRINT           reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    RANGE           reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    SQRT            reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    SIN             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    COS             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    EXP             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    LOG             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    RAND            reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    LBRACE          reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    NEW             reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    LPAREN          reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    LBRAC           reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    $end            reduce using rule 76 (optional_semicolon -> SEMICOLON .)
    RBRACE          reduce using rule 76 (optional_semicolon -> SEMICOLON .)


state 354

    (77) optional_semicolon -> empty .

    FUNCTION        reduce using rule 77 (optional_semicolon -> empty .)
    TYPE            reduce using rule 77 (optional_semicolon -> empty .)
    PROTOCOL        reduce using rule 77 (optional_semicolon -> empty .)
    LET             reduce using rule 77 (optional_semicolon -> empty .)
    IF              reduce using rule 77 (optional_semicolon -> empty .)
    FOR             reduce using rule 77 (optional_semicolon -> empty .)
    WHILE           reduce using rule 77 (optional_semicolon -> empty .)
    NOT             reduce using rule 77 (optional_semicolon -> empty .)
    MINUS           reduce using rule 77 (optional_semicolon -> empty .)
    ID              reduce using rule 77 (optional_semicolon -> empty .)
    NUMBER          reduce using rule 77 (optional_semicolon -> empty .)
    STRING          reduce using rule 77 (optional_semicolon -> empty .)
    PI              reduce using rule 77 (optional_semicolon -> empty .)
    E               reduce using rule 77 (optional_semicolon -> empty .)
    TRUE            reduce using rule 77 (optional_semicolon -> empty .)
    FALSE           reduce using rule 77 (optional_semicolon -> empty .)
    PRINT           reduce using rule 77 (optional_semicolon -> empty .)
    RANGE           reduce using rule 77 (optional_semicolon -> empty .)
    SQRT            reduce using rule 77 (optional_semicolon -> empty .)
    SIN             reduce using rule 77 (optional_semicolon -> empty .)
    COS             reduce using rule 77 (optional_semicolon -> empty .)
    EXP             reduce using rule 77 (optional_semicolon -> empty .)
    LOG             reduce using rule 77 (optional_semicolon -> empty .)
    RAND            reduce using rule 77 (optional_semicolon -> empty .)
    LBRACE          reduce using rule 77 (optional_semicolon -> empty .)
    NEW             reduce using rule 77 (optional_semicolon -> empty .)
    LPAREN          reduce using rule 77 (optional_semicolon -> empty .)
    LBRAC           reduce using rule 77 (optional_semicolon -> empty .)
    $end            reduce using rule 77 (optional_semicolon -> empty .)
    RBRACE          reduce using rule 77 (optional_semicolon -> empty .)


state 355

    (70) rem_assignments -> COMMA id ASIGN . expression rem_assignments
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 370
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 356

    (74) opt_elifs -> ELIF expression_parenthized expression opt_elifs .

    ELSE            reduce using rule 74 (opt_elifs -> ELIF expression_parenthized expression opt_elifs .)


state 357

    (79) expression -> FOR LPAREN destroyable IN expression RPAREN expression .
    (62) high_level_expression -> expression . SEMICOLON
    (109) high_level_expression -> expression . PLUS high_level_expression
    (110) high_level_expression -> expression . MINUS high_level_expression
    (111) high_level_expression -> expression . TIMES high_level_expression
    (112) high_level_expression -> expression . DIVIDE high_level_expression
    (113) high_level_expression -> expression . POWER high_level_expression
    (114) high_level_expression -> expression . MODULE high_level_expression
    (115) high_level_expression -> expression . CONCAT high_level_expression
    (116) high_level_expression -> expression . DOUBLECONCAT high_level_expression
    (117) high_level_expression -> expression . AND high_level_expression
    (118) high_level_expression -> expression . OR high_level_expression
    (119) high_level_expression -> expression . EQUAL high_level_expression
    (120) high_level_expression -> expression . DIFFERENT high_level_expression
    (121) high_level_expression -> expression . MINOREQUAL high_level_expression
    (122) high_level_expression -> expression . MAJOREQUAL high_level_expression
    (123) high_level_expression -> expression . MINOR high_level_expression
    (124) high_level_expression -> expression . MAJOR high_level_expression
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    SEMICOLON       reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    PLUS            reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MINUS           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    TIMES           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DIVIDE          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    POWER           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MODULE          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    CONCAT          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DOUBLECONCAT    reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    AND             reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    OR              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    EQUAL           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DIFFERENT       reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MINOREQUAL      reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MAJOREQUAL      reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MINOR           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MAJOR           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    IS              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    AS              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    LBRAC           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    ELIF            reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    ELSE            reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    RPAREN          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DOT             shift and go to state 73

  ! DOT             [ reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .) ]
  ! SEMICOLON       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! POWER           [ shift and go to state 58 ]
  ! MODULE          [ shift and go to state 59 ]
  ! CONCAT          [ shift and go to state 60 ]
  ! DOUBLECONCAT    [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! DIFFERENT       [ shift and go to state 65 ]
  ! MINOREQUAL      [ shift and go to state 66 ]
  ! MAJOREQUAL      [ shift and go to state 67 ]
  ! MINOR           [ shift and go to state 68 ]
  ! MAJOR           [ shift and go to state 69 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 358

    (78) high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .

    $end            reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    LET             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    IF              reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    FOR             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    WHILE           reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    NOT             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    MINUS           reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    ID              reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    NUMBER          reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    STRING          reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    PI              reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    E               reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    TRUE            reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    FALSE           reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    PRINT           reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    RANGE           reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    SQRT            reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    SIN             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    COS             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    EXP             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    LOG             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    RAND            reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    LBRACE          reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    NEW             reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    LPAREN          reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    LBRAC           reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    RBRACE          reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    FUNCTION        reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    TYPE            reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)
    PROTOCOL        reduce using rule 78 (high_level_expression -> FOR LPAREN destroyable IN expression RPAREN high_level_expression .)


state 359

    (73) expression -> IF expression_parenthized expression opt_elifs ELSE expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    LBRAC           reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    GENERATOR       reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    COMMA           reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    RBRAC           reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    ELIF            reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    ELSE            reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    IN              reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    DOT             shift and go to state 73

  ! PLUS            [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! TIMES           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! POWER           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MODULE          [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! CONCAT          [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DOUBLECONCAT    [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! AND             [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! OR              [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! EQUAL           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DIFFERENT       [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MINOREQUAL      [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MAJOREQUAL      [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MINOR           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! MAJOR           [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! IS              [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! AS              [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! DOT             [ reduce using rule 73 (expression -> IF expression_parenthized expression opt_elifs ELSE expression .) ]
  ! LBRAC           [ shift and go to state 72 ]


state 360

    (79) expression -> FOR LPAREN destroyable IN expression RPAREN . expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 81
    IF              shift and go to state 82
    FOR             shift and go to state 83
    WHILE           shift and go to state 84
    ID              shift and go to state 85
    NOT             shift and go to state 89
    MINUS           shift and go to state 86
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    NEW             shift and go to state 46
    LBRACE          shift and go to state 45
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    expression                     shift and go to state 371
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    expression_block               shift and go to state 80
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 87
    destroyabler                   shift and go to state 88
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 361

    (142) vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .

    SEMICOLON       reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    PLUS            reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    MINUS           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    TIMES           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    DIVIDE          reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    POWER           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    MODULE          reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    CONCAT          reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    DOUBLECONCAT    reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    AND             reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    OR              reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    EQUAL           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    DIFFERENT       reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    MINOREQUAL      reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    MAJOREQUAL      reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    MINOR           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    MAJOR           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    IS              reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    AS              reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    LBRAC           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    DOT             reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    RPAREN          reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    ELIF            reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    ELSE            reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    GENERATOR       reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    COMMA           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    RBRAC           reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)
    IN              reduce using rule 142 (vector -> LBRAC expression GENERATOR destroyable IN expression RBRAC .)


state 362

    (36) function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .

    FUNCTION        reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    TYPE            reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    PROTOCOL        reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    LET             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    IF              reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    FOR             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    WHILE           reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    NOT             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    MINUS           reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    ID              reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    NUMBER          reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    STRING          reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    PI              reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    E               reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    TRUE            reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    FALSE           reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    PRINT           reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    RANGE           reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    SQRT            reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    SIN             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    COS             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    EXP             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    LOG             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    RAND            reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    LBRACE          reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    NEW             reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    LPAREN          reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    LBRAC           reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    $end            reduce using rule 36 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)


state 363

    (37) function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .

    FUNCTION        reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    TYPE            reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    PROTOCOL        reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    LET             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    IF              reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    FOR             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    WHILE           reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    NOT             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    MINUS           reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    ID              reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    NUMBER          reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    STRING          reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    PI              reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    E               reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    TRUE            reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    FALSE           reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    PRINT           reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    RANGE           reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    SQRT            reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    SIN             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    COS             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    EXP             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    LOG             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    RAND            reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    LBRACE          reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    NEW             reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    LPAREN          reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    LBRAC           reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    $end            reduce using rule 37 (function_definition -> FUNCTION ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)


state 364

    (57) member_func -> ID LPAREN func_params . RPAREN type_of ARROW high_level_expression
    (58) member_func -> ID LPAREN func_params . RPAREN type_of expression_block optional_semicolon

    RPAREN          shift and go to state 372


state 365

    (43) type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .

    FUNCTION        reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    TYPE            reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    PROTOCOL        reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    LET             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    IF              reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    FOR             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    WHILE           reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    NOT             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    MINUS           reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    ID              reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    NUMBER          reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    STRING          reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    PI              reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    E               reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    TRUE            reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    FALSE           reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    PRINT           reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    RANGE           reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    SQRT            reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    SIN             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    COS             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    EXP             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    LOG             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    RAND            reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    LBRACE          reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    NEW             reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    LPAREN          reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    LBRAC           reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)
    $end            reduce using rule 43 (type_def -> TYPE ID optional_type_params optional_inheritance LBRACE type_members RBRACE optional_semicolon .)


state 366

    (60) member_var -> id ASIGN high_level_expression .

    ID              reduce using rule 60 (member_var -> id ASIGN high_level_expression .)
    RBRACE          reduce using rule 60 (member_var -> id ASIGN high_level_expression .)


state 367

    (46) optional_inheritance_params -> LPAREN func_call_args RPAREN .

    LBRACE          reduce using rule 46 (optional_inheritance_params -> LPAREN func_call_args RPAREN .)


state 368

    (23) protocol_methods_arguments -> ID DOUBLEDOTS . args protocol_methods_arguments_rem
    (18) args -> . ID
    (19) args -> . OBJECT
    (20) args -> . NUMBERTYPE
    (21) args -> . STRINGTYPE
    (22) args -> . BOOLEANTYPE

    ID              shift and go to state 157
    OBJECT          shift and go to state 158
    NUMBERTYPE      shift and go to state 159
    STRINGTYPE      shift and go to state 160
    BOOLEANTYPE     shift and go to state 161

    args                           shift and go to state 373

state 369

    (17) protocol_method -> ID LPAREN protocol_methods_arguments RPAREN . DOUBLEDOTS args SEMICOLON

    DOUBLEDOTS      shift and go to state 374


state 370

    (70) rem_assignments -> COMMA id ASIGN expression . rem_assignments
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut
    (70) rem_assignments -> . COMMA id ASIGN expression rem_assignments
    (71) rem_assignments -> . empty
    (1) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    POWER           shift and go to state 180
    MODULE          shift and go to state 181
    CONCAT          shift and go to state 182
    DOUBLECONCAT    shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185
    EQUAL           shift and go to state 186
    DIFFERENT       shift and go to state 187
    MINOREQUAL      shift and go to state 188
    MAJOREQUAL      shift and go to state 189
    MINOR           shift and go to state 190
    MAJOR           shift and go to state 191
    IS              shift and go to state 70
    AS              shift and go to state 71
    LBRAC           shift and go to state 72
    DOT             shift and go to state 73
    COMMA           shift and go to state 298
    IN              reduce using rule 1 (empty -> .)

    rem_assignments                shift and go to state 375
    empty                          shift and go to state 299

state 371

    (79) expression -> FOR LPAREN destroyable IN expression RPAREN expression .
    (89) expression -> expression . PLUS expression
    (90) expression -> expression . MINUS expression
    (91) expression -> expression . TIMES expression
    (92) expression -> expression . DIVIDE expression
    (93) expression -> expression . POWER expression
    (94) expression -> expression . MODULE expression
    (95) expression -> expression . CONCAT expression
    (96) expression -> expression . DOUBLECONCAT expression
    (97) expression -> expression . AND expression
    (98) expression -> expression . OR expression
    (99) expression -> expression . EQUAL expression
    (100) expression -> expression . DIFFERENT expression
    (101) expression -> expression . MINOREQUAL expression
    (102) expression -> expression . MAJOREQUAL expression
    (103) expression -> expression . MINOR expression
    (104) expression -> expression . MAJOR expression
    (105) expression -> expression . IS type_test
    (106) expression -> expression . AS type_test
    (143) expression -> expression . LBRAC expression RBRAC
    (130) member_resolute -> expression . DOT member_resolut

    RPAREN          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    PLUS            reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MINUS           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    TIMES           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DIVIDE          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    POWER           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MODULE          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    CONCAT          reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DOUBLECONCAT    reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    AND             reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    OR              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    EQUAL           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DIFFERENT       reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MINOREQUAL      reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MAJOREQUAL      reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MINOR           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    MAJOR           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    IS              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    AS              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    LBRAC           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    GENERATOR       reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    COMMA           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    RBRAC           reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    ELIF            reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    ELSE            reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    IN              reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .)
    DOT             shift and go to state 73

  ! DOT             [ reduce using rule 79 (expression -> FOR LPAREN destroyable IN expression RPAREN expression .) ]
  ! PLUS            [ shift and go to state 176 ]
  ! MINUS           [ shift and go to state 177 ]
  ! TIMES           [ shift and go to state 178 ]
  ! DIVIDE          [ shift and go to state 179 ]
  ! POWER           [ shift and go to state 180 ]
  ! MODULE          [ shift and go to state 181 ]
  ! CONCAT          [ shift and go to state 182 ]
  ! DOUBLECONCAT    [ shift and go to state 183 ]
  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]
  ! EQUAL           [ shift and go to state 186 ]
  ! DIFFERENT       [ shift and go to state 187 ]
  ! MINOREQUAL      [ shift and go to state 188 ]
  ! MAJOREQUAL      [ shift and go to state 189 ]
  ! MINOR           [ shift and go to state 190 ]
  ! MAJOR           [ shift and go to state 191 ]
  ! IS              [ shift and go to state 70 ]
  ! AS              [ shift and go to state 71 ]
  ! LBRAC           [ shift and go to state 72 ]


state 372

    (57) member_func -> ID LPAREN func_params RPAREN . type_of ARROW high_level_expression
    (58) member_func -> ID LPAREN func_params RPAREN . type_of expression_block optional_semicolon
    (2) type_of -> . DOUBLEDOTS args
    (3) type_of -> . empty
    (1) empty -> .

    DOUBLEDOTS      shift and go to state 170
    ARROW           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    type_of                        shift and go to state 376
    empty                          shift and go to state 171

state 373

    (23) protocol_methods_arguments -> ID DOUBLEDOTS args . protocol_methods_arguments_rem
    (25) protocol_methods_arguments_rem -> . COMMA ID DOUBLEDOTS args protocol_methods_arguments_rem
    (26) protocol_methods_arguments_rem -> . empty
    (1) empty -> .

    COMMA           shift and go to state 378
    RPAREN          reduce using rule 1 (empty -> .)

    protocol_methods_arguments_rem shift and go to state 377
    empty                          shift and go to state 379

state 374

    (17) protocol_method -> ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS . args SEMICOLON
    (18) args -> . ID
    (19) args -> . OBJECT
    (20) args -> . NUMBERTYPE
    (21) args -> . STRINGTYPE
    (22) args -> . BOOLEANTYPE

    ID              shift and go to state 157
    OBJECT          shift and go to state 158
    NUMBERTYPE      shift and go to state 159
    STRINGTYPE      shift and go to state 160
    BOOLEANTYPE     shift and go to state 161

    args                           shift and go to state 380

state 375

    (70) rem_assignments -> COMMA id ASIGN expression rem_assignments .

    IN              reduce using rule 70 (rem_assignments -> COMMA id ASIGN expression rem_assignments .)


state 376

    (57) member_func -> ID LPAREN func_params RPAREN type_of . ARROW high_level_expression
    (58) member_func -> ID LPAREN func_params RPAREN type_of . expression_block optional_semicolon
    (64) expression_block -> . LBRACE expression_block_list RBRACE

    ARROW           shift and go to state 381
    LBRACE          shift and go to state 45

    expression_block               shift and go to state 382

state 377

    (23) protocol_methods_arguments -> ID DOUBLEDOTS args protocol_methods_arguments_rem .

    RPAREN          reduce using rule 23 (protocol_methods_arguments -> ID DOUBLEDOTS args protocol_methods_arguments_rem .)


state 378

    (25) protocol_methods_arguments_rem -> COMMA . ID DOUBLEDOTS args protocol_methods_arguments_rem

    ID              shift and go to state 383


state 379

    (26) protocol_methods_arguments_rem -> empty .

    RPAREN          reduce using rule 26 (protocol_methods_arguments_rem -> empty .)


state 380

    (17) protocol_method -> ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args . SEMICOLON

    SEMICOLON       shift and go to state 384


state 381

    (57) member_func -> ID LPAREN func_params RPAREN type_of ARROW . high_level_expression
    (62) high_level_expression -> . expression SEMICOLON
    (63) high_level_expression -> . expression_block
    (67) high_level_expression -> . LET assign_values IN high_level_expression
    (72) high_level_expression -> . IF expression_parenthized expression opt_elifs ELSE high_level_expression
    (78) high_level_expression -> . FOR LPAREN destroyable IN expression RPAREN high_level_expression
    (80) high_level_expression -> . WHILE expression_parenthized high_level_expression
    (109) high_level_expression -> . expression PLUS high_level_expression
    (110) high_level_expression -> . expression MINUS high_level_expression
    (111) high_level_expression -> . expression TIMES high_level_expression
    (112) high_level_expression -> . expression DIVIDE high_level_expression
    (113) high_level_expression -> . expression POWER high_level_expression
    (114) high_level_expression -> . expression MODULE high_level_expression
    (115) high_level_expression -> . expression CONCAT high_level_expression
    (116) high_level_expression -> . expression DOUBLECONCAT high_level_expression
    (117) high_level_expression -> . expression AND high_level_expression
    (118) high_level_expression -> . expression OR high_level_expression
    (119) high_level_expression -> . expression EQUAL high_level_expression
    (120) high_level_expression -> . expression DIFFERENT high_level_expression
    (121) high_level_expression -> . expression MINOREQUAL high_level_expression
    (122) high_level_expression -> . expression MAJOREQUAL high_level_expression
    (123) high_level_expression -> . expression MINOR high_level_expression
    (124) high_level_expression -> . expression MAJOR high_level_expression
    (125) high_level_expression -> . destroyablel DESTRUCTASIGN high_level_expression
    (126) high_level_expression -> . destroyabler DESTRUCTASIGN high_level_expression
    (135) high_level_expression -> . NOT high_level_expression
    (136) high_level_expression -> . MINUS high_level_expression
    (27) expression -> . func_call_next
    (29) expression -> . type_call
    (61) expression -> . expression_block
    (68) expression -> . LET assign_values IN expression
    (73) expression -> . IF expression_parenthized expression opt_elifs ELSE expression
    (79) expression -> . FOR LPAREN destroyable IN expression RPAREN expression
    (81) expression -> . WHILE expression_parenthized expression
    (82) expression -> . expression_parenthized
    (86) expression -> . ID DOT member_resolut
    (89) expression -> . expression PLUS expression
    (90) expression -> . expression MINUS expression
    (91) expression -> . expression TIMES expression
    (92) expression -> . expression DIVIDE expression
    (93) expression -> . expression POWER expression
    (94) expression -> . expression MODULE expression
    (95) expression -> . expression CONCAT expression
    (96) expression -> . expression DOUBLECONCAT expression
    (97) expression -> . expression AND expression
    (98) expression -> . expression OR expression
    (99) expression -> . expression EQUAL expression
    (100) expression -> . expression DIFFERENT expression
    (101) expression -> . expression MINOREQUAL expression
    (102) expression -> . expression MAJOREQUAL expression
    (103) expression -> . expression MINOR expression
    (104) expression -> . expression MAJOR expression
    (105) expression -> . expression IS type_test
    (106) expression -> . expression AS type_test
    (107) expression -> . destroyablel DESTRUCTASIGN expression
    (108) expression -> . destroyabler DESTRUCTASIGN expression
    (129) expression -> . member_resolute
    (133) expression -> . NOT expression
    (134) expression -> . MINUS expression
    (137) expression -> . NUMBER
    (138) expression -> . STRING
    (139) expression -> . ID
    (140) expression -> . vector
    (143) expression -> . expression LBRAC expression RBRAC
    (144) expression -> . PI
    (145) expression -> . E
    (146) expression -> . TRUE
    (147) expression -> . FALSE
    (148) expression -> . PRINT LPAREN expression RPAREN
    (149) expression -> . RANGE LPAREN expression RPAREN
    (150) expression -> . RANGE LPAREN expression COMMA expression RPAREN
    (151) expression -> . SQRT LPAREN expression RPAREN
    (152) expression -> . SIN LPAREN expression RPAREN
    (153) expression -> . COS LPAREN expression RPAREN
    (154) expression -> . EXP LPAREN expression RPAREN
    (155) expression -> . LOG LPAREN expression COMMA expression RPAREN
    (156) expression -> . RAND LPAREN RPAREN
    (64) expression_block -> . LBRACE expression_block_list RBRACE
    (84) destroyablel -> . ID
    (85) destroyablel -> . ID DOT ID
    (87) destroyabler -> . ID LBRAC expression RBRAC
    (88) destroyabler -> . ID DOT ID LBRAC expression RBRAC
    (28) func_call_next -> . ID LPAREN func_call_args RPAREN
    (30) type_call -> . NEW ID LPAREN func_call_args RPAREN
    (83) expression_parenthized -> . LPAREN expression RPAREN
    (130) member_resolute -> . expression DOT member_resolut
    (141) vector -> . LBRAC func_call_args RBRAC
    (142) vector -> . LBRAC expression GENERATOR destroyable IN expression RBRAC

    LET             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 21
    ID              shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    PI              shift and go to state 33
    E               shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    PRINT           shift and go to state 37
    RANGE           shift and go to state 38
    SQRT            shift and go to state 39
    SIN             shift and go to state 40
    COS             shift and go to state 41
    EXP             shift and go to state 42
    LOG             shift and go to state 43
    RAND            shift and go to state 44
    LBRACE          shift and go to state 45
    NEW             shift and go to state 46
    LPAREN          shift and go to state 19
    LBRAC           shift and go to state 32

    high_level_expression          shift and go to state 385
    expression                     shift and go to state 13
    expression_block               shift and go to state 14
    expression_parenthized         shift and go to state 17
    destroyablel                   shift and go to state 22
    destroyabler                   shift and go to state 23
    func_call_next                 shift and go to state 25
    type_call                      shift and go to state 26
    member_resolute                shift and go to state 28
    vector                         shift and go to state 31

state 382

    (58) member_func -> ID LPAREN func_params RPAREN type_of expression_block . optional_semicolon
    (76) optional_semicolon -> . SEMICOLON
    (77) optional_semicolon -> . empty
    (1) empty -> .

    SEMICOLON       shift and go to state 353
    ID              reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    optional_semicolon             shift and go to state 386
    empty                          shift and go to state 354

state 383

    (25) protocol_methods_arguments_rem -> COMMA ID . DOUBLEDOTS args protocol_methods_arguments_rem

    DOUBLEDOTS      shift and go to state 387


state 384

    (17) protocol_method -> ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON .

    ID              reduce using rule 17 (protocol_method -> ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON .)
    RBRACE          reduce using rule 17 (protocol_method -> ID LPAREN protocol_methods_arguments RPAREN DOUBLEDOTS args SEMICOLON .)


state 385

    (57) member_func -> ID LPAREN func_params RPAREN type_of ARROW high_level_expression .

    ID              reduce using rule 57 (member_func -> ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)
    RBRACE          reduce using rule 57 (member_func -> ID LPAREN func_params RPAREN type_of ARROW high_level_expression .)


state 386

    (58) member_func -> ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .

    ID              reduce using rule 58 (member_func -> ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)
    RBRACE          reduce using rule 58 (member_func -> ID LPAREN func_params RPAREN type_of expression_block optional_semicolon .)


state 387

    (25) protocol_methods_arguments_rem -> COMMA ID DOUBLEDOTS . args protocol_methods_arguments_rem
    (18) args -> . ID
    (19) args -> . OBJECT
    (20) args -> . NUMBERTYPE
    (21) args -> . STRINGTYPE
    (22) args -> . BOOLEANTYPE

    ID              shift and go to state 157
    OBJECT          shift and go to state 158
    NUMBERTYPE      shift and go to state 159
    STRINGTYPE      shift and go to state 160
    BOOLEANTYPE     shift and go to state 161

    args                           shift and go to state 388

state 388

    (25) protocol_methods_arguments_rem -> COMMA ID DOUBLEDOTS args . protocol_methods_arguments_rem
    (25) protocol_methods_arguments_rem -> . COMMA ID DOUBLEDOTS args protocol_methods_arguments_rem
    (26) protocol_methods_arguments_rem -> . empty
    (1) empty -> .

    COMMA           shift and go to state 378
    RPAREN          reduce using rule 1 (empty -> .)

    protocol_methods_arguments_rem shift and go to state 389
    empty                          shift and go to state 379

state 389

    (25) protocol_methods_arguments_rem -> COMMA ID DOUBLEDOTS args protocol_methods_arguments_rem .

    RPAREN          reduce using rule 25 (protocol_methods_arguments_rem -> COMMA ID DOUBLEDOTS args protocol_methods_arguments_rem .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 14 resolved using rule (expression -> expression_block)
WARNING: rejected rule (high_level_expression -> expression_block) in state 14
